/* This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/. */

#include "gto_kit/vr.hpp"

#include "gto_kit/os1_constants.hpp"

namespace niedoida {
    namespace gto {
        void vr18(const double alpha_over_p,
                  const double one_over_two_p,
                  const unsigned m,
                  const double X_PA,
                  const double Y_PA,
                  const double Z_PA,
                  const double alpha_X,
                  const double alpha_Y,
                  const double alpha_Z,
                  double* NIEDOIDA_RESTRICT b)
        {
            *(b + 1 * OS1_S1 + 17) = X_PA * *(b + 0 * OS1_S1 + 17) + alpha_X * *(b + 0 * OS1_S1 + 18);
            *(b + 2 * OS1_S1 + 17) = Y_PA * *(b + 0 * OS1_S1 + 17) + alpha_Y * *(b + 0 * OS1_S1 + 18);
            *(b + 3 * OS1_S1 + 17) = Z_PA * *(b + 0 * OS1_S1 + 17) + alpha_Z * *(b + 0 * OS1_S1 + 18);
            *(b + 4 * OS1_S1 + 16) = X_PA * *(b + 1 * OS1_S1 + 16) + alpha_X * *(b + 1 * OS1_S1 + 17) + one_over_two_p * (*(b + 0 * OS1_S1 + 16) - alpha_over_p * *(b + 0 * OS1_S1 + 17));
            *(b + 7 * OS1_S1 + 16) = Y_PA * *(b + 2 * OS1_S1 + 16) + alpha_Y * *(b + 2 * OS1_S1 + 17) + one_over_two_p * (*(b + 0 * OS1_S1 + 16) - alpha_over_p * *(b + 0 * OS1_S1 + 17));
            *(b + 9 * OS1_S1 + 16) = Z_PA * *(b + 3 * OS1_S1 + 16) + alpha_Z * *(b + 3 * OS1_S1 + 17) + one_over_two_p * (*(b + 0 * OS1_S1 + 16) - alpha_over_p * *(b + 0 * OS1_S1 + 17));
            *(b + 10 * OS1_S1 + 15) = X_PA * *(b + 4 * OS1_S1 + 15) + alpha_X * *(b + 4 * OS1_S1 + 16) + 2 * one_over_two_p * (*(b + 1 * OS1_S1 + 15) - alpha_over_p * *(b + 1 * OS1_S1 + 16));
            *(b + 16 * OS1_S1 + 15) = Y_PA * *(b + 7 * OS1_S1 + 15) + alpha_Y * *(b + 7 * OS1_S1 + 16) + 2 * one_over_two_p * (*(b + 2 * OS1_S1 + 15) - alpha_over_p * *(b + 2 * OS1_S1 + 16));
            *(b + 19 * OS1_S1 + 15) = Z_PA * *(b + 9 * OS1_S1 + 15) + alpha_Z * *(b + 9 * OS1_S1 + 16) + 2 * one_over_two_p * (*(b + 3 * OS1_S1 + 15) - alpha_over_p * *(b + 3 * OS1_S1 + 16));
            *(b + 20 * OS1_S1 + 14) = X_PA * *(b + 10 * OS1_S1 + 14) + alpha_X * *(b + 10 * OS1_S1 + 15) + 3 * one_over_two_p * (*(b + 4 * OS1_S1 + 14) - alpha_over_p * *(b + 4 * OS1_S1 + 15));
            *(b + 30 * OS1_S1 + 14) = Y_PA * *(b + 16 * OS1_S1 + 14) + alpha_Y * *(b + 16 * OS1_S1 + 15) + 3 * one_over_two_p * (*(b + 7 * OS1_S1 + 14) - alpha_over_p * *(b + 7 * OS1_S1 + 15));
            *(b + 34 * OS1_S1 + 14) = Z_PA * *(b + 19 * OS1_S1 + 14) + alpha_Z * *(b + 19 * OS1_S1 + 15) + 3 * one_over_two_p * (*(b + 9 * OS1_S1 + 14) - alpha_over_p * *(b + 9 * OS1_S1 + 15));
            *(b + 35 * OS1_S1 + 13) = X_PA * *(b + 20 * OS1_S1 + 13) + alpha_X * *(b + 20 * OS1_S1 + 14) + 4 * one_over_two_p * (*(b + 10 * OS1_S1 + 13) - alpha_over_p * *(b + 10 * OS1_S1 + 14));
            *(b + 50 * OS1_S1 + 13) = Y_PA * *(b + 30 * OS1_S1 + 13) + alpha_Y * *(b + 30 * OS1_S1 + 14) + 4 * one_over_two_p * (*(b + 16 * OS1_S1 + 13) - alpha_over_p * *(b + 16 * OS1_S1 + 14));
            *(b + 55 * OS1_S1 + 13) = Z_PA * *(b + 34 * OS1_S1 + 13) + alpha_Z * *(b + 34 * OS1_S1 + 14) + 4 * one_over_two_p * (*(b + 19 * OS1_S1 + 13) - alpha_over_p * *(b + 19 * OS1_S1 + 14));
            *(b + 56 * OS1_S1 + 12) = X_PA * *(b + 35 * OS1_S1 + 12) + alpha_X * *(b + 35 * OS1_S1 + 13) + 5 * one_over_two_p * (*(b + 20 * OS1_S1 + 12) - alpha_over_p * *(b + 20 * OS1_S1 + 13));
            *(b + 77 * OS1_S1 + 12) = Y_PA * *(b + 50 * OS1_S1 + 12) + alpha_Y * *(b + 50 * OS1_S1 + 13) + 5 * one_over_two_p * (*(b + 30 * OS1_S1 + 12) - alpha_over_p * *(b + 30 * OS1_S1 + 13));
            *(b + 83 * OS1_S1 + 12) = Z_PA * *(b + 55 * OS1_S1 + 12) + alpha_Z * *(b + 55 * OS1_S1 + 13) + 5 * one_over_two_p * (*(b + 34 * OS1_S1 + 12) - alpha_over_p * *(b + 34 * OS1_S1 + 13));
            *(b + 84 * OS1_S1 + 11) = X_PA * *(b + 56 * OS1_S1 + 11) + alpha_X * *(b + 56 * OS1_S1 + 12) + 6 * one_over_two_p * (*(b + 35 * OS1_S1 + 11) - alpha_over_p * *(b + 35 * OS1_S1 + 12));
            *(b + 85 * OS1_S1 + 11) = Y_PA * *(b + 56 * OS1_S1 + 11) + alpha_Y * *(b + 56 * OS1_S1 + 12);
            *(b + 112 * OS1_S1 + 11) = Y_PA * *(b + 77 * OS1_S1 + 11) + alpha_Y * *(b + 77 * OS1_S1 + 12) + 6 * one_over_two_p * (*(b + 50 * OS1_S1 + 11) - alpha_over_p * *(b + 50 * OS1_S1 + 12));
            *(b + 119 * OS1_S1 + 11) = Z_PA * *(b + 83 * OS1_S1 + 11) + alpha_Z * *(b + 83 * OS1_S1 + 12) + 6 * one_over_two_p * (*(b + 55 * OS1_S1 + 11) - alpha_over_p * *(b + 55 * OS1_S1 + 12));
            *(b + 120 * OS1_S1 + 10) = X_PA * *(b + 84 * OS1_S1 + 10) + alpha_X * *(b + 84 * OS1_S1 + 11) + 7 * one_over_two_p * (*(b + 56 * OS1_S1 + 10) - alpha_over_p * *(b + 56 * OS1_S1 + 11));
            *(b + 121 * OS1_S1 + 10) = Y_PA * *(b + 84 * OS1_S1 + 10) + alpha_Y * *(b + 84 * OS1_S1 + 11);
            *(b + 122 * OS1_S1 + 10) = Z_PA * *(b + 84 * OS1_S1 + 10) + alpha_Z * *(b + 84 * OS1_S1 + 11);
            *(b + 123 * OS1_S1 + 10) = Y_PA * *(b + 85 * OS1_S1 + 10) + alpha_Y * *(b + 85 * OS1_S1 + 11) + one_over_two_p * (*(b + 56 * OS1_S1 + 10) - alpha_over_p * *(b + 56 * OS1_S1 + 11));
            *(b + 148 * OS1_S1 + 10) = X_PA * *(b + 112 * OS1_S1 + 10) + alpha_X * *(b + 112 * OS1_S1 + 11);
            *(b + 155 * OS1_S1 + 10) = X_PA * *(b + 119 * OS1_S1 + 10) + alpha_X * *(b + 119 * OS1_S1 + 11);
            *(b + 156 * OS1_S1 + 10) = Y_PA * *(b + 112 * OS1_S1 + 10) + alpha_Y * *(b + 112 * OS1_S1 + 11) + 7 * one_over_two_p * (*(b + 77 * OS1_S1 + 10) - alpha_over_p * *(b + 77 * OS1_S1 + 11));
            *(b + 157 * OS1_S1 + 10) = Z_PA * *(b + 112 * OS1_S1 + 10) + alpha_Z * *(b + 112 * OS1_S1 + 11);
            *(b + 163 * OS1_S1 + 10) = Y_PA * *(b + 119 * OS1_S1 + 10) + alpha_Y * *(b + 119 * OS1_S1 + 11);
            *(b + 164 * OS1_S1 + 10) = Z_PA * *(b + 119 * OS1_S1 + 10) + alpha_Z * *(b + 119 * OS1_S1 + 11) + 7 * one_over_two_p * (*(b + 83 * OS1_S1 + 10) - alpha_over_p * *(b + 83 * OS1_S1 + 11));
            *(b + 165 * OS1_S1 + 9) = X_PA * *(b + 120 * OS1_S1 + 9) + alpha_X * *(b + 120 * OS1_S1 + 10) + 8 * one_over_two_p * (*(b + 84 * OS1_S1 + 9) - alpha_over_p * *(b + 84 * OS1_S1 + 10));
            *(b + 166 * OS1_S1 + 9) = Y_PA * *(b + 120 * OS1_S1 + 9) + alpha_Y * *(b + 120 * OS1_S1 + 10);
            *(b + 167 * OS1_S1 + 9) = Z_PA * *(b + 120 * OS1_S1 + 9) + alpha_Z * *(b + 120 * OS1_S1 + 10);
            *(b + 168 * OS1_S1 + 9) = Y_PA * *(b + 121 * OS1_S1 + 9) + alpha_Y * *(b + 121 * OS1_S1 + 10) + one_over_two_p * (*(b + 84 * OS1_S1 + 9) - alpha_over_p * *(b + 84 * OS1_S1 + 10));
            *(b + 170 * OS1_S1 + 9) = Z_PA * *(b + 122 * OS1_S1 + 9) + alpha_Z * *(b + 122 * OS1_S1 + 10) + one_over_two_p * (*(b + 84 * OS1_S1 + 9) - alpha_over_p * *(b + 84 * OS1_S1 + 10));
            *(b + 171 * OS1_S1 + 9) = Y_PA * *(b + 123 * OS1_S1 + 9) + alpha_Y * *(b + 123 * OS1_S1 + 10) + 2 * one_over_two_p * (*(b + 85 * OS1_S1 + 9) - alpha_over_p * *(b + 85 * OS1_S1 + 10));
            *(b + 193 * OS1_S1 + 9) = X_PA * *(b + 148 * OS1_S1 + 9) + alpha_X * *(b + 148 * OS1_S1 + 10) + one_over_two_p * (*(b + 112 * OS1_S1 + 9) - alpha_over_p * *(b + 112 * OS1_S1 + 10));
            *(b + 200 * OS1_S1 + 9) = X_PA * *(b + 155 * OS1_S1 + 9) + alpha_X * *(b + 155 * OS1_S1 + 10) + one_over_two_p * (*(b + 119 * OS1_S1 + 9) - alpha_over_p * *(b + 119 * OS1_S1 + 10));
            *(b + 201 * OS1_S1 + 9) = X_PA * *(b + 156 * OS1_S1 + 9) + alpha_X * *(b + 156 * OS1_S1 + 10);
            *(b + 209 * OS1_S1 + 9) = X_PA * *(b + 164 * OS1_S1 + 9) + alpha_X * *(b + 164 * OS1_S1 + 10);
            *(b + 210 * OS1_S1 + 9) = Y_PA * *(b + 156 * OS1_S1 + 9) + alpha_Y * *(b + 156 * OS1_S1 + 10) + 8 * one_over_two_p * (*(b + 112 * OS1_S1 + 9) - alpha_over_p * *(b + 112 * OS1_S1 + 10));
            *(b + 211 * OS1_S1 + 9) = Z_PA * *(b + 156 * OS1_S1 + 9) + alpha_Z * *(b + 156 * OS1_S1 + 10);
            *(b + 212 * OS1_S1 + 9) = Z_PA * *(b + 157 * OS1_S1 + 9) + alpha_Z * *(b + 157 * OS1_S1 + 10) + one_over_two_p * (*(b + 112 * OS1_S1 + 9) - alpha_over_p * *(b + 112 * OS1_S1 + 10));
            *(b + 217 * OS1_S1 + 9) = Y_PA * *(b + 163 * OS1_S1 + 9) + alpha_Y * *(b + 163 * OS1_S1 + 10) + one_over_two_p * (*(b + 119 * OS1_S1 + 9) - alpha_over_p * *(b + 119 * OS1_S1 + 10));
            *(b + 218 * OS1_S1 + 9) = Y_PA * *(b + 164 * OS1_S1 + 9) + alpha_Y * *(b + 164 * OS1_S1 + 10);
            *(b + 219 * OS1_S1 + 9) = Z_PA * *(b + 164 * OS1_S1 + 9) + alpha_Z * *(b + 164 * OS1_S1 + 10) + 8 * one_over_two_p * (*(b + 119 * OS1_S1 + 9) - alpha_over_p * *(b + 119 * OS1_S1 + 10));
            *(b + 220 * OS1_S1 + 8) = X_PA * *(b + 165 * OS1_S1 + 8) + alpha_X * *(b + 165 * OS1_S1 + 9) + 9 * one_over_two_p * (*(b + 120 * OS1_S1 + 8) - alpha_over_p * *(b + 120 * OS1_S1 + 9));
            *(b + 221 * OS1_S1 + 8) = Y_PA * *(b + 165 * OS1_S1 + 8) + alpha_Y * *(b + 165 * OS1_S1 + 9);
            *(b + 222 * OS1_S1 + 8) = Z_PA * *(b + 165 * OS1_S1 + 8) + alpha_Z * *(b + 165 * OS1_S1 + 9);
            *(b + 223 * OS1_S1 + 8) = Y_PA * *(b + 166 * OS1_S1 + 8) + alpha_Y * *(b + 166 * OS1_S1 + 9) + one_over_two_p * (*(b + 120 * OS1_S1 + 8) - alpha_over_p * *(b + 120 * OS1_S1 + 9));
            *(b + 225 * OS1_S1 + 8) = Z_PA * *(b + 167 * OS1_S1 + 8) + alpha_Z * *(b + 167 * OS1_S1 + 9) + one_over_two_p * (*(b + 120 * OS1_S1 + 8) - alpha_over_p * *(b + 120 * OS1_S1 + 9));
            *(b + 226 * OS1_S1 + 8) = Y_PA * *(b + 168 * OS1_S1 + 8) + alpha_Y * *(b + 168 * OS1_S1 + 9) + 2 * one_over_two_p * (*(b + 121 * OS1_S1 + 8) - alpha_over_p * *(b + 121 * OS1_S1 + 9));
            *(b + 229 * OS1_S1 + 8) = Z_PA * *(b + 170 * OS1_S1 + 8) + alpha_Z * *(b + 170 * OS1_S1 + 9) + 2 * one_over_two_p * (*(b + 122 * OS1_S1 + 8) - alpha_over_p * *(b + 122 * OS1_S1 + 9));
            *(b + 230 * OS1_S1 + 8) = Y_PA * *(b + 171 * OS1_S1 + 8) + alpha_Y * *(b + 171 * OS1_S1 + 9) + 3 * one_over_two_p * (*(b + 123 * OS1_S1 + 8) - alpha_over_p * *(b + 123 * OS1_S1 + 9));
            *(b + 248 * OS1_S1 + 8) = X_PA * *(b + 193 * OS1_S1 + 8) + alpha_X * *(b + 193 * OS1_S1 + 9) + 2 * one_over_two_p * (*(b + 148 * OS1_S1 + 8) - alpha_over_p * *(b + 148 * OS1_S1 + 9));
            *(b + 255 * OS1_S1 + 8) = X_PA * *(b + 200 * OS1_S1 + 8) + alpha_X * *(b + 200 * OS1_S1 + 9) + 2 * one_over_two_p * (*(b + 155 * OS1_S1 + 8) - alpha_over_p * *(b + 155 * OS1_S1 + 9));
            *(b + 256 * OS1_S1 + 8) = X_PA * *(b + 201 * OS1_S1 + 8) + alpha_X * *(b + 201 * OS1_S1 + 9) + one_over_two_p * (*(b + 156 * OS1_S1 + 8) - alpha_over_p * *(b + 156 * OS1_S1 + 9));
            *(b + 264 * OS1_S1 + 8) = X_PA * *(b + 209 * OS1_S1 + 8) + alpha_X * *(b + 209 * OS1_S1 + 9) + one_over_two_p * (*(b + 164 * OS1_S1 + 8) - alpha_over_p * *(b + 164 * OS1_S1 + 9));
            *(b + 265 * OS1_S1 + 8) = X_PA * *(b + 210 * OS1_S1 + 8) + alpha_X * *(b + 210 * OS1_S1 + 9);
            *(b + 274 * OS1_S1 + 8) = X_PA * *(b + 219 * OS1_S1 + 8) + alpha_X * *(b + 219 * OS1_S1 + 9);
            *(b + 275 * OS1_S1 + 8) = Y_PA * *(b + 210 * OS1_S1 + 8) + alpha_Y * *(b + 210 * OS1_S1 + 9) + 9 * one_over_two_p * (*(b + 156 * OS1_S1 + 8) - alpha_over_p * *(b + 156 * OS1_S1 + 9));
            *(b + 276 * OS1_S1 + 8) = Z_PA * *(b + 210 * OS1_S1 + 8) + alpha_Z * *(b + 210 * OS1_S1 + 9);
            *(b + 277 * OS1_S1 + 8) = Z_PA * *(b + 211 * OS1_S1 + 8) + alpha_Z * *(b + 211 * OS1_S1 + 9) + one_over_two_p * (*(b + 156 * OS1_S1 + 8) - alpha_over_p * *(b + 156 * OS1_S1 + 9));
            *(b + 278 * OS1_S1 + 8) = Z_PA * *(b + 212 * OS1_S1 + 8) + alpha_Z * *(b + 212 * OS1_S1 + 9) + 2 * one_over_two_p * (*(b + 157 * OS1_S1 + 8) - alpha_over_p * *(b + 157 * OS1_S1 + 9));
            *(b + 282 * OS1_S1 + 8) = Y_PA * *(b + 217 * OS1_S1 + 8) + alpha_Y * *(b + 217 * OS1_S1 + 9) + 2 * one_over_two_p * (*(b + 163 * OS1_S1 + 8) - alpha_over_p * *(b + 163 * OS1_S1 + 9));
            *(b + 283 * OS1_S1 + 8) = Y_PA * *(b + 218 * OS1_S1 + 8) + alpha_Y * *(b + 218 * OS1_S1 + 9) + one_over_two_p * (*(b + 164 * OS1_S1 + 8) - alpha_over_p * *(b + 164 * OS1_S1 + 9));
            *(b + 284 * OS1_S1 + 8) = Y_PA * *(b + 219 * OS1_S1 + 8) + alpha_Y * *(b + 219 * OS1_S1 + 9);
            *(b + 285 * OS1_S1 + 8) = Z_PA * *(b + 219 * OS1_S1 + 8) + alpha_Z * *(b + 219 * OS1_S1 + 9) + 9 * one_over_two_p * (*(b + 164 * OS1_S1 + 8) - alpha_over_p * *(b + 164 * OS1_S1 + 9));
            *(b + 286 * OS1_S1 + 7) = X_PA * *(b + 220 * OS1_S1 + 7) + alpha_X * *(b + 220 * OS1_S1 + 8) + 10 * one_over_two_p * (*(b + 165 * OS1_S1 + 7) - alpha_over_p * *(b + 165 * OS1_S1 + 8));
            *(b + 287 * OS1_S1 + 7) = Y_PA * *(b + 220 * OS1_S1 + 7) + alpha_Y * *(b + 220 * OS1_S1 + 8);
            *(b + 288 * OS1_S1 + 7) = Z_PA * *(b + 220 * OS1_S1 + 7) + alpha_Z * *(b + 220 * OS1_S1 + 8);
            *(b + 289 * OS1_S1 + 7) = Y_PA * *(b + 221 * OS1_S1 + 7) + alpha_Y * *(b + 221 * OS1_S1 + 8) + one_over_two_p * (*(b + 165 * OS1_S1 + 7) - alpha_over_p * *(b + 165 * OS1_S1 + 8));
            *(b + 291 * OS1_S1 + 7) = Z_PA * *(b + 222 * OS1_S1 + 7) + alpha_Z * *(b + 222 * OS1_S1 + 8) + one_over_two_p * (*(b + 165 * OS1_S1 + 7) - alpha_over_p * *(b + 165 * OS1_S1 + 8));
            *(b + 292 * OS1_S1 + 7) = Y_PA * *(b + 223 * OS1_S1 + 7) + alpha_Y * *(b + 223 * OS1_S1 + 8) + 2 * one_over_two_p * (*(b + 166 * OS1_S1 + 7) - alpha_over_p * *(b + 166 * OS1_S1 + 8));
            *(b + 295 * OS1_S1 + 7) = Z_PA * *(b + 225 * OS1_S1 + 7) + alpha_Z * *(b + 225 * OS1_S1 + 8) + 2 * one_over_two_p * (*(b + 167 * OS1_S1 + 7) - alpha_over_p * *(b + 167 * OS1_S1 + 8));
            *(b + 296 * OS1_S1 + 7) = Y_PA * *(b + 226 * OS1_S1 + 7) + alpha_Y * *(b + 226 * OS1_S1 + 8) + 3 * one_over_two_p * (*(b + 168 * OS1_S1 + 7) - alpha_over_p * *(b + 168 * OS1_S1 + 8));
            *(b + 300 * OS1_S1 + 7) = Z_PA * *(b + 229 * OS1_S1 + 7) + alpha_Z * *(b + 229 * OS1_S1 + 8) + 3 * one_over_two_p * (*(b + 170 * OS1_S1 + 7) - alpha_over_p * *(b + 170 * OS1_S1 + 8));
            *(b + 301 * OS1_S1 + 7) = Y_PA * *(b + 230 * OS1_S1 + 7) + alpha_Y * *(b + 230 * OS1_S1 + 8) + 4 * one_over_two_p * (*(b + 171 * OS1_S1 + 7) - alpha_over_p * *(b + 171 * OS1_S1 + 8));
            *(b + 314 * OS1_S1 + 7) = X_PA * *(b + 248 * OS1_S1 + 7) + alpha_X * *(b + 248 * OS1_S1 + 8) + 3 * one_over_two_p * (*(b + 193 * OS1_S1 + 7) - alpha_over_p * *(b + 193 * OS1_S1 + 8));
            *(b + 321 * OS1_S1 + 7) = X_PA * *(b + 255 * OS1_S1 + 7) + alpha_X * *(b + 255 * OS1_S1 + 8) + 3 * one_over_two_p * (*(b + 200 * OS1_S1 + 7) - alpha_over_p * *(b + 200 * OS1_S1 + 8));
            *(b + 322 * OS1_S1 + 7) = X_PA * *(b + 256 * OS1_S1 + 7) + alpha_X * *(b + 256 * OS1_S1 + 8) + 2 * one_over_two_p * (*(b + 201 * OS1_S1 + 7) - alpha_over_p * *(b + 201 * OS1_S1 + 8));
            *(b + 330 * OS1_S1 + 7) = X_PA * *(b + 264 * OS1_S1 + 7) + alpha_X * *(b + 264 * OS1_S1 + 8) + 2 * one_over_two_p * (*(b + 209 * OS1_S1 + 7) - alpha_over_p * *(b + 209 * OS1_S1 + 8));
            *(b + 331 * OS1_S1 + 7) = X_PA * *(b + 265 * OS1_S1 + 7) + alpha_X * *(b + 265 * OS1_S1 + 8) + one_over_two_p * (*(b + 210 * OS1_S1 + 7) - alpha_over_p * *(b + 210 * OS1_S1 + 8));
            *(b + 340 * OS1_S1 + 7) = X_PA * *(b + 274 * OS1_S1 + 7) + alpha_X * *(b + 274 * OS1_S1 + 8) + one_over_two_p * (*(b + 219 * OS1_S1 + 7) - alpha_over_p * *(b + 219 * OS1_S1 + 8));
            *(b + 341 * OS1_S1 + 7) = X_PA * *(b + 275 * OS1_S1 + 7) + alpha_X * *(b + 275 * OS1_S1 + 8);
            *(b + 351 * OS1_S1 + 7) = X_PA * *(b + 285 * OS1_S1 + 7) + alpha_X * *(b + 285 * OS1_S1 + 8);
            *(b + 352 * OS1_S1 + 7) = Y_PA * *(b + 275 * OS1_S1 + 7) + alpha_Y * *(b + 275 * OS1_S1 + 8) + 10 * one_over_two_p * (*(b + 210 * OS1_S1 + 7) - alpha_over_p * *(b + 210 * OS1_S1 + 8));
            *(b + 353 * OS1_S1 + 7) = Z_PA * *(b + 275 * OS1_S1 + 7) + alpha_Z * *(b + 275 * OS1_S1 + 8);
            *(b + 354 * OS1_S1 + 7) = Z_PA * *(b + 276 * OS1_S1 + 7) + alpha_Z * *(b + 276 * OS1_S1 + 8) + one_over_two_p * (*(b + 210 * OS1_S1 + 7) - alpha_over_p * *(b + 210 * OS1_S1 + 8));
            *(b + 355 * OS1_S1 + 7) = Z_PA * *(b + 277 * OS1_S1 + 7) + alpha_Z * *(b + 277 * OS1_S1 + 8) + 2 * one_over_two_p * (*(b + 211 * OS1_S1 + 7) - alpha_over_p * *(b + 211 * OS1_S1 + 8));
            *(b + 356 * OS1_S1 + 7) = Z_PA * *(b + 278 * OS1_S1 + 7) + alpha_Z * *(b + 278 * OS1_S1 + 8) + 3 * one_over_two_p * (*(b + 212 * OS1_S1 + 7) - alpha_over_p * *(b + 212 * OS1_S1 + 8));
            *(b + 359 * OS1_S1 + 7) = Y_PA * *(b + 282 * OS1_S1 + 7) + alpha_Y * *(b + 282 * OS1_S1 + 8) + 3 * one_over_two_p * (*(b + 217 * OS1_S1 + 7) - alpha_over_p * *(b + 217 * OS1_S1 + 8));
            *(b + 360 * OS1_S1 + 7) = Y_PA * *(b + 283 * OS1_S1 + 7) + alpha_Y * *(b + 283 * OS1_S1 + 8) + 2 * one_over_two_p * (*(b + 218 * OS1_S1 + 7) - alpha_over_p * *(b + 218 * OS1_S1 + 8));
            *(b + 361 * OS1_S1 + 7) = Y_PA * *(b + 284 * OS1_S1 + 7) + alpha_Y * *(b + 284 * OS1_S1 + 8) + one_over_two_p * (*(b + 219 * OS1_S1 + 7) - alpha_over_p * *(b + 219 * OS1_S1 + 8));
            *(b + 362 * OS1_S1 + 7) = Y_PA * *(b + 285 * OS1_S1 + 7) + alpha_Y * *(b + 285 * OS1_S1 + 8);
            *(b + 363 * OS1_S1 + 7) = Z_PA * *(b + 285 * OS1_S1 + 7) + alpha_Z * *(b + 285 * OS1_S1 + 8) + 10 * one_over_two_p * (*(b + 219 * OS1_S1 + 7) - alpha_over_p * *(b + 219 * OS1_S1 + 8));
            *(b + 364 * OS1_S1 + 6) = X_PA * *(b + 286 * OS1_S1 + 6) + alpha_X * *(b + 286 * OS1_S1 + 7) + 11 * one_over_two_p * (*(b + 220 * OS1_S1 + 6) - alpha_over_p * *(b + 220 * OS1_S1 + 7));
            *(b + 365 * OS1_S1 + 6) = Y_PA * *(b + 286 * OS1_S1 + 6) + alpha_Y * *(b + 286 * OS1_S1 + 7);
            *(b + 366 * OS1_S1 + 6) = Z_PA * *(b + 286 * OS1_S1 + 6) + alpha_Z * *(b + 286 * OS1_S1 + 7);
            *(b + 367 * OS1_S1 + 6) = Y_PA * *(b + 287 * OS1_S1 + 6) + alpha_Y * *(b + 287 * OS1_S1 + 7) + one_over_two_p * (*(b + 220 * OS1_S1 + 6) - alpha_over_p * *(b + 220 * OS1_S1 + 7));
            *(b + 369 * OS1_S1 + 6) = Z_PA * *(b + 288 * OS1_S1 + 6) + alpha_Z * *(b + 288 * OS1_S1 + 7) + one_over_two_p * (*(b + 220 * OS1_S1 + 6) - alpha_over_p * *(b + 220 * OS1_S1 + 7));
            *(b + 370 * OS1_S1 + 6) = Y_PA * *(b + 289 * OS1_S1 + 6) + alpha_Y * *(b + 289 * OS1_S1 + 7) + 2 * one_over_two_p * (*(b + 221 * OS1_S1 + 6) - alpha_over_p * *(b + 221 * OS1_S1 + 7));
            *(b + 373 * OS1_S1 + 6) = Z_PA * *(b + 291 * OS1_S1 + 6) + alpha_Z * *(b + 291 * OS1_S1 + 7) + 2 * one_over_two_p * (*(b + 222 * OS1_S1 + 6) - alpha_over_p * *(b + 222 * OS1_S1 + 7));
            *(b + 374 * OS1_S1 + 6) = Y_PA * *(b + 292 * OS1_S1 + 6) + alpha_Y * *(b + 292 * OS1_S1 + 7) + 3 * one_over_two_p * (*(b + 223 * OS1_S1 + 6) - alpha_over_p * *(b + 223 * OS1_S1 + 7));
            *(b + 378 * OS1_S1 + 6) = Z_PA * *(b + 295 * OS1_S1 + 6) + alpha_Z * *(b + 295 * OS1_S1 + 7) + 3 * one_over_two_p * (*(b + 225 * OS1_S1 + 6) - alpha_over_p * *(b + 225 * OS1_S1 + 7));
            *(b + 379 * OS1_S1 + 6) = Y_PA * *(b + 296 * OS1_S1 + 6) + alpha_Y * *(b + 296 * OS1_S1 + 7) + 4 * one_over_two_p * (*(b + 226 * OS1_S1 + 6) - alpha_over_p * *(b + 226 * OS1_S1 + 7));
            *(b + 384 * OS1_S1 + 6) = Z_PA * *(b + 300 * OS1_S1 + 6) + alpha_Z * *(b + 300 * OS1_S1 + 7) + 4 * one_over_two_p * (*(b + 229 * OS1_S1 + 6) - alpha_over_p * *(b + 229 * OS1_S1 + 7));
            *(b + 385 * OS1_S1 + 6) = Y_PA * *(b + 301 * OS1_S1 + 6) + alpha_Y * *(b + 301 * OS1_S1 + 7) + 5 * one_over_two_p * (*(b + 230 * OS1_S1 + 6) - alpha_over_p * *(b + 230 * OS1_S1 + 7));
            *(b + 392 * OS1_S1 + 6) = X_PA * *(b + 314 * OS1_S1 + 6) + alpha_X * *(b + 314 * OS1_S1 + 7) + 4 * one_over_two_p * (*(b + 248 * OS1_S1 + 6) - alpha_over_p * *(b + 248 * OS1_S1 + 7));
            *(b + 399 * OS1_S1 + 6) = X_PA * *(b + 321 * OS1_S1 + 6) + alpha_X * *(b + 321 * OS1_S1 + 7) + 4 * one_over_two_p * (*(b + 255 * OS1_S1 + 6) - alpha_over_p * *(b + 255 * OS1_S1 + 7));
            *(b + 400 * OS1_S1 + 6) = X_PA * *(b + 322 * OS1_S1 + 6) + alpha_X * *(b + 322 * OS1_S1 + 7) + 3 * one_over_two_p * (*(b + 256 * OS1_S1 + 6) - alpha_over_p * *(b + 256 * OS1_S1 + 7));
            *(b + 408 * OS1_S1 + 6) = X_PA * *(b + 330 * OS1_S1 + 6) + alpha_X * *(b + 330 * OS1_S1 + 7) + 3 * one_over_two_p * (*(b + 264 * OS1_S1 + 6) - alpha_over_p * *(b + 264 * OS1_S1 + 7));
            *(b + 409 * OS1_S1 + 6) = X_PA * *(b + 331 * OS1_S1 + 6) + alpha_X * *(b + 331 * OS1_S1 + 7) + 2 * one_over_two_p * (*(b + 265 * OS1_S1 + 6) - alpha_over_p * *(b + 265 * OS1_S1 + 7));
            *(b + 418 * OS1_S1 + 6) = X_PA * *(b + 340 * OS1_S1 + 6) + alpha_X * *(b + 340 * OS1_S1 + 7) + 2 * one_over_two_p * (*(b + 274 * OS1_S1 + 6) - alpha_over_p * *(b + 274 * OS1_S1 + 7));
            *(b + 419 * OS1_S1 + 6) = X_PA * *(b + 341 * OS1_S1 + 6) + alpha_X * *(b + 341 * OS1_S1 + 7) + one_over_two_p * (*(b + 275 * OS1_S1 + 6) - alpha_over_p * *(b + 275 * OS1_S1 + 7));
            *(b + 429 * OS1_S1 + 6) = X_PA * *(b + 351 * OS1_S1 + 6) + alpha_X * *(b + 351 * OS1_S1 + 7) + one_over_two_p * (*(b + 285 * OS1_S1 + 6) - alpha_over_p * *(b + 285 * OS1_S1 + 7));
            *(b + 430 * OS1_S1 + 6) = X_PA * *(b + 352 * OS1_S1 + 6) + alpha_X * *(b + 352 * OS1_S1 + 7);
            *(b + 441 * OS1_S1 + 6) = X_PA * *(b + 363 * OS1_S1 + 6) + alpha_X * *(b + 363 * OS1_S1 + 7);
            *(b + 442 * OS1_S1 + 6) = Y_PA * *(b + 352 * OS1_S1 + 6) + alpha_Y * *(b + 352 * OS1_S1 + 7) + 11 * one_over_two_p * (*(b + 275 * OS1_S1 + 6) - alpha_over_p * *(b + 275 * OS1_S1 + 7));
            *(b + 443 * OS1_S1 + 6) = Z_PA * *(b + 352 * OS1_S1 + 6) + alpha_Z * *(b + 352 * OS1_S1 + 7);
            *(b + 444 * OS1_S1 + 6) = Z_PA * *(b + 353 * OS1_S1 + 6) + alpha_Z * *(b + 353 * OS1_S1 + 7) + one_over_two_p * (*(b + 275 * OS1_S1 + 6) - alpha_over_p * *(b + 275 * OS1_S1 + 7));
            *(b + 445 * OS1_S1 + 6) = Z_PA * *(b + 354 * OS1_S1 + 6) + alpha_Z * *(b + 354 * OS1_S1 + 7) + 2 * one_over_two_p * (*(b + 276 * OS1_S1 + 6) - alpha_over_p * *(b + 276 * OS1_S1 + 7));
            *(b + 446 * OS1_S1 + 6) = Z_PA * *(b + 355 * OS1_S1 + 6) + alpha_Z * *(b + 355 * OS1_S1 + 7) + 3 * one_over_two_p * (*(b + 277 * OS1_S1 + 6) - alpha_over_p * *(b + 277 * OS1_S1 + 7));
            *(b + 447 * OS1_S1 + 6) = Z_PA * *(b + 356 * OS1_S1 + 6) + alpha_Z * *(b + 356 * OS1_S1 + 7) + 4 * one_over_two_p * (*(b + 278 * OS1_S1 + 6) - alpha_over_p * *(b + 278 * OS1_S1 + 7));
            *(b + 449 * OS1_S1 + 6) = Y_PA * *(b + 359 * OS1_S1 + 6) + alpha_Y * *(b + 359 * OS1_S1 + 7) + 4 * one_over_two_p * (*(b + 282 * OS1_S1 + 6) - alpha_over_p * *(b + 282 * OS1_S1 + 7));
            *(b + 450 * OS1_S1 + 6) = Y_PA * *(b + 360 * OS1_S1 + 6) + alpha_Y * *(b + 360 * OS1_S1 + 7) + 3 * one_over_two_p * (*(b + 283 * OS1_S1 + 6) - alpha_over_p * *(b + 283 * OS1_S1 + 7));
            *(b + 451 * OS1_S1 + 6) = Y_PA * *(b + 361 * OS1_S1 + 6) + alpha_Y * *(b + 361 * OS1_S1 + 7) + 2 * one_over_two_p * (*(b + 284 * OS1_S1 + 6) - alpha_over_p * *(b + 284 * OS1_S1 + 7));
            *(b + 452 * OS1_S1 + 6) = Y_PA * *(b + 362 * OS1_S1 + 6) + alpha_Y * *(b + 362 * OS1_S1 + 7) + one_over_two_p * (*(b + 285 * OS1_S1 + 6) - alpha_over_p * *(b + 285 * OS1_S1 + 7));
            *(b + 453 * OS1_S1 + 6) = Y_PA * *(b + 363 * OS1_S1 + 6) + alpha_Y * *(b + 363 * OS1_S1 + 7);
            *(b + 454 * OS1_S1 + 6) = Z_PA * *(b + 363 * OS1_S1 + 6) + alpha_Z * *(b + 363 * OS1_S1 + 7) + 11 * one_over_two_p * (*(b + 285 * OS1_S1 + 6) - alpha_over_p * *(b + 285 * OS1_S1 + 7));
            *(b + 455 * OS1_S1 + 5) = X_PA * *(b + 364 * OS1_S1 + 5) + alpha_X * *(b + 364 * OS1_S1 + 6) + 12 * one_over_two_p * (*(b + 286 * OS1_S1 + 5) - alpha_over_p * *(b + 286 * OS1_S1 + 6));
            *(b + 456 * OS1_S1 + 5) = Y_PA * *(b + 364 * OS1_S1 + 5) + alpha_Y * *(b + 364 * OS1_S1 + 6);
            *(b + 457 * OS1_S1 + 5) = Z_PA * *(b + 364 * OS1_S1 + 5) + alpha_Z * *(b + 364 * OS1_S1 + 6);
            *(b + 458 * OS1_S1 + 5) = Y_PA * *(b + 365 * OS1_S1 + 5) + alpha_Y * *(b + 365 * OS1_S1 + 6) + one_over_two_p * (*(b + 286 * OS1_S1 + 5) - alpha_over_p * *(b + 286 * OS1_S1 + 6));
            *(b + 460 * OS1_S1 + 5) = Z_PA * *(b + 366 * OS1_S1 + 5) + alpha_Z * *(b + 366 * OS1_S1 + 6) + one_over_two_p * (*(b + 286 * OS1_S1 + 5) - alpha_over_p * *(b + 286 * OS1_S1 + 6));
            *(b + 461 * OS1_S1 + 5) = Y_PA * *(b + 367 * OS1_S1 + 5) + alpha_Y * *(b + 367 * OS1_S1 + 6) + 2 * one_over_two_p * (*(b + 287 * OS1_S1 + 5) - alpha_over_p * *(b + 287 * OS1_S1 + 6));
            *(b + 464 * OS1_S1 + 5) = Z_PA * *(b + 369 * OS1_S1 + 5) + alpha_Z * *(b + 369 * OS1_S1 + 6) + 2 * one_over_two_p * (*(b + 288 * OS1_S1 + 5) - alpha_over_p * *(b + 288 * OS1_S1 + 6));
            *(b + 465 * OS1_S1 + 5) = Y_PA * *(b + 370 * OS1_S1 + 5) + alpha_Y * *(b + 370 * OS1_S1 + 6) + 3 * one_over_two_p * (*(b + 289 * OS1_S1 + 5) - alpha_over_p * *(b + 289 * OS1_S1 + 6));
            *(b + 469 * OS1_S1 + 5) = Z_PA * *(b + 373 * OS1_S1 + 5) + alpha_Z * *(b + 373 * OS1_S1 + 6) + 3 * one_over_two_p * (*(b + 291 * OS1_S1 + 5) - alpha_over_p * *(b + 291 * OS1_S1 + 6));
            *(b + 470 * OS1_S1 + 5) = Y_PA * *(b + 374 * OS1_S1 + 5) + alpha_Y * *(b + 374 * OS1_S1 + 6) + 4 * one_over_two_p * (*(b + 292 * OS1_S1 + 5) - alpha_over_p * *(b + 292 * OS1_S1 + 6));
            *(b + 475 * OS1_S1 + 5) = Z_PA * *(b + 378 * OS1_S1 + 5) + alpha_Z * *(b + 378 * OS1_S1 + 6) + 4 * one_over_two_p * (*(b + 295 * OS1_S1 + 5) - alpha_over_p * *(b + 295 * OS1_S1 + 6));
            *(b + 476 * OS1_S1 + 5) = Y_PA * *(b + 379 * OS1_S1 + 5) + alpha_Y * *(b + 379 * OS1_S1 + 6) + 5 * one_over_two_p * (*(b + 296 * OS1_S1 + 5) - alpha_over_p * *(b + 296 * OS1_S1 + 6));
            *(b + 482 * OS1_S1 + 5) = Z_PA * *(b + 384 * OS1_S1 + 5) + alpha_Z * *(b + 384 * OS1_S1 + 6) + 5 * one_over_two_p * (*(b + 300 * OS1_S1 + 5) - alpha_over_p * *(b + 300 * OS1_S1 + 6));
            *(b + 483 * OS1_S1 + 5) = X_PA * *(b + 392 * OS1_S1 + 5) + alpha_X * *(b + 392 * OS1_S1 + 6) + 5 * one_over_two_p * (*(b + 314 * OS1_S1 + 5) - alpha_over_p * *(b + 314 * OS1_S1 + 6));
            *(b + 484 * OS1_S1 + 5) = Z_PA * *(b + 385 * OS1_S1 + 5) + alpha_Z * *(b + 385 * OS1_S1 + 6);
            *(b + 490 * OS1_S1 + 5) = X_PA * *(b + 399 * OS1_S1 + 5) + alpha_X * *(b + 399 * OS1_S1 + 6) + 5 * one_over_two_p * (*(b + 321 * OS1_S1 + 5) - alpha_over_p * *(b + 321 * OS1_S1 + 6));
            *(b + 491 * OS1_S1 + 5) = X_PA * *(b + 400 * OS1_S1 + 5) + alpha_X * *(b + 400 * OS1_S1 + 6) + 4 * one_over_two_p * (*(b + 322 * OS1_S1 + 5) - alpha_over_p * *(b + 322 * OS1_S1 + 6));
            *(b + 499 * OS1_S1 + 5) = X_PA * *(b + 408 * OS1_S1 + 5) + alpha_X * *(b + 408 * OS1_S1 + 6) + 4 * one_over_two_p * (*(b + 330 * OS1_S1 + 5) - alpha_over_p * *(b + 330 * OS1_S1 + 6));
            *(b + 500 * OS1_S1 + 5) = X_PA * *(b + 409 * OS1_S1 + 5) + alpha_X * *(b + 409 * OS1_S1 + 6) + 3 * one_over_two_p * (*(b + 331 * OS1_S1 + 5) - alpha_over_p * *(b + 331 * OS1_S1 + 6));
            *(b + 509 * OS1_S1 + 5) = X_PA * *(b + 418 * OS1_S1 + 5) + alpha_X * *(b + 418 * OS1_S1 + 6) + 3 * one_over_two_p * (*(b + 340 * OS1_S1 + 5) - alpha_over_p * *(b + 340 * OS1_S1 + 6));
            *(b + 510 * OS1_S1 + 5) = X_PA * *(b + 419 * OS1_S1 + 5) + alpha_X * *(b + 419 * OS1_S1 + 6) + 2 * one_over_two_p * (*(b + 341 * OS1_S1 + 5) - alpha_over_p * *(b + 341 * OS1_S1 + 6));
            *(b + 520 * OS1_S1 + 5) = X_PA * *(b + 429 * OS1_S1 + 5) + alpha_X * *(b + 429 * OS1_S1 + 6) + 2 * one_over_two_p * (*(b + 351 * OS1_S1 + 5) - alpha_over_p * *(b + 351 * OS1_S1 + 6));
            *(b + 521 * OS1_S1 + 5) = X_PA * *(b + 430 * OS1_S1 + 5) + alpha_X * *(b + 430 * OS1_S1 + 6) + one_over_two_p * (*(b + 352 * OS1_S1 + 5) - alpha_over_p * *(b + 352 * OS1_S1 + 6));
            *(b + 532 * OS1_S1 + 5) = X_PA * *(b + 441 * OS1_S1 + 5) + alpha_X * *(b + 441 * OS1_S1 + 6) + one_over_two_p * (*(b + 363 * OS1_S1 + 5) - alpha_over_p * *(b + 363 * OS1_S1 + 6));
            *(b + 533 * OS1_S1 + 5) = X_PA * *(b + 442 * OS1_S1 + 5) + alpha_X * *(b + 442 * OS1_S1 + 6);
            *(b + 545 * OS1_S1 + 5) = X_PA * *(b + 454 * OS1_S1 + 5) + alpha_X * *(b + 454 * OS1_S1 + 6);
            *(b + 546 * OS1_S1 + 5) = Y_PA * *(b + 442 * OS1_S1 + 5) + alpha_Y * *(b + 442 * OS1_S1 + 6) + 12 * one_over_two_p * (*(b + 352 * OS1_S1 + 5) - alpha_over_p * *(b + 352 * OS1_S1 + 6));
            *(b + 547 * OS1_S1 + 5) = Z_PA * *(b + 442 * OS1_S1 + 5) + alpha_Z * *(b + 442 * OS1_S1 + 6);
            *(b + 548 * OS1_S1 + 5) = Z_PA * *(b + 443 * OS1_S1 + 5) + alpha_Z * *(b + 443 * OS1_S1 + 6) + one_over_two_p * (*(b + 352 * OS1_S1 + 5) - alpha_over_p * *(b + 352 * OS1_S1 + 6));
            *(b + 549 * OS1_S1 + 5) = Z_PA * *(b + 444 * OS1_S1 + 5) + alpha_Z * *(b + 444 * OS1_S1 + 6) + 2 * one_over_two_p * (*(b + 353 * OS1_S1 + 5) - alpha_over_p * *(b + 353 * OS1_S1 + 6));
            *(b + 550 * OS1_S1 + 5) = Z_PA * *(b + 445 * OS1_S1 + 5) + alpha_Z * *(b + 445 * OS1_S1 + 6) + 3 * one_over_two_p * (*(b + 354 * OS1_S1 + 5) - alpha_over_p * *(b + 354 * OS1_S1 + 6));
            *(b + 551 * OS1_S1 + 5) = Z_PA * *(b + 446 * OS1_S1 + 5) + alpha_Z * *(b + 446 * OS1_S1 + 6) + 4 * one_over_two_p * (*(b + 355 * OS1_S1 + 5) - alpha_over_p * *(b + 355 * OS1_S1 + 6));
            *(b + 552 * OS1_S1 + 5) = Z_PA * *(b + 447 * OS1_S1 + 5) + alpha_Z * *(b + 447 * OS1_S1 + 6) + 5 * one_over_two_p * (*(b + 356 * OS1_S1 + 5) - alpha_over_p * *(b + 356 * OS1_S1 + 6));
            *(b + 553 * OS1_S1 + 5) = Y_PA * *(b + 449 * OS1_S1 + 5) + alpha_Y * *(b + 449 * OS1_S1 + 6) + 5 * one_over_two_p * (*(b + 359 * OS1_S1 + 5) - alpha_over_p * *(b + 359 * OS1_S1 + 6));
            *(b + 554 * OS1_S1 + 5) = Y_PA * *(b + 450 * OS1_S1 + 5) + alpha_Y * *(b + 450 * OS1_S1 + 6) + 4 * one_over_two_p * (*(b + 360 * OS1_S1 + 5) - alpha_over_p * *(b + 360 * OS1_S1 + 6));
            *(b + 555 * OS1_S1 + 5) = Y_PA * *(b + 451 * OS1_S1 + 5) + alpha_Y * *(b + 451 * OS1_S1 + 6) + 3 * one_over_two_p * (*(b + 361 * OS1_S1 + 5) - alpha_over_p * *(b + 361 * OS1_S1 + 6));
            *(b + 556 * OS1_S1 + 5) = Y_PA * *(b + 452 * OS1_S1 + 5) + alpha_Y * *(b + 452 * OS1_S1 + 6) + 2 * one_over_two_p * (*(b + 362 * OS1_S1 + 5) - alpha_over_p * *(b + 362 * OS1_S1 + 6));
            *(b + 557 * OS1_S1 + 5) = Y_PA * *(b + 453 * OS1_S1 + 5) + alpha_Y * *(b + 453 * OS1_S1 + 6) + one_over_two_p * (*(b + 363 * OS1_S1 + 5) - alpha_over_p * *(b + 363 * OS1_S1 + 6));
            *(b + 558 * OS1_S1 + 5) = Y_PA * *(b + 454 * OS1_S1 + 5) + alpha_Y * *(b + 454 * OS1_S1 + 6);
            *(b + 559 * OS1_S1 + 5) = Z_PA * *(b + 454 * OS1_S1 + 5) + alpha_Z * *(b + 454 * OS1_S1 + 6) + 12 * one_over_two_p * (*(b + 363 * OS1_S1 + 5) - alpha_over_p * *(b + 363 * OS1_S1 + 6));
            *(b + 560 * OS1_S1 + 4) = X_PA * *(b + 455 * OS1_S1 + 4) + alpha_X * *(b + 455 * OS1_S1 + 5) + 13 * one_over_two_p * (*(b + 364 * OS1_S1 + 4) - alpha_over_p * *(b + 364 * OS1_S1 + 5));
            *(b + 561 * OS1_S1 + 4) = Y_PA * *(b + 455 * OS1_S1 + 4) + alpha_Y * *(b + 455 * OS1_S1 + 5);
            *(b + 562 * OS1_S1 + 4) = Z_PA * *(b + 455 * OS1_S1 + 4) + alpha_Z * *(b + 455 * OS1_S1 + 5);
            *(b + 563 * OS1_S1 + 4) = Y_PA * *(b + 456 * OS1_S1 + 4) + alpha_Y * *(b + 456 * OS1_S1 + 5) + one_over_two_p * (*(b + 364 * OS1_S1 + 4) - alpha_over_p * *(b + 364 * OS1_S1 + 5));
            *(b + 565 * OS1_S1 + 4) = Z_PA * *(b + 457 * OS1_S1 + 4) + alpha_Z * *(b + 457 * OS1_S1 + 5) + one_over_two_p * (*(b + 364 * OS1_S1 + 4) - alpha_over_p * *(b + 364 * OS1_S1 + 5));
            *(b + 566 * OS1_S1 + 4) = Y_PA * *(b + 458 * OS1_S1 + 4) + alpha_Y * *(b + 458 * OS1_S1 + 5) + 2 * one_over_two_p * (*(b + 365 * OS1_S1 + 4) - alpha_over_p * *(b + 365 * OS1_S1 + 5));
            *(b + 569 * OS1_S1 + 4) = Z_PA * *(b + 460 * OS1_S1 + 4) + alpha_Z * *(b + 460 * OS1_S1 + 5) + 2 * one_over_two_p * (*(b + 366 * OS1_S1 + 4) - alpha_over_p * *(b + 366 * OS1_S1 + 5));
            *(b + 570 * OS1_S1 + 4) = Y_PA * *(b + 461 * OS1_S1 + 4) + alpha_Y * *(b + 461 * OS1_S1 + 5) + 3 * one_over_two_p * (*(b + 367 * OS1_S1 + 4) - alpha_over_p * *(b + 367 * OS1_S1 + 5));
            *(b + 574 * OS1_S1 + 4) = Z_PA * *(b + 464 * OS1_S1 + 4) + alpha_Z * *(b + 464 * OS1_S1 + 5) + 3 * one_over_two_p * (*(b + 369 * OS1_S1 + 4) - alpha_over_p * *(b + 369 * OS1_S1 + 5));
            *(b + 575 * OS1_S1 + 4) = Y_PA * *(b + 465 * OS1_S1 + 4) + alpha_Y * *(b + 465 * OS1_S1 + 5) + 4 * one_over_two_p * (*(b + 370 * OS1_S1 + 4) - alpha_over_p * *(b + 370 * OS1_S1 + 5));
            *(b + 580 * OS1_S1 + 4) = Z_PA * *(b + 469 * OS1_S1 + 4) + alpha_Z * *(b + 469 * OS1_S1 + 5) + 4 * one_over_two_p * (*(b + 373 * OS1_S1 + 4) - alpha_over_p * *(b + 373 * OS1_S1 + 5));
            *(b + 581 * OS1_S1 + 4) = Y_PA * *(b + 470 * OS1_S1 + 4) + alpha_Y * *(b + 470 * OS1_S1 + 5) + 5 * one_over_two_p * (*(b + 374 * OS1_S1 + 4) - alpha_over_p * *(b + 374 * OS1_S1 + 5));
            *(b + 582 * OS1_S1 + 4) = Z_PA * *(b + 470 * OS1_S1 + 4) + alpha_Z * *(b + 470 * OS1_S1 + 5);
            *(b + 587 * OS1_S1 + 4) = Z_PA * *(b + 475 * OS1_S1 + 4) + alpha_Z * *(b + 475 * OS1_S1 + 5) + 5 * one_over_two_p * (*(b + 378 * OS1_S1 + 4) - alpha_over_p * *(b + 378 * OS1_S1 + 5));
            *(b + 588 * OS1_S1 + 4) = Y_PA * *(b + 476 * OS1_S1 + 4) + alpha_Y * *(b + 476 * OS1_S1 + 5) + 6 * one_over_two_p * (*(b + 379 * OS1_S1 + 4) - alpha_over_p * *(b + 379 * OS1_S1 + 5));
            *(b + 589 * OS1_S1 + 4) = Z_PA * *(b + 476 * OS1_S1 + 4) + alpha_Z * *(b + 476 * OS1_S1 + 5);
            *(b + 594 * OS1_S1 + 4) = Y_PA * *(b + 482 * OS1_S1 + 4) + alpha_Y * *(b + 482 * OS1_S1 + 5);
            *(b + 595 * OS1_S1 + 4) = Z_PA * *(b + 482 * OS1_S1 + 4) + alpha_Z * *(b + 482 * OS1_S1 + 5) + 6 * one_over_two_p * (*(b + 384 * OS1_S1 + 4) - alpha_over_p * *(b + 384 * OS1_S1 + 5));
            *(b + 596 * OS1_S1 + 4) = X_PA * *(b + 491 * OS1_S1 + 4) + alpha_X * *(b + 491 * OS1_S1 + 5) + 5 * one_over_two_p * (*(b + 400 * OS1_S1 + 4) - alpha_over_p * *(b + 400 * OS1_S1 + 5));
            *(b + 597 * OS1_S1 + 4) = Z_PA * *(b + 483 * OS1_S1 + 4) + alpha_Z * *(b + 483 * OS1_S1 + 5);
            *(b + 598 * OS1_S1 + 4) = Z_PA * *(b + 484 * OS1_S1 + 4) + alpha_Z * *(b + 484 * OS1_S1 + 5) + one_over_two_p * (*(b + 385 * OS1_S1 + 4) - alpha_over_p * *(b + 385 * OS1_S1 + 5));
            *(b + 603 * OS1_S1 + 4) = Y_PA * *(b + 490 * OS1_S1 + 4) + alpha_Y * *(b + 490 * OS1_S1 + 5);
            *(b + 604 * OS1_S1 + 4) = X_PA * *(b + 499 * OS1_S1 + 4) + alpha_X * *(b + 499 * OS1_S1 + 5) + 5 * one_over_two_p * (*(b + 408 * OS1_S1 + 4) - alpha_over_p * *(b + 408 * OS1_S1 + 5));
            *(b + 605 * OS1_S1 + 4) = X_PA * *(b + 500 * OS1_S1 + 4) + alpha_X * *(b + 500 * OS1_S1 + 5) + 4 * one_over_two_p * (*(b + 409 * OS1_S1 + 4) - alpha_over_p * *(b + 409 * OS1_S1 + 5));
            *(b + 606 * OS1_S1 + 4) = Z_PA * *(b + 491 * OS1_S1 + 4) + alpha_Z * *(b + 491 * OS1_S1 + 5);
            *(b + 613 * OS1_S1 + 4) = Y_PA * *(b + 499 * OS1_S1 + 4) + alpha_Y * *(b + 499 * OS1_S1 + 5);
            *(b + 614 * OS1_S1 + 4) = X_PA * *(b + 509 * OS1_S1 + 4) + alpha_X * *(b + 509 * OS1_S1 + 5) + 4 * one_over_two_p * (*(b + 418 * OS1_S1 + 4) - alpha_over_p * *(b + 418 * OS1_S1 + 5));
            *(b + 615 * OS1_S1 + 4) = X_PA * *(b + 510 * OS1_S1 + 4) + alpha_X * *(b + 510 * OS1_S1 + 5) + 3 * one_over_two_p * (*(b + 419 * OS1_S1 + 4) - alpha_over_p * *(b + 419 * OS1_S1 + 5));
            *(b + 625 * OS1_S1 + 4) = X_PA * *(b + 520 * OS1_S1 + 4) + alpha_X * *(b + 520 * OS1_S1 + 5) + 3 * one_over_two_p * (*(b + 429 * OS1_S1 + 4) - alpha_over_p * *(b + 429 * OS1_S1 + 5));
            *(b + 626 * OS1_S1 + 4) = X_PA * *(b + 521 * OS1_S1 + 4) + alpha_X * *(b + 521 * OS1_S1 + 5) + 2 * one_over_two_p * (*(b + 430 * OS1_S1 + 4) - alpha_over_p * *(b + 430 * OS1_S1 + 5));
            *(b + 637 * OS1_S1 + 4) = X_PA * *(b + 532 * OS1_S1 + 4) + alpha_X * *(b + 532 * OS1_S1 + 5) + 2 * one_over_two_p * (*(b + 441 * OS1_S1 + 4) - alpha_over_p * *(b + 441 * OS1_S1 + 5));
            *(b + 638 * OS1_S1 + 4) = X_PA * *(b + 533 * OS1_S1 + 4) + alpha_X * *(b + 533 * OS1_S1 + 5) + one_over_two_p * (*(b + 442 * OS1_S1 + 4) - alpha_over_p * *(b + 442 * OS1_S1 + 5));
            *(b + 650 * OS1_S1 + 4) = X_PA * *(b + 545 * OS1_S1 + 4) + alpha_X * *(b + 545 * OS1_S1 + 5) + one_over_two_p * (*(b + 454 * OS1_S1 + 4) - alpha_over_p * *(b + 454 * OS1_S1 + 5));
            *(b + 651 * OS1_S1 + 4) = X_PA * *(b + 546 * OS1_S1 + 4) + alpha_X * *(b + 546 * OS1_S1 + 5);
            *(b + 657 * OS1_S1 + 4) = X_PA * *(b + 552 * OS1_S1 + 4) + alpha_X * *(b + 552 * OS1_S1 + 5);
            *(b + 658 * OS1_S1 + 4) = X_PA * *(b + 553 * OS1_S1 + 4) + alpha_X * *(b + 553 * OS1_S1 + 5);
            *(b + 664 * OS1_S1 + 4) = X_PA * *(b + 559 * OS1_S1 + 4) + alpha_X * *(b + 559 * OS1_S1 + 5);
            *(b + 665 * OS1_S1 + 4) = Y_PA * *(b + 546 * OS1_S1 + 4) + alpha_Y * *(b + 546 * OS1_S1 + 5) + 13 * one_over_two_p * (*(b + 442 * OS1_S1 + 4) - alpha_over_p * *(b + 442 * OS1_S1 + 5));
            *(b + 666 * OS1_S1 + 4) = Z_PA * *(b + 546 * OS1_S1 + 4) + alpha_Z * *(b + 546 * OS1_S1 + 5);
            *(b + 667 * OS1_S1 + 4) = Z_PA * *(b + 547 * OS1_S1 + 4) + alpha_Z * *(b + 547 * OS1_S1 + 5) + one_over_two_p * (*(b + 442 * OS1_S1 + 4) - alpha_over_p * *(b + 442 * OS1_S1 + 5));
            *(b + 668 * OS1_S1 + 4) = Z_PA * *(b + 548 * OS1_S1 + 4) + alpha_Z * *(b + 548 * OS1_S1 + 5) + 2 * one_over_two_p * (*(b + 443 * OS1_S1 + 4) - alpha_over_p * *(b + 443 * OS1_S1 + 5));
            *(b + 669 * OS1_S1 + 4) = Z_PA * *(b + 549 * OS1_S1 + 4) + alpha_Z * *(b + 549 * OS1_S1 + 5) + 3 * one_over_two_p * (*(b + 444 * OS1_S1 + 4) - alpha_over_p * *(b + 444 * OS1_S1 + 5));
            *(b + 670 * OS1_S1 + 4) = Z_PA * *(b + 550 * OS1_S1 + 4) + alpha_Z * *(b + 550 * OS1_S1 + 5) + 4 * one_over_two_p * (*(b + 445 * OS1_S1 + 4) - alpha_over_p * *(b + 445 * OS1_S1 + 5));
            *(b + 671 * OS1_S1 + 4) = Z_PA * *(b + 551 * OS1_S1 + 4) + alpha_Z * *(b + 551 * OS1_S1 + 5) + 5 * one_over_two_p * (*(b + 446 * OS1_S1 + 4) - alpha_over_p * *(b + 446 * OS1_S1 + 5));
            *(b + 672 * OS1_S1 + 4) = Z_PA * *(b + 552 * OS1_S1 + 4) + alpha_Z * *(b + 552 * OS1_S1 + 5) + 6 * one_over_two_p * (*(b + 447 * OS1_S1 + 4) - alpha_over_p * *(b + 447 * OS1_S1 + 5));
            *(b + 673 * OS1_S1 + 4) = Y_PA * *(b + 554 * OS1_S1 + 4) + alpha_Y * *(b + 554 * OS1_S1 + 5) + 5 * one_over_two_p * (*(b + 450 * OS1_S1 + 4) - alpha_over_p * *(b + 450 * OS1_S1 + 5));
            *(b + 674 * OS1_S1 + 4) = Y_PA * *(b + 555 * OS1_S1 + 4) + alpha_Y * *(b + 555 * OS1_S1 + 5) + 4 * one_over_two_p * (*(b + 451 * OS1_S1 + 4) - alpha_over_p * *(b + 451 * OS1_S1 + 5));
            *(b + 675 * OS1_S1 + 4) = Y_PA * *(b + 556 * OS1_S1 + 4) + alpha_Y * *(b + 556 * OS1_S1 + 5) + 3 * one_over_two_p * (*(b + 452 * OS1_S1 + 4) - alpha_over_p * *(b + 452 * OS1_S1 + 5));
            *(b + 676 * OS1_S1 + 4) = Y_PA * *(b + 557 * OS1_S1 + 4) + alpha_Y * *(b + 557 * OS1_S1 + 5) + 2 * one_over_two_p * (*(b + 453 * OS1_S1 + 4) - alpha_over_p * *(b + 453 * OS1_S1 + 5));
            *(b + 677 * OS1_S1 + 4) = Y_PA * *(b + 558 * OS1_S1 + 4) + alpha_Y * *(b + 558 * OS1_S1 + 5) + one_over_two_p * (*(b + 454 * OS1_S1 + 4) - alpha_over_p * *(b + 454 * OS1_S1 + 5));
            *(b + 678 * OS1_S1 + 4) = Y_PA * *(b + 559 * OS1_S1 + 4) + alpha_Y * *(b + 559 * OS1_S1 + 5);
            *(b + 679 * OS1_S1 + 4) = Z_PA * *(b + 559 * OS1_S1 + 4) + alpha_Z * *(b + 559 * OS1_S1 + 5) + 13 * one_over_two_p * (*(b + 454 * OS1_S1 + 4) - alpha_over_p * *(b + 454 * OS1_S1 + 5));
            *(b + 680 * OS1_S1 + 3) = X_PA * *(b + 560 * OS1_S1 + 3) + alpha_X * *(b + 560 * OS1_S1 + 4) + 14 * one_over_two_p * (*(b + 455 * OS1_S1 + 3) - alpha_over_p * *(b + 455 * OS1_S1 + 4));
            *(b + 681 * OS1_S1 + 3) = Y_PA * *(b + 560 * OS1_S1 + 3) + alpha_Y * *(b + 560 * OS1_S1 + 4);
            *(b + 682 * OS1_S1 + 3) = Z_PA * *(b + 560 * OS1_S1 + 3) + alpha_Z * *(b + 560 * OS1_S1 + 4);
            *(b + 683 * OS1_S1 + 3) = Y_PA * *(b + 561 * OS1_S1 + 3) + alpha_Y * *(b + 561 * OS1_S1 + 4) + one_over_two_p * (*(b + 455 * OS1_S1 + 3) - alpha_over_p * *(b + 455 * OS1_S1 + 4));
            *(b + 685 * OS1_S1 + 3) = Z_PA * *(b + 562 * OS1_S1 + 3) + alpha_Z * *(b + 562 * OS1_S1 + 4) + one_over_two_p * (*(b + 455 * OS1_S1 + 3) - alpha_over_p * *(b + 455 * OS1_S1 + 4));
            *(b + 686 * OS1_S1 + 3) = Y_PA * *(b + 563 * OS1_S1 + 3) + alpha_Y * *(b + 563 * OS1_S1 + 4) + 2 * one_over_two_p * (*(b + 456 * OS1_S1 + 3) - alpha_over_p * *(b + 456 * OS1_S1 + 4));
            *(b + 689 * OS1_S1 + 3) = Z_PA * *(b + 565 * OS1_S1 + 3) + alpha_Z * *(b + 565 * OS1_S1 + 4) + 2 * one_over_two_p * (*(b + 457 * OS1_S1 + 3) - alpha_over_p * *(b + 457 * OS1_S1 + 4));
            *(b + 690 * OS1_S1 + 3) = Y_PA * *(b + 566 * OS1_S1 + 3) + alpha_Y * *(b + 566 * OS1_S1 + 4) + 3 * one_over_two_p * (*(b + 458 * OS1_S1 + 3) - alpha_over_p * *(b + 458 * OS1_S1 + 4));
            *(b + 694 * OS1_S1 + 3) = Z_PA * *(b + 569 * OS1_S1 + 3) + alpha_Z * *(b + 569 * OS1_S1 + 4) + 3 * one_over_two_p * (*(b + 460 * OS1_S1 + 3) - alpha_over_p * *(b + 460 * OS1_S1 + 4));
            *(b + 695 * OS1_S1 + 3) = Y_PA * *(b + 570 * OS1_S1 + 3) + alpha_Y * *(b + 570 * OS1_S1 + 4) + 4 * one_over_two_p * (*(b + 461 * OS1_S1 + 3) - alpha_over_p * *(b + 461 * OS1_S1 + 4));
            *(b + 696 * OS1_S1 + 3) = Z_PA * *(b + 570 * OS1_S1 + 3) + alpha_Z * *(b + 570 * OS1_S1 + 4);
            *(b + 700 * OS1_S1 + 3) = Z_PA * *(b + 574 * OS1_S1 + 3) + alpha_Z * *(b + 574 * OS1_S1 + 4) + 4 * one_over_two_p * (*(b + 464 * OS1_S1 + 3) - alpha_over_p * *(b + 464 * OS1_S1 + 4));
            *(b + 701 * OS1_S1 + 3) = Y_PA * *(b + 575 * OS1_S1 + 3) + alpha_Y * *(b + 575 * OS1_S1 + 4) + 5 * one_over_two_p * (*(b + 465 * OS1_S1 + 3) - alpha_over_p * *(b + 465 * OS1_S1 + 4));
            *(b + 702 * OS1_S1 + 3) = Z_PA * *(b + 575 * OS1_S1 + 3) + alpha_Z * *(b + 575 * OS1_S1 + 4);
            *(b + 706 * OS1_S1 + 3) = Y_PA * *(b + 580 * OS1_S1 + 3) + alpha_Y * *(b + 580 * OS1_S1 + 4);
            *(b + 707 * OS1_S1 + 3) = Z_PA * *(b + 580 * OS1_S1 + 3) + alpha_Z * *(b + 580 * OS1_S1 + 4) + 5 * one_over_two_p * (*(b + 469 * OS1_S1 + 3) - alpha_over_p * *(b + 469 * OS1_S1 + 4));
            *(b + 708 * OS1_S1 + 3) = Y_PA * *(b + 581 * OS1_S1 + 3) + alpha_Y * *(b + 581 * OS1_S1 + 4) + 6 * one_over_two_p * (*(b + 470 * OS1_S1 + 3) - alpha_over_p * *(b + 470 * OS1_S1 + 4));
            *(b + 709 * OS1_S1 + 3) = Z_PA * *(b + 581 * OS1_S1 + 3) + alpha_Z * *(b + 581 * OS1_S1 + 4);
            *(b + 710 * OS1_S1 + 3) = Z_PA * *(b + 582 * OS1_S1 + 3) + alpha_Z * *(b + 582 * OS1_S1 + 4) + one_over_two_p * (*(b + 470 * OS1_S1 + 3) - alpha_over_p * *(b + 470 * OS1_S1 + 4));
            *(b + 714 * OS1_S1 + 3) = Y_PA * *(b + 587 * OS1_S1 + 3) + alpha_Y * *(b + 587 * OS1_S1 + 4);
            *(b + 715 * OS1_S1 + 3) = Z_PA * *(b + 587 * OS1_S1 + 3) + alpha_Z * *(b + 587 * OS1_S1 + 4) + 6 * one_over_two_p * (*(b + 475 * OS1_S1 + 3) - alpha_over_p * *(b + 475 * OS1_S1 + 4));
            *(b + 716 * OS1_S1 + 3) = X_PA * *(b + 596 * OS1_S1 + 3) + alpha_X * *(b + 596 * OS1_S1 + 4) + 6 * one_over_two_p * (*(b + 491 * OS1_S1 + 3) - alpha_over_p * *(b + 491 * OS1_S1 + 4));
            *(b + 717 * OS1_S1 + 3) = Z_PA * *(b + 588 * OS1_S1 + 3) + alpha_Z * *(b + 588 * OS1_S1 + 4);
            *(b + 718 * OS1_S1 + 3) = Z_PA * *(b + 589 * OS1_S1 + 3) + alpha_Z * *(b + 589 * OS1_S1 + 4) + one_over_two_p * (*(b + 476 * OS1_S1 + 3) - alpha_over_p * *(b + 476 * OS1_S1 + 4));
            *(b + 722 * OS1_S1 + 3) = Y_PA * *(b + 594 * OS1_S1 + 3) + alpha_Y * *(b + 594 * OS1_S1 + 4) + one_over_two_p * (*(b + 482 * OS1_S1 + 3) - alpha_over_p * *(b + 482 * OS1_S1 + 4));
            *(b + 723 * OS1_S1 + 3) = Y_PA * *(b + 595 * OS1_S1 + 3) + alpha_Y * *(b + 595 * OS1_S1 + 4);
            *(b + 724 * OS1_S1 + 3) = X_PA * *(b + 604 * OS1_S1 + 3) + alpha_X * *(b + 604 * OS1_S1 + 4) + 6 * one_over_two_p * (*(b + 499 * OS1_S1 + 3) - alpha_over_p * *(b + 499 * OS1_S1 + 4));
            *(b + 725 * OS1_S1 + 3) = X_PA * *(b + 605 * OS1_S1 + 3) + alpha_X * *(b + 605 * OS1_S1 + 4) + 5 * one_over_two_p * (*(b + 500 * OS1_S1 + 3) - alpha_over_p * *(b + 500 * OS1_S1 + 4));
            *(b + 726 * OS1_S1 + 3) = Z_PA * *(b + 596 * OS1_S1 + 3) + alpha_Z * *(b + 596 * OS1_S1 + 4);
            *(b + 727 * OS1_S1 + 3) = Z_PA * *(b + 597 * OS1_S1 + 3) + alpha_Z * *(b + 597 * OS1_S1 + 4) + one_over_two_p * (*(b + 483 * OS1_S1 + 3) - alpha_over_p * *(b + 483 * OS1_S1 + 4));
            *(b + 728 * OS1_S1 + 3) = Z_PA * *(b + 598 * OS1_S1 + 3) + alpha_Z * *(b + 598 * OS1_S1 + 4) + 2 * one_over_two_p * (*(b + 484 * OS1_S1 + 3) - alpha_over_p * *(b + 484 * OS1_S1 + 4));
            *(b + 732 * OS1_S1 + 3) = Y_PA * *(b + 603 * OS1_S1 + 3) + alpha_Y * *(b + 603 * OS1_S1 + 4) + one_over_two_p * (*(b + 490 * OS1_S1 + 3) - alpha_over_p * *(b + 490 * OS1_S1 + 4));
            *(b + 733 * OS1_S1 + 3) = Y_PA * *(b + 604 * OS1_S1 + 3) + alpha_Y * *(b + 604 * OS1_S1 + 4);
            *(b + 734 * OS1_S1 + 3) = X_PA * *(b + 614 * OS1_S1 + 3) + alpha_X * *(b + 614 * OS1_S1 + 4) + 5 * one_over_two_p * (*(b + 509 * OS1_S1 + 3) - alpha_over_p * *(b + 509 * OS1_S1 + 4));
            *(b + 735 * OS1_S1 + 3) = X_PA * *(b + 615 * OS1_S1 + 3) + alpha_X * *(b + 615 * OS1_S1 + 4) + 4 * one_over_two_p * (*(b + 510 * OS1_S1 + 3) - alpha_over_p * *(b + 510 * OS1_S1 + 4));
            *(b + 736 * OS1_S1 + 3) = Z_PA * *(b + 605 * OS1_S1 + 3) + alpha_Z * *(b + 605 * OS1_S1 + 4);
            *(b + 737 * OS1_S1 + 3) = Z_PA * *(b + 606 * OS1_S1 + 3) + alpha_Z * *(b + 606 * OS1_S1 + 4) + one_over_two_p * (*(b + 491 * OS1_S1 + 3) - alpha_over_p * *(b + 491 * OS1_S1 + 4));
            *(b + 743 * OS1_S1 + 3) = Y_PA * *(b + 613 * OS1_S1 + 3) + alpha_Y * *(b + 613 * OS1_S1 + 4) + one_over_two_p * (*(b + 499 * OS1_S1 + 3) - alpha_over_p * *(b + 499 * OS1_S1 + 4));
            *(b + 744 * OS1_S1 + 3) = Y_PA * *(b + 614 * OS1_S1 + 3) + alpha_Y * *(b + 614 * OS1_S1 + 4);
            *(b + 745 * OS1_S1 + 3) = X_PA * *(b + 625 * OS1_S1 + 3) + alpha_X * *(b + 625 * OS1_S1 + 4) + 4 * one_over_two_p * (*(b + 520 * OS1_S1 + 3) - alpha_over_p * *(b + 520 * OS1_S1 + 4));
            *(b + 746 * OS1_S1 + 3) = X_PA * *(b + 626 * OS1_S1 + 3) + alpha_X * *(b + 626 * OS1_S1 + 4) + 3 * one_over_two_p * (*(b + 521 * OS1_S1 + 3) - alpha_over_p * *(b + 521 * OS1_S1 + 4));
            *(b + 747 * OS1_S1 + 3) = Z_PA * *(b + 615 * OS1_S1 + 3) + alpha_Z * *(b + 615 * OS1_S1 + 4);
            *(b + 756 * OS1_S1 + 3) = Y_PA * *(b + 625 * OS1_S1 + 3) + alpha_Y * *(b + 625 * OS1_S1 + 4);
            *(b + 757 * OS1_S1 + 3) = X_PA * *(b + 637 * OS1_S1 + 3) + alpha_X * *(b + 637 * OS1_S1 + 4) + 3 * one_over_two_p * (*(b + 532 * OS1_S1 + 3) - alpha_over_p * *(b + 532 * OS1_S1 + 4));
            *(b + 758 * OS1_S1 + 3) = X_PA * *(b + 638 * OS1_S1 + 3) + alpha_X * *(b + 638 * OS1_S1 + 4) + 2 * one_over_two_p * (*(b + 533 * OS1_S1 + 3) - alpha_over_p * *(b + 533 * OS1_S1 + 4));
            *(b + 770 * OS1_S1 + 3) = X_PA * *(b + 650 * OS1_S1 + 3) + alpha_X * *(b + 650 * OS1_S1 + 4) + 2 * one_over_two_p * (*(b + 545 * OS1_S1 + 3) - alpha_over_p * *(b + 545 * OS1_S1 + 4));
            *(b + 771 * OS1_S1 + 3) = X_PA * *(b + 651 * OS1_S1 + 3) + alpha_X * *(b + 651 * OS1_S1 + 4) + one_over_two_p * (*(b + 546 * OS1_S1 + 3) - alpha_over_p * *(b + 546 * OS1_S1 + 4));
            *(b + 777 * OS1_S1 + 3) = X_PA * *(b + 657 * OS1_S1 + 3) + alpha_X * *(b + 657 * OS1_S1 + 4) + one_over_two_p * (*(b + 552 * OS1_S1 + 3) - alpha_over_p * *(b + 552 * OS1_S1 + 4));
            *(b + 778 * OS1_S1 + 3) = X_PA * *(b + 658 * OS1_S1 + 3) + alpha_X * *(b + 658 * OS1_S1 + 4) + one_over_two_p * (*(b + 553 * OS1_S1 + 3) - alpha_over_p * *(b + 553 * OS1_S1 + 4));
            *(b + 784 * OS1_S1 + 3) = X_PA * *(b + 664 * OS1_S1 + 3) + alpha_X * *(b + 664 * OS1_S1 + 4) + one_over_two_p * (*(b + 559 * OS1_S1 + 3) - alpha_over_p * *(b + 559 * OS1_S1 + 4));
            *(b + 785 * OS1_S1 + 3) = X_PA * *(b + 665 * OS1_S1 + 3) + alpha_X * *(b + 665 * OS1_S1 + 4);
            *(b + 790 * OS1_S1 + 3) = X_PA * *(b + 670 * OS1_S1 + 3) + alpha_X * *(b + 670 * OS1_S1 + 4);
            *(b + 791 * OS1_S1 + 3) = X_PA * *(b + 671 * OS1_S1 + 3) + alpha_X * *(b + 671 * OS1_S1 + 4);
            *(b + 792 * OS1_S1 + 3) = X_PA * *(b + 672 * OS1_S1 + 3) + alpha_X * *(b + 672 * OS1_S1 + 4);
            *(b + 793 * OS1_S1 + 3) = X_PA * *(b + 673 * OS1_S1 + 3) + alpha_X * *(b + 673 * OS1_S1 + 4);
            *(b + 794 * OS1_S1 + 3) = X_PA * *(b + 674 * OS1_S1 + 3) + alpha_X * *(b + 674 * OS1_S1 + 4);
            *(b + 799 * OS1_S1 + 3) = X_PA * *(b + 679 * OS1_S1 + 3) + alpha_X * *(b + 679 * OS1_S1 + 4);
            *(b + 800 * OS1_S1 + 3) = Y_PA * *(b + 665 * OS1_S1 + 3) + alpha_Y * *(b + 665 * OS1_S1 + 4) + 14 * one_over_two_p * (*(b + 546 * OS1_S1 + 3) - alpha_over_p * *(b + 546 * OS1_S1 + 4));
            *(b + 801 * OS1_S1 + 3) = Z_PA * *(b + 665 * OS1_S1 + 3) + alpha_Z * *(b + 665 * OS1_S1 + 4);
            *(b + 802 * OS1_S1 + 3) = Z_PA * *(b + 666 * OS1_S1 + 3) + alpha_Z * *(b + 666 * OS1_S1 + 4) + one_over_two_p * (*(b + 546 * OS1_S1 + 3) - alpha_over_p * *(b + 546 * OS1_S1 + 4));
            *(b + 803 * OS1_S1 + 3) = Z_PA * *(b + 667 * OS1_S1 + 3) + alpha_Z * *(b + 667 * OS1_S1 + 4) + 2 * one_over_two_p * (*(b + 547 * OS1_S1 + 3) - alpha_over_p * *(b + 547 * OS1_S1 + 4));
            *(b + 804 * OS1_S1 + 3) = Z_PA * *(b + 668 * OS1_S1 + 3) + alpha_Z * *(b + 668 * OS1_S1 + 4) + 3 * one_over_two_p * (*(b + 548 * OS1_S1 + 3) - alpha_over_p * *(b + 548 * OS1_S1 + 4));
            *(b + 805 * OS1_S1 + 3) = Z_PA * *(b + 669 * OS1_S1 + 3) + alpha_Z * *(b + 669 * OS1_S1 + 4) + 4 * one_over_two_p * (*(b + 549 * OS1_S1 + 3) - alpha_over_p * *(b + 549 * OS1_S1 + 4));
            *(b + 806 * OS1_S1 + 3) = Z_PA * *(b + 670 * OS1_S1 + 3) + alpha_Z * *(b + 670 * OS1_S1 + 4) + 5 * one_over_two_p * (*(b + 550 * OS1_S1 + 3) - alpha_over_p * *(b + 550 * OS1_S1 + 4));
            *(b + 807 * OS1_S1 + 3) = Z_PA * *(b + 671 * OS1_S1 + 3) + alpha_Z * *(b + 671 * OS1_S1 + 4) + 6 * one_over_two_p * (*(b + 551 * OS1_S1 + 3) - alpha_over_p * *(b + 551 * OS1_S1 + 4));
            *(b + 808 * OS1_S1 + 3) = Y_PA * *(b + 673 * OS1_S1 + 3) + alpha_Y * *(b + 673 * OS1_S1 + 4) + 6 * one_over_two_p * (*(b + 554 * OS1_S1 + 3) - alpha_over_p * *(b + 554 * OS1_S1 + 4));
            *(b + 809 * OS1_S1 + 3) = Y_PA * *(b + 674 * OS1_S1 + 3) + alpha_Y * *(b + 674 * OS1_S1 + 4) + 5 * one_over_two_p * (*(b + 555 * OS1_S1 + 3) - alpha_over_p * *(b + 555 * OS1_S1 + 4));
            *(b + 810 * OS1_S1 + 3) = Y_PA * *(b + 675 * OS1_S1 + 3) + alpha_Y * *(b + 675 * OS1_S1 + 4) + 4 * one_over_two_p * (*(b + 556 * OS1_S1 + 3) - alpha_over_p * *(b + 556 * OS1_S1 + 4));
            *(b + 811 * OS1_S1 + 3) = Y_PA * *(b + 676 * OS1_S1 + 3) + alpha_Y * *(b + 676 * OS1_S1 + 4) + 3 * one_over_two_p * (*(b + 557 * OS1_S1 + 3) - alpha_over_p * *(b + 557 * OS1_S1 + 4));
            *(b + 812 * OS1_S1 + 3) = Y_PA * *(b + 677 * OS1_S1 + 3) + alpha_Y * *(b + 677 * OS1_S1 + 4) + 2 * one_over_two_p * (*(b + 558 * OS1_S1 + 3) - alpha_over_p * *(b + 558 * OS1_S1 + 4));
            *(b + 813 * OS1_S1 + 3) = Y_PA * *(b + 678 * OS1_S1 + 3) + alpha_Y * *(b + 678 * OS1_S1 + 4) + one_over_two_p * (*(b + 559 * OS1_S1 + 3) - alpha_over_p * *(b + 559 * OS1_S1 + 4));
            *(b + 814 * OS1_S1 + 3) = Y_PA * *(b + 679 * OS1_S1 + 3) + alpha_Y * *(b + 679 * OS1_S1 + 4);
            *(b + 815 * OS1_S1 + 3) = Z_PA * *(b + 679 * OS1_S1 + 3) + alpha_Z * *(b + 679 * OS1_S1 + 4) + 14 * one_over_two_p * (*(b + 559 * OS1_S1 + 3) - alpha_over_p * *(b + 559 * OS1_S1 + 4));
            *(b + 816 * OS1_S1 + 2) = X_PA * *(b + 680 * OS1_S1 + 2) + alpha_X * *(b + 680 * OS1_S1 + 3) + 15 * one_over_two_p * (*(b + 560 * OS1_S1 + 2) - alpha_over_p * *(b + 560 * OS1_S1 + 3));
            *(b + 817 * OS1_S1 + 2) = Y_PA * *(b + 680 * OS1_S1 + 2) + alpha_Y * *(b + 680 * OS1_S1 + 3);
            *(b + 818 * OS1_S1 + 2) = Z_PA * *(b + 680 * OS1_S1 + 2) + alpha_Z * *(b + 680 * OS1_S1 + 3);
            *(b + 819 * OS1_S1 + 2) = Y_PA * *(b + 681 * OS1_S1 + 2) + alpha_Y * *(b + 681 * OS1_S1 + 3) + one_over_two_p * (*(b + 560 * OS1_S1 + 2) - alpha_over_p * *(b + 560 * OS1_S1 + 3));
            *(b + 821 * OS1_S1 + 2) = Z_PA * *(b + 682 * OS1_S1 + 2) + alpha_Z * *(b + 682 * OS1_S1 + 3) + one_over_two_p * (*(b + 560 * OS1_S1 + 2) - alpha_over_p * *(b + 560 * OS1_S1 + 3));
            *(b + 822 * OS1_S1 + 2) = Y_PA * *(b + 683 * OS1_S1 + 2) + alpha_Y * *(b + 683 * OS1_S1 + 3) + 2 * one_over_two_p * (*(b + 561 * OS1_S1 + 2) - alpha_over_p * *(b + 561 * OS1_S1 + 3));
            *(b + 825 * OS1_S1 + 2) = Z_PA * *(b + 685 * OS1_S1 + 2) + alpha_Z * *(b + 685 * OS1_S1 + 3) + 2 * one_over_two_p * (*(b + 562 * OS1_S1 + 2) - alpha_over_p * *(b + 562 * OS1_S1 + 3));
            *(b + 826 * OS1_S1 + 2) = Y_PA * *(b + 686 * OS1_S1 + 2) + alpha_Y * *(b + 686 * OS1_S1 + 3) + 3 * one_over_two_p * (*(b + 563 * OS1_S1 + 2) - alpha_over_p * *(b + 563 * OS1_S1 + 3));
            *(b + 827 * OS1_S1 + 2) = Z_PA * *(b + 686 * OS1_S1 + 2) + alpha_Z * *(b + 686 * OS1_S1 + 3);
            *(b + 830 * OS1_S1 + 2) = Z_PA * *(b + 689 * OS1_S1 + 2) + alpha_Z * *(b + 689 * OS1_S1 + 3) + 3 * one_over_two_p * (*(b + 565 * OS1_S1 + 2) - alpha_over_p * *(b + 565 * OS1_S1 + 3));
            *(b + 831 * OS1_S1 + 2) = Y_PA * *(b + 690 * OS1_S1 + 2) + alpha_Y * *(b + 690 * OS1_S1 + 3) + 4 * one_over_two_p * (*(b + 566 * OS1_S1 + 2) - alpha_over_p * *(b + 566 * OS1_S1 + 3));
            *(b + 832 * OS1_S1 + 2) = Z_PA * *(b + 690 * OS1_S1 + 2) + alpha_Z * *(b + 690 * OS1_S1 + 3);
            *(b + 835 * OS1_S1 + 2) = Y_PA * *(b + 694 * OS1_S1 + 2) + alpha_Y * *(b + 694 * OS1_S1 + 3);
            *(b + 836 * OS1_S1 + 2) = Z_PA * *(b + 694 * OS1_S1 + 2) + alpha_Z * *(b + 694 * OS1_S1 + 3) + 4 * one_over_two_p * (*(b + 569 * OS1_S1 + 2) - alpha_over_p * *(b + 569 * OS1_S1 + 3));
            *(b + 837 * OS1_S1 + 2) = Y_PA * *(b + 695 * OS1_S1 + 2) + alpha_Y * *(b + 695 * OS1_S1 + 3) + 5 * one_over_two_p * (*(b + 570 * OS1_S1 + 2) - alpha_over_p * *(b + 570 * OS1_S1 + 3));
            *(b + 838 * OS1_S1 + 2) = Z_PA * *(b + 695 * OS1_S1 + 2) + alpha_Z * *(b + 695 * OS1_S1 + 3);
            *(b + 839 * OS1_S1 + 2) = Z_PA * *(b + 696 * OS1_S1 + 2) + alpha_Z * *(b + 696 * OS1_S1 + 3) + one_over_two_p * (*(b + 570 * OS1_S1 + 2) - alpha_over_p * *(b + 570 * OS1_S1 + 3));
            *(b + 842 * OS1_S1 + 2) = Y_PA * *(b + 700 * OS1_S1 + 2) + alpha_Y * *(b + 700 * OS1_S1 + 3);
            *(b + 843 * OS1_S1 + 2) = Z_PA * *(b + 700 * OS1_S1 + 2) + alpha_Z * *(b + 700 * OS1_S1 + 3) + 5 * one_over_two_p * (*(b + 574 * OS1_S1 + 2) - alpha_over_p * *(b + 574 * OS1_S1 + 3));
            *(b + 844 * OS1_S1 + 2) = Y_PA * *(b + 701 * OS1_S1 + 2) + alpha_Y * *(b + 701 * OS1_S1 + 3) + 6 * one_over_two_p * (*(b + 575 * OS1_S1 + 2) - alpha_over_p * *(b + 575 * OS1_S1 + 3));
            *(b + 845 * OS1_S1 + 2) = Z_PA * *(b + 701 * OS1_S1 + 2) + alpha_Z * *(b + 701 * OS1_S1 + 3);
            *(b + 846 * OS1_S1 + 2) = Z_PA * *(b + 702 * OS1_S1 + 2) + alpha_Z * *(b + 702 * OS1_S1 + 3) + one_over_two_p * (*(b + 575 * OS1_S1 + 2) - alpha_over_p * *(b + 575 * OS1_S1 + 3));
            *(b + 849 * OS1_S1 + 2) = Y_PA * *(b + 706 * OS1_S1 + 2) + alpha_Y * *(b + 706 * OS1_S1 + 3) + one_over_two_p * (*(b + 580 * OS1_S1 + 2) - alpha_over_p * *(b + 580 * OS1_S1 + 3));
            *(b + 850 * OS1_S1 + 2) = Y_PA * *(b + 707 * OS1_S1 + 2) + alpha_Y * *(b + 707 * OS1_S1 + 3);
            *(b + 851 * OS1_S1 + 2) = Z_PA * *(b + 707 * OS1_S1 + 2) + alpha_Z * *(b + 707 * OS1_S1 + 3) + 6 * one_over_two_p * (*(b + 580 * OS1_S1 + 2) - alpha_over_p * *(b + 580 * OS1_S1 + 3));
            *(b + 852 * OS1_S1 + 2) = Y_PA * *(b + 708 * OS1_S1 + 2) + alpha_Y * *(b + 708 * OS1_S1 + 3) + 7 * one_over_two_p * (*(b + 581 * OS1_S1 + 2) - alpha_over_p * *(b + 581 * OS1_S1 + 3));
            *(b + 853 * OS1_S1 + 2) = Z_PA * *(b + 708 * OS1_S1 + 2) + alpha_Z * *(b + 708 * OS1_S1 + 3);
            *(b + 854 * OS1_S1 + 2) = Z_PA * *(b + 709 * OS1_S1 + 2) + alpha_Z * *(b + 709 * OS1_S1 + 3) + one_over_two_p * (*(b + 581 * OS1_S1 + 2) - alpha_over_p * *(b + 581 * OS1_S1 + 3));
            *(b + 855 * OS1_S1 + 2) = Z_PA * *(b + 710 * OS1_S1 + 2) + alpha_Z * *(b + 710 * OS1_S1 + 3) + 2 * one_over_two_p * (*(b + 582 * OS1_S1 + 2) - alpha_over_p * *(b + 582 * OS1_S1 + 3));
            *(b + 858 * OS1_S1 + 2) = Y_PA * *(b + 714 * OS1_S1 + 2) + alpha_Y * *(b + 714 * OS1_S1 + 3) + one_over_two_p * (*(b + 587 * OS1_S1 + 2) - alpha_over_p * *(b + 587 * OS1_S1 + 3));
            *(b + 859 * OS1_S1 + 2) = Y_PA * *(b + 715 * OS1_S1 + 2) + alpha_Y * *(b + 715 * OS1_S1 + 3);
            *(b + 860 * OS1_S1 + 2) = Z_PA * *(b + 715 * OS1_S1 + 2) + alpha_Z * *(b + 715 * OS1_S1 + 3) + 7 * one_over_two_p * (*(b + 587 * OS1_S1 + 2) - alpha_over_p * *(b + 587 * OS1_S1 + 3));
            *(b + 861 * OS1_S1 + 2) = X_PA * *(b + 725 * OS1_S1 + 2) + alpha_X * *(b + 725 * OS1_S1 + 3) + 6 * one_over_two_p * (*(b + 605 * OS1_S1 + 2) - alpha_over_p * *(b + 605 * OS1_S1 + 3));
            *(b + 862 * OS1_S1 + 2) = Z_PA * *(b + 716 * OS1_S1 + 2) + alpha_Z * *(b + 716 * OS1_S1 + 3);
            *(b + 863 * OS1_S1 + 2) = Z_PA * *(b + 717 * OS1_S1 + 2) + alpha_Z * *(b + 717 * OS1_S1 + 3) + one_over_two_p * (*(b + 588 * OS1_S1 + 2) - alpha_over_p * *(b + 588 * OS1_S1 + 3));
            *(b + 864 * OS1_S1 + 2) = Z_PA * *(b + 718 * OS1_S1 + 2) + alpha_Z * *(b + 718 * OS1_S1 + 3) + 2 * one_over_two_p * (*(b + 589 * OS1_S1 + 2) - alpha_over_p * *(b + 589 * OS1_S1 + 3));
            *(b + 867 * OS1_S1 + 2) = Y_PA * *(b + 722 * OS1_S1 + 2) + alpha_Y * *(b + 722 * OS1_S1 + 3) + 2 * one_over_two_p * (*(b + 594 * OS1_S1 + 2) - alpha_over_p * *(b + 594 * OS1_S1 + 3));
            *(b + 868 * OS1_S1 + 2) = Y_PA * *(b + 723 * OS1_S1 + 2) + alpha_Y * *(b + 723 * OS1_S1 + 3) + one_over_two_p * (*(b + 595 * OS1_S1 + 2) - alpha_over_p * *(b + 595 * OS1_S1 + 3));
            *(b + 869 * OS1_S1 + 2) = Y_PA * *(b + 724 * OS1_S1 + 2) + alpha_Y * *(b + 724 * OS1_S1 + 3);
            *(b + 870 * OS1_S1 + 2) = X_PA * *(b + 734 * OS1_S1 + 2) + alpha_X * *(b + 734 * OS1_S1 + 3) + 6 * one_over_two_p * (*(b + 614 * OS1_S1 + 2) - alpha_over_p * *(b + 614 * OS1_S1 + 3));
            *(b + 871 * OS1_S1 + 2) = X_PA * *(b + 735 * OS1_S1 + 2) + alpha_X * *(b + 735 * OS1_S1 + 3) + 5 * one_over_two_p * (*(b + 615 * OS1_S1 + 2) - alpha_over_p * *(b + 615 * OS1_S1 + 3));
            *(b + 872 * OS1_S1 + 2) = Z_PA * *(b + 725 * OS1_S1 + 2) + alpha_Z * *(b + 725 * OS1_S1 + 3);
            *(b + 873 * OS1_S1 + 2) = Z_PA * *(b + 726 * OS1_S1 + 2) + alpha_Z * *(b + 726 * OS1_S1 + 3) + one_over_two_p * (*(b + 596 * OS1_S1 + 2) - alpha_over_p * *(b + 596 * OS1_S1 + 3));
            *(b + 874 * OS1_S1 + 2) = Z_PA * *(b + 727 * OS1_S1 + 2) + alpha_Z * *(b + 727 * OS1_S1 + 3) + 2 * one_over_two_p * (*(b + 597 * OS1_S1 + 2) - alpha_over_p * *(b + 597 * OS1_S1 + 3));
            *(b + 875 * OS1_S1 + 2) = Z_PA * *(b + 728 * OS1_S1 + 2) + alpha_Z * *(b + 728 * OS1_S1 + 3) + 3 * one_over_two_p * (*(b + 598 * OS1_S1 + 2) - alpha_over_p * *(b + 598 * OS1_S1 + 3));
            *(b + 878 * OS1_S1 + 2) = Y_PA * *(b + 732 * OS1_S1 + 2) + alpha_Y * *(b + 732 * OS1_S1 + 3) + 2 * one_over_two_p * (*(b + 603 * OS1_S1 + 2) - alpha_over_p * *(b + 603 * OS1_S1 + 3));
            *(b + 879 * OS1_S1 + 2) = Y_PA * *(b + 733 * OS1_S1 + 2) + alpha_Y * *(b + 733 * OS1_S1 + 3) + one_over_two_p * (*(b + 604 * OS1_S1 + 2) - alpha_over_p * *(b + 604 * OS1_S1 + 3));
            *(b + 880 * OS1_S1 + 2) = Y_PA * *(b + 734 * OS1_S1 + 2) + alpha_Y * *(b + 734 * OS1_S1 + 3);
            *(b + 881 * OS1_S1 + 2) = X_PA * *(b + 745 * OS1_S1 + 2) + alpha_X * *(b + 745 * OS1_S1 + 3) + 5 * one_over_two_p * (*(b + 625 * OS1_S1 + 2) - alpha_over_p * *(b + 625 * OS1_S1 + 3));
            *(b + 882 * OS1_S1 + 2) = X_PA * *(b + 746 * OS1_S1 + 2) + alpha_X * *(b + 746 * OS1_S1 + 3) + 4 * one_over_two_p * (*(b + 626 * OS1_S1 + 2) - alpha_over_p * *(b + 626 * OS1_S1 + 3));
            *(b + 883 * OS1_S1 + 2) = Z_PA * *(b + 735 * OS1_S1 + 2) + alpha_Z * *(b + 735 * OS1_S1 + 3);
            *(b + 884 * OS1_S1 + 2) = Z_PA * *(b + 736 * OS1_S1 + 2) + alpha_Z * *(b + 736 * OS1_S1 + 3) + one_over_two_p * (*(b + 605 * OS1_S1 + 2) - alpha_over_p * *(b + 605 * OS1_S1 + 3));
            *(b + 885 * OS1_S1 + 2) = Z_PA * *(b + 737 * OS1_S1 + 2) + alpha_Z * *(b + 737 * OS1_S1 + 3) + 2 * one_over_two_p * (*(b + 606 * OS1_S1 + 2) - alpha_over_p * *(b + 606 * OS1_S1 + 3));
            *(b + 890 * OS1_S1 + 2) = Y_PA * *(b + 743 * OS1_S1 + 2) + alpha_Y * *(b + 743 * OS1_S1 + 3) + 2 * one_over_two_p * (*(b + 613 * OS1_S1 + 2) - alpha_over_p * *(b + 613 * OS1_S1 + 3));
            *(b + 891 * OS1_S1 + 2) = Y_PA * *(b + 744 * OS1_S1 + 2) + alpha_Y * *(b + 744 * OS1_S1 + 3) + one_over_two_p * (*(b + 614 * OS1_S1 + 2) - alpha_over_p * *(b + 614 * OS1_S1 + 3));
            *(b + 892 * OS1_S1 + 2) = Y_PA * *(b + 745 * OS1_S1 + 2) + alpha_Y * *(b + 745 * OS1_S1 + 3);
            *(b + 893 * OS1_S1 + 2) = X_PA * *(b + 757 * OS1_S1 + 2) + alpha_X * *(b + 757 * OS1_S1 + 3) + 4 * one_over_two_p * (*(b + 637 * OS1_S1 + 2) - alpha_over_p * *(b + 637 * OS1_S1 + 3));
            *(b + 894 * OS1_S1 + 2) = X_PA * *(b + 758 * OS1_S1 + 2) + alpha_X * *(b + 758 * OS1_S1 + 3) + 3 * one_over_two_p * (*(b + 638 * OS1_S1 + 2) - alpha_over_p * *(b + 638 * OS1_S1 + 3));
            *(b + 895 * OS1_S1 + 2) = Z_PA * *(b + 746 * OS1_S1 + 2) + alpha_Z * *(b + 746 * OS1_S1 + 3);
            *(b + 896 * OS1_S1 + 2) = Z_PA * *(b + 747 * OS1_S1 + 2) + alpha_Z * *(b + 747 * OS1_S1 + 3) + one_over_two_p * (*(b + 615 * OS1_S1 + 2) - alpha_over_p * *(b + 615 * OS1_S1 + 3));
            *(b + 904 * OS1_S1 + 2) = Y_PA * *(b + 756 * OS1_S1 + 2) + alpha_Y * *(b + 756 * OS1_S1 + 3) + one_over_two_p * (*(b + 625 * OS1_S1 + 2) - alpha_over_p * *(b + 625 * OS1_S1 + 3));
            *(b + 905 * OS1_S1 + 2) = Y_PA * *(b + 757 * OS1_S1 + 2) + alpha_Y * *(b + 757 * OS1_S1 + 3);
            *(b + 906 * OS1_S1 + 2) = X_PA * *(b + 770 * OS1_S1 + 2) + alpha_X * *(b + 770 * OS1_S1 + 3) + 3 * one_over_two_p * (*(b + 650 * OS1_S1 + 2) - alpha_over_p * *(b + 650 * OS1_S1 + 3));
            *(b + 907 * OS1_S1 + 2) = X_PA * *(b + 771 * OS1_S1 + 2) + alpha_X * *(b + 771 * OS1_S1 + 3) + 2 * one_over_two_p * (*(b + 651 * OS1_S1 + 2) - alpha_over_p * *(b + 651 * OS1_S1 + 3));
            *(b + 908 * OS1_S1 + 2) = Z_PA * *(b + 758 * OS1_S1 + 2) + alpha_Z * *(b + 758 * OS1_S1 + 3);
            *(b + 913 * OS1_S1 + 2) = X_PA * *(b + 777 * OS1_S1 + 2) + alpha_X * *(b + 777 * OS1_S1 + 3) + 2 * one_over_two_p * (*(b + 657 * OS1_S1 + 2) - alpha_over_p * *(b + 657 * OS1_S1 + 3));
            *(b + 914 * OS1_S1 + 2) = X_PA * *(b + 778 * OS1_S1 + 2) + alpha_X * *(b + 778 * OS1_S1 + 3) + 2 * one_over_two_p * (*(b + 658 * OS1_S1 + 2) - alpha_over_p * *(b + 658 * OS1_S1 + 3));
            *(b + 919 * OS1_S1 + 2) = Y_PA * *(b + 770 * OS1_S1 + 2) + alpha_Y * *(b + 770 * OS1_S1 + 3);
            *(b + 920 * OS1_S1 + 2) = X_PA * *(b + 784 * OS1_S1 + 2) + alpha_X * *(b + 784 * OS1_S1 + 3) + 2 * one_over_two_p * (*(b + 664 * OS1_S1 + 2) - alpha_over_p * *(b + 664 * OS1_S1 + 3));
            *(b + 921 * OS1_S1 + 2) = X_PA * *(b + 785 * OS1_S1 + 2) + alpha_X * *(b + 785 * OS1_S1 + 3) + one_over_two_p * (*(b + 665 * OS1_S1 + 2) - alpha_over_p * *(b + 665 * OS1_S1 + 3));
            *(b + 926 * OS1_S1 + 2) = X_PA * *(b + 790 * OS1_S1 + 2) + alpha_X * *(b + 790 * OS1_S1 + 3) + one_over_two_p * (*(b + 670 * OS1_S1 + 2) - alpha_over_p * *(b + 670 * OS1_S1 + 3));
            *(b + 927 * OS1_S1 + 2) = X_PA * *(b + 791 * OS1_S1 + 2) + alpha_X * *(b + 791 * OS1_S1 + 3) + one_over_two_p * (*(b + 671 * OS1_S1 + 2) - alpha_over_p * *(b + 671 * OS1_S1 + 3));
            *(b + 928 * OS1_S1 + 2) = X_PA * *(b + 792 * OS1_S1 + 2) + alpha_X * *(b + 792 * OS1_S1 + 3) + one_over_two_p * (*(b + 672 * OS1_S1 + 2) - alpha_over_p * *(b + 672 * OS1_S1 + 3));
            *(b + 929 * OS1_S1 + 2) = X_PA * *(b + 793 * OS1_S1 + 2) + alpha_X * *(b + 793 * OS1_S1 + 3) + one_over_two_p * (*(b + 673 * OS1_S1 + 2) - alpha_over_p * *(b + 673 * OS1_S1 + 3));
            *(b + 930 * OS1_S1 + 2) = X_PA * *(b + 794 * OS1_S1 + 2) + alpha_X * *(b + 794 * OS1_S1 + 3) + one_over_two_p * (*(b + 674 * OS1_S1 + 2) - alpha_over_p * *(b + 674 * OS1_S1 + 3));
            *(b + 935 * OS1_S1 + 2) = X_PA * *(b + 799 * OS1_S1 + 2) + alpha_X * *(b + 799 * OS1_S1 + 3) + one_over_two_p * (*(b + 679 * OS1_S1 + 2) - alpha_over_p * *(b + 679 * OS1_S1 + 3));
            *(b + 936 * OS1_S1 + 2) = X_PA * *(b + 800 * OS1_S1 + 2) + alpha_X * *(b + 800 * OS1_S1 + 3);
            *(b + 940 * OS1_S1 + 2) = X_PA * *(b + 804 * OS1_S1 + 2) + alpha_X * *(b + 804 * OS1_S1 + 3);
            *(b + 941 * OS1_S1 + 2) = X_PA * *(b + 805 * OS1_S1 + 2) + alpha_X * *(b + 805 * OS1_S1 + 3);
            *(b + 942 * OS1_S1 + 2) = X_PA * *(b + 806 * OS1_S1 + 2) + alpha_X * *(b + 806 * OS1_S1 + 3);
            *(b + 943 * OS1_S1 + 2) = X_PA * *(b + 807 * OS1_S1 + 2) + alpha_X * *(b + 807 * OS1_S1 + 3);
            *(b + 944 * OS1_S1 + 2) = X_PA * *(b + 808 * OS1_S1 + 2) + alpha_X * *(b + 808 * OS1_S1 + 3);
            *(b + 945 * OS1_S1 + 2) = X_PA * *(b + 809 * OS1_S1 + 2) + alpha_X * *(b + 809 * OS1_S1 + 3);
            *(b + 946 * OS1_S1 + 2) = X_PA * *(b + 810 * OS1_S1 + 2) + alpha_X * *(b + 810 * OS1_S1 + 3);
            *(b + 947 * OS1_S1 + 2) = X_PA * *(b + 811 * OS1_S1 + 2) + alpha_X * *(b + 811 * OS1_S1 + 3);
            *(b + 951 * OS1_S1 + 2) = X_PA * *(b + 815 * OS1_S1 + 2) + alpha_X * *(b + 815 * OS1_S1 + 3);
            *(b + 952 * OS1_S1 + 2) = Y_PA * *(b + 800 * OS1_S1 + 2) + alpha_Y * *(b + 800 * OS1_S1 + 3) + 15 * one_over_two_p * (*(b + 665 * OS1_S1 + 2) - alpha_over_p * *(b + 665 * OS1_S1 + 3));
            *(b + 953 * OS1_S1 + 2) = Z_PA * *(b + 800 * OS1_S1 + 2) + alpha_Z * *(b + 800 * OS1_S1 + 3);
            *(b + 954 * OS1_S1 + 2) = Z_PA * *(b + 801 * OS1_S1 + 2) + alpha_Z * *(b + 801 * OS1_S1 + 3) + one_over_two_p * (*(b + 665 * OS1_S1 + 2) - alpha_over_p * *(b + 665 * OS1_S1 + 3));
            *(b + 955 * OS1_S1 + 2) = Z_PA * *(b + 802 * OS1_S1 + 2) + alpha_Z * *(b + 802 * OS1_S1 + 3) + 2 * one_over_two_p * (*(b + 666 * OS1_S1 + 2) - alpha_over_p * *(b + 666 * OS1_S1 + 3));
            *(b + 956 * OS1_S1 + 2) = Z_PA * *(b + 803 * OS1_S1 + 2) + alpha_Z * *(b + 803 * OS1_S1 + 3) + 3 * one_over_two_p * (*(b + 667 * OS1_S1 + 2) - alpha_over_p * *(b + 667 * OS1_S1 + 3));
            *(b + 957 * OS1_S1 + 2) = Z_PA * *(b + 804 * OS1_S1 + 2) + alpha_Z * *(b + 804 * OS1_S1 + 3) + 4 * one_over_two_p * (*(b + 668 * OS1_S1 + 2) - alpha_over_p * *(b + 668 * OS1_S1 + 3));
            *(b + 958 * OS1_S1 + 2) = Z_PA * *(b + 805 * OS1_S1 + 2) + alpha_Z * *(b + 805 * OS1_S1 + 3) + 5 * one_over_two_p * (*(b + 669 * OS1_S1 + 2) - alpha_over_p * *(b + 669 * OS1_S1 + 3));
            *(b + 959 * OS1_S1 + 2) = Z_PA * *(b + 806 * OS1_S1 + 2) + alpha_Z * *(b + 806 * OS1_S1 + 3) + 6 * one_over_two_p * (*(b + 670 * OS1_S1 + 2) - alpha_over_p * *(b + 670 * OS1_S1 + 3));
            *(b + 960 * OS1_S1 + 2) = Z_PA * *(b + 807 * OS1_S1 + 2) + alpha_Z * *(b + 807 * OS1_S1 + 3) + 7 * one_over_two_p * (*(b + 671 * OS1_S1 + 2) - alpha_over_p * *(b + 671 * OS1_S1 + 3));
            *(b + 961 * OS1_S1 + 2) = Y_PA * *(b + 809 * OS1_S1 + 2) + alpha_Y * *(b + 809 * OS1_S1 + 3) + 6 * one_over_two_p * (*(b + 674 * OS1_S1 + 2) - alpha_over_p * *(b + 674 * OS1_S1 + 3));
            *(b + 962 * OS1_S1 + 2) = Y_PA * *(b + 810 * OS1_S1 + 2) + alpha_Y * *(b + 810 * OS1_S1 + 3) + 5 * one_over_two_p * (*(b + 675 * OS1_S1 + 2) - alpha_over_p * *(b + 675 * OS1_S1 + 3));
            *(b + 963 * OS1_S1 + 2) = Y_PA * *(b + 811 * OS1_S1 + 2) + alpha_Y * *(b + 811 * OS1_S1 + 3) + 4 * one_over_two_p * (*(b + 676 * OS1_S1 + 2) - alpha_over_p * *(b + 676 * OS1_S1 + 3));
            *(b + 964 * OS1_S1 + 2) = Y_PA * *(b + 812 * OS1_S1 + 2) + alpha_Y * *(b + 812 * OS1_S1 + 3) + 3 * one_over_two_p * (*(b + 677 * OS1_S1 + 2) - alpha_over_p * *(b + 677 * OS1_S1 + 3));
            *(b + 965 * OS1_S1 + 2) = Y_PA * *(b + 813 * OS1_S1 + 2) + alpha_Y * *(b + 813 * OS1_S1 + 3) + 2 * one_over_two_p * (*(b + 678 * OS1_S1 + 2) - alpha_over_p * *(b + 678 * OS1_S1 + 3));
            *(b + 966 * OS1_S1 + 2) = Y_PA * *(b + 814 * OS1_S1 + 2) + alpha_Y * *(b + 814 * OS1_S1 + 3) + one_over_two_p * (*(b + 679 * OS1_S1 + 2) - alpha_over_p * *(b + 679 * OS1_S1 + 3));
            *(b + 967 * OS1_S1 + 2) = Y_PA * *(b + 815 * OS1_S1 + 2) + alpha_Y * *(b + 815 * OS1_S1 + 3);
            *(b + 968 * OS1_S1 + 2) = Z_PA * *(b + 815 * OS1_S1 + 2) + alpha_Z * *(b + 815 * OS1_S1 + 3) + 15 * one_over_two_p * (*(b + 679 * OS1_S1 + 2) - alpha_over_p * *(b + 679 * OS1_S1 + 3));
            *(b + 969 * OS1_S1 + 1) = X_PA * *(b + 816 * OS1_S1 + 1) + alpha_X * *(b + 816 * OS1_S1 + 2) + 16 * one_over_two_p * (*(b + 680 * OS1_S1 + 1) - alpha_over_p * *(b + 680 * OS1_S1 + 2));
            *(b + 970 * OS1_S1 + 1) = Y_PA * *(b + 816 * OS1_S1 + 1) + alpha_Y * *(b + 816 * OS1_S1 + 2);
            *(b + 971 * OS1_S1 + 1) = Z_PA * *(b + 816 * OS1_S1 + 1) + alpha_Z * *(b + 816 * OS1_S1 + 2);
            *(b + 972 * OS1_S1 + 1) = Y_PA * *(b + 817 * OS1_S1 + 1) + alpha_Y * *(b + 817 * OS1_S1 + 2) + one_over_two_p * (*(b + 680 * OS1_S1 + 1) - alpha_over_p * *(b + 680 * OS1_S1 + 2));
            *(b + 974 * OS1_S1 + 1) = Z_PA * *(b + 818 * OS1_S1 + 1) + alpha_Z * *(b + 818 * OS1_S1 + 2) + one_over_two_p * (*(b + 680 * OS1_S1 + 1) - alpha_over_p * *(b + 680 * OS1_S1 + 2));
            *(b + 975 * OS1_S1 + 1) = Y_PA * *(b + 819 * OS1_S1 + 1) + alpha_Y * *(b + 819 * OS1_S1 + 2) + 2 * one_over_two_p * (*(b + 681 * OS1_S1 + 1) - alpha_over_p * *(b + 681 * OS1_S1 + 2));
            *(b + 976 * OS1_S1 + 1) = Z_PA * *(b + 819 * OS1_S1 + 1) + alpha_Z * *(b + 819 * OS1_S1 + 2);
            *(b + 978 * OS1_S1 + 1) = Z_PA * *(b + 821 * OS1_S1 + 1) + alpha_Z * *(b + 821 * OS1_S1 + 2) + 2 * one_over_two_p * (*(b + 682 * OS1_S1 + 1) - alpha_over_p * *(b + 682 * OS1_S1 + 2));
            *(b + 979 * OS1_S1 + 1) = Y_PA * *(b + 822 * OS1_S1 + 1) + alpha_Y * *(b + 822 * OS1_S1 + 2) + 3 * one_over_two_p * (*(b + 683 * OS1_S1 + 1) - alpha_over_p * *(b + 683 * OS1_S1 + 2));
            *(b + 980 * OS1_S1 + 1) = Z_PA * *(b + 822 * OS1_S1 + 1) + alpha_Z * *(b + 822 * OS1_S1 + 2);
            *(b + 982 * OS1_S1 + 1) = Y_PA * *(b + 825 * OS1_S1 + 1) + alpha_Y * *(b + 825 * OS1_S1 + 2);
            *(b + 983 * OS1_S1 + 1) = Z_PA * *(b + 825 * OS1_S1 + 1) + alpha_Z * *(b + 825 * OS1_S1 + 2) + 3 * one_over_two_p * (*(b + 685 * OS1_S1 + 1) - alpha_over_p * *(b + 685 * OS1_S1 + 2));
            *(b + 984 * OS1_S1 + 1) = Y_PA * *(b + 826 * OS1_S1 + 1) + alpha_Y * *(b + 826 * OS1_S1 + 2) + 4 * one_over_two_p * (*(b + 686 * OS1_S1 + 1) - alpha_over_p * *(b + 686 * OS1_S1 + 2));
            *(b + 985 * OS1_S1 + 1) = Z_PA * *(b + 826 * OS1_S1 + 1) + alpha_Z * *(b + 826 * OS1_S1 + 2);
            *(b + 986 * OS1_S1 + 1) = Z_PA * *(b + 827 * OS1_S1 + 1) + alpha_Z * *(b + 827 * OS1_S1 + 2) + one_over_two_p * (*(b + 686 * OS1_S1 + 1) - alpha_over_p * *(b + 686 * OS1_S1 + 2));
            *(b + 988 * OS1_S1 + 1) = Y_PA * *(b + 830 * OS1_S1 + 1) + alpha_Y * *(b + 830 * OS1_S1 + 2);
            *(b + 989 * OS1_S1 + 1) = Z_PA * *(b + 830 * OS1_S1 + 1) + alpha_Z * *(b + 830 * OS1_S1 + 2) + 4 * one_over_two_p * (*(b + 689 * OS1_S1 + 1) - alpha_over_p * *(b + 689 * OS1_S1 + 2));
            *(b + 990 * OS1_S1 + 1) = Y_PA * *(b + 831 * OS1_S1 + 1) + alpha_Y * *(b + 831 * OS1_S1 + 2) + 5 * one_over_two_p * (*(b + 690 * OS1_S1 + 1) - alpha_over_p * *(b + 690 * OS1_S1 + 2));
            *(b + 991 * OS1_S1 + 1) = Z_PA * *(b + 831 * OS1_S1 + 1) + alpha_Z * *(b + 831 * OS1_S1 + 2);
            *(b + 992 * OS1_S1 + 1) = Z_PA * *(b + 832 * OS1_S1 + 1) + alpha_Z * *(b + 832 * OS1_S1 + 2) + one_over_two_p * (*(b + 690 * OS1_S1 + 1) - alpha_over_p * *(b + 690 * OS1_S1 + 2));
            *(b + 994 * OS1_S1 + 1) = Y_PA * *(b + 835 * OS1_S1 + 1) + alpha_Y * *(b + 835 * OS1_S1 + 2) + one_over_two_p * (*(b + 694 * OS1_S1 + 1) - alpha_over_p * *(b + 694 * OS1_S1 + 2));
            *(b + 995 * OS1_S1 + 1) = Y_PA * *(b + 836 * OS1_S1 + 1) + alpha_Y * *(b + 836 * OS1_S1 + 2);
            *(b + 996 * OS1_S1 + 1) = Z_PA * *(b + 836 * OS1_S1 + 1) + alpha_Z * *(b + 836 * OS1_S1 + 2) + 5 * one_over_two_p * (*(b + 694 * OS1_S1 + 1) - alpha_over_p * *(b + 694 * OS1_S1 + 2));
            *(b + 997 * OS1_S1 + 1) = Y_PA * *(b + 837 * OS1_S1 + 1) + alpha_Y * *(b + 837 * OS1_S1 + 2) + 6 * one_over_two_p * (*(b + 695 * OS1_S1 + 1) - alpha_over_p * *(b + 695 * OS1_S1 + 2));
            *(b + 998 * OS1_S1 + 1) = Z_PA * *(b + 837 * OS1_S1 + 1) + alpha_Z * *(b + 837 * OS1_S1 + 2);
            *(b + 999 * OS1_S1 + 1) = Z_PA * *(b + 838 * OS1_S1 + 1) + alpha_Z * *(b + 838 * OS1_S1 + 2) + one_over_two_p * (*(b + 695 * OS1_S1 + 1) - alpha_over_p * *(b + 695 * OS1_S1 + 2));
            *(b + 1000 * OS1_S1 + 1) = Z_PA * *(b + 839 * OS1_S1 + 1) + alpha_Z * *(b + 839 * OS1_S1 + 2) + 2 * one_over_two_p * (*(b + 696 * OS1_S1 + 1) - alpha_over_p * *(b + 696 * OS1_S1 + 2));
            *(b + 1002 * OS1_S1 + 1) = Y_PA * *(b + 842 * OS1_S1 + 1) + alpha_Y * *(b + 842 * OS1_S1 + 2) + one_over_two_p * (*(b + 700 * OS1_S1 + 1) - alpha_over_p * *(b + 700 * OS1_S1 + 2));
            *(b + 1003 * OS1_S1 + 1) = Y_PA * *(b + 843 * OS1_S1 + 1) + alpha_Y * *(b + 843 * OS1_S1 + 2);
            *(b + 1004 * OS1_S1 + 1) = Z_PA * *(b + 843 * OS1_S1 + 1) + alpha_Z * *(b + 843 * OS1_S1 + 2) + 6 * one_over_two_p * (*(b + 700 * OS1_S1 + 1) - alpha_over_p * *(b + 700 * OS1_S1 + 2));
            *(b + 1005 * OS1_S1 + 1) = Y_PA * *(b + 844 * OS1_S1 + 1) + alpha_Y * *(b + 844 * OS1_S1 + 2) + 7 * one_over_two_p * (*(b + 701 * OS1_S1 + 1) - alpha_over_p * *(b + 701 * OS1_S1 + 2));
            *(b + 1006 * OS1_S1 + 1) = Z_PA * *(b + 844 * OS1_S1 + 1) + alpha_Z * *(b + 844 * OS1_S1 + 2);
            *(b + 1007 * OS1_S1 + 1) = Z_PA * *(b + 845 * OS1_S1 + 1) + alpha_Z * *(b + 845 * OS1_S1 + 2) + one_over_two_p * (*(b + 701 * OS1_S1 + 1) - alpha_over_p * *(b + 701 * OS1_S1 + 2));
            *(b + 1008 * OS1_S1 + 1) = Z_PA * *(b + 846 * OS1_S1 + 1) + alpha_Z * *(b + 846 * OS1_S1 + 2) + 2 * one_over_two_p * (*(b + 702 * OS1_S1 + 1) - alpha_over_p * *(b + 702 * OS1_S1 + 2));
            *(b + 1010 * OS1_S1 + 1) = Y_PA * *(b + 849 * OS1_S1 + 1) + alpha_Y * *(b + 849 * OS1_S1 + 2) + 2 * one_over_two_p * (*(b + 706 * OS1_S1 + 1) - alpha_over_p * *(b + 706 * OS1_S1 + 2));
            *(b + 1011 * OS1_S1 + 1) = Y_PA * *(b + 850 * OS1_S1 + 1) + alpha_Y * *(b + 850 * OS1_S1 + 2) + one_over_two_p * (*(b + 707 * OS1_S1 + 1) - alpha_over_p * *(b + 707 * OS1_S1 + 2));
            *(b + 1012 * OS1_S1 + 1) = Y_PA * *(b + 851 * OS1_S1 + 1) + alpha_Y * *(b + 851 * OS1_S1 + 2);
            *(b + 1013 * OS1_S1 + 1) = Z_PA * *(b + 851 * OS1_S1 + 1) + alpha_Z * *(b + 851 * OS1_S1 + 2) + 7 * one_over_two_p * (*(b + 707 * OS1_S1 + 1) - alpha_over_p * *(b + 707 * OS1_S1 + 2));
            *(b + 1014 * OS1_S1 + 1) = X_PA * *(b + 861 * OS1_S1 + 1) + alpha_X * *(b + 861 * OS1_S1 + 2) + 7 * one_over_two_p * (*(b + 725 * OS1_S1 + 1) - alpha_over_p * *(b + 725 * OS1_S1 + 2));
            *(b + 1015 * OS1_S1 + 1) = Z_PA * *(b + 852 * OS1_S1 + 1) + alpha_Z * *(b + 852 * OS1_S1 + 2);
            *(b + 1016 * OS1_S1 + 1) = Z_PA * *(b + 853 * OS1_S1 + 1) + alpha_Z * *(b + 853 * OS1_S1 + 2) + one_over_two_p * (*(b + 708 * OS1_S1 + 1) - alpha_over_p * *(b + 708 * OS1_S1 + 2));
            *(b + 1017 * OS1_S1 + 1) = Z_PA * *(b + 854 * OS1_S1 + 1) + alpha_Z * *(b + 854 * OS1_S1 + 2) + 2 * one_over_two_p * (*(b + 709 * OS1_S1 + 1) - alpha_over_p * *(b + 709 * OS1_S1 + 2));
            *(b + 1018 * OS1_S1 + 1) = Z_PA * *(b + 855 * OS1_S1 + 1) + alpha_Z * *(b + 855 * OS1_S1 + 2) + 3 * one_over_two_p * (*(b + 710 * OS1_S1 + 1) - alpha_over_p * *(b + 710 * OS1_S1 + 2));
            *(b + 1020 * OS1_S1 + 1) = Y_PA * *(b + 858 * OS1_S1 + 1) + alpha_Y * *(b + 858 * OS1_S1 + 2) + 2 * one_over_two_p * (*(b + 714 * OS1_S1 + 1) - alpha_over_p * *(b + 714 * OS1_S1 + 2));
            *(b + 1021 * OS1_S1 + 1) = Y_PA * *(b + 859 * OS1_S1 + 1) + alpha_Y * *(b + 859 * OS1_S1 + 2) + one_over_two_p * (*(b + 715 * OS1_S1 + 1) - alpha_over_p * *(b + 715 * OS1_S1 + 2));
            *(b + 1022 * OS1_S1 + 1) = Y_PA * *(b + 860 * OS1_S1 + 1) + alpha_Y * *(b + 860 * OS1_S1 + 2);
            *(b + 1023 * OS1_S1 + 1) = X_PA * *(b + 870 * OS1_S1 + 1) + alpha_X * *(b + 870 * OS1_S1 + 2) + 7 * one_over_two_p * (*(b + 734 * OS1_S1 + 1) - alpha_over_p * *(b + 734 * OS1_S1 + 2));
            *(b + 1024 * OS1_S1 + 1) = X_PA * *(b + 871 * OS1_S1 + 1) + alpha_X * *(b + 871 * OS1_S1 + 2) + 6 * one_over_two_p * (*(b + 735 * OS1_S1 + 1) - alpha_over_p * *(b + 735 * OS1_S1 + 2));
            *(b + 1025 * OS1_S1 + 1) = Z_PA * *(b + 861 * OS1_S1 + 1) + alpha_Z * *(b + 861 * OS1_S1 + 2);
            *(b + 1026 * OS1_S1 + 1) = Z_PA * *(b + 862 * OS1_S1 + 1) + alpha_Z * *(b + 862 * OS1_S1 + 2) + one_over_two_p * (*(b + 716 * OS1_S1 + 1) - alpha_over_p * *(b + 716 * OS1_S1 + 2));
            *(b + 1027 * OS1_S1 + 1) = Z_PA * *(b + 863 * OS1_S1 + 1) + alpha_Z * *(b + 863 * OS1_S1 + 2) + 2 * one_over_two_p * (*(b + 717 * OS1_S1 + 1) - alpha_over_p * *(b + 717 * OS1_S1 + 2));
            *(b + 1028 * OS1_S1 + 1) = Z_PA * *(b + 864 * OS1_S1 + 1) + alpha_Z * *(b + 864 * OS1_S1 + 2) + 3 * one_over_two_p * (*(b + 718 * OS1_S1 + 1) - alpha_over_p * *(b + 718 * OS1_S1 + 2));
            *(b + 1030 * OS1_S1 + 1) = Y_PA * *(b + 867 * OS1_S1 + 1) + alpha_Y * *(b + 867 * OS1_S1 + 2) + 3 * one_over_two_p * (*(b + 722 * OS1_S1 + 1) - alpha_over_p * *(b + 722 * OS1_S1 + 2));
            *(b + 1031 * OS1_S1 + 1) = Y_PA * *(b + 868 * OS1_S1 + 1) + alpha_Y * *(b + 868 * OS1_S1 + 2) + 2 * one_over_two_p * (*(b + 723 * OS1_S1 + 1) - alpha_over_p * *(b + 723 * OS1_S1 + 2));
            *(b + 1032 * OS1_S1 + 1) = Y_PA * *(b + 869 * OS1_S1 + 1) + alpha_Y * *(b + 869 * OS1_S1 + 2) + one_over_two_p * (*(b + 724 * OS1_S1 + 1) - alpha_over_p * *(b + 724 * OS1_S1 + 2));
            *(b + 1033 * OS1_S1 + 1) = Y_PA * *(b + 870 * OS1_S1 + 1) + alpha_Y * *(b + 870 * OS1_S1 + 2);
            *(b + 1034 * OS1_S1 + 1) = X_PA * *(b + 881 * OS1_S1 + 1) + alpha_X * *(b + 881 * OS1_S1 + 2) + 6 * one_over_two_p * (*(b + 745 * OS1_S1 + 1) - alpha_over_p * *(b + 745 * OS1_S1 + 2));
            *(b + 1035 * OS1_S1 + 1) = X_PA * *(b + 882 * OS1_S1 + 1) + alpha_X * *(b + 882 * OS1_S1 + 2) + 5 * one_over_two_p * (*(b + 746 * OS1_S1 + 1) - alpha_over_p * *(b + 746 * OS1_S1 + 2));
            *(b + 1036 * OS1_S1 + 1) = Z_PA * *(b + 871 * OS1_S1 + 1) + alpha_Z * *(b + 871 * OS1_S1 + 2);
            *(b + 1037 * OS1_S1 + 1) = Z_PA * *(b + 872 * OS1_S1 + 1) + alpha_Z * *(b + 872 * OS1_S1 + 2) + one_over_two_p * (*(b + 725 * OS1_S1 + 1) - alpha_over_p * *(b + 725 * OS1_S1 + 2));
            *(b + 1038 * OS1_S1 + 1) = Z_PA * *(b + 873 * OS1_S1 + 1) + alpha_Z * *(b + 873 * OS1_S1 + 2) + 2 * one_over_two_p * (*(b + 726 * OS1_S1 + 1) - alpha_over_p * *(b + 726 * OS1_S1 + 2));
            *(b + 1039 * OS1_S1 + 1) = Z_PA * *(b + 874 * OS1_S1 + 1) + alpha_Z * *(b + 874 * OS1_S1 + 2) + 3 * one_over_two_p * (*(b + 727 * OS1_S1 + 1) - alpha_over_p * *(b + 727 * OS1_S1 + 2));
            *(b + 1040 * OS1_S1 + 1) = Z_PA * *(b + 875 * OS1_S1 + 1) + alpha_Z * *(b + 875 * OS1_S1 + 2) + 4 * one_over_two_p * (*(b + 728 * OS1_S1 + 1) - alpha_over_p * *(b + 728 * OS1_S1 + 2));
            *(b + 1042 * OS1_S1 + 1) = Y_PA * *(b + 878 * OS1_S1 + 1) + alpha_Y * *(b + 878 * OS1_S1 + 2) + 3 * one_over_two_p * (*(b + 732 * OS1_S1 + 1) - alpha_over_p * *(b + 732 * OS1_S1 + 2));
            *(b + 1043 * OS1_S1 + 1) = Y_PA * *(b + 879 * OS1_S1 + 1) + alpha_Y * *(b + 879 * OS1_S1 + 2) + 2 * one_over_two_p * (*(b + 733 * OS1_S1 + 1) - alpha_over_p * *(b + 733 * OS1_S1 + 2));
            *(b + 1044 * OS1_S1 + 1) = Y_PA * *(b + 880 * OS1_S1 + 1) + alpha_Y * *(b + 880 * OS1_S1 + 2) + one_over_two_p * (*(b + 734 * OS1_S1 + 1) - alpha_over_p * *(b + 734 * OS1_S1 + 2));
            *(b + 1045 * OS1_S1 + 1) = Y_PA * *(b + 881 * OS1_S1 + 1) + alpha_Y * *(b + 881 * OS1_S1 + 2);
            *(b + 1046 * OS1_S1 + 1) = X_PA * *(b + 893 * OS1_S1 + 1) + alpha_X * *(b + 893 * OS1_S1 + 2) + 5 * one_over_two_p * (*(b + 757 * OS1_S1 + 1) - alpha_over_p * *(b + 757 * OS1_S1 + 2));
            *(b + 1047 * OS1_S1 + 1) = X_PA * *(b + 894 * OS1_S1 + 1) + alpha_X * *(b + 894 * OS1_S1 + 2) + 4 * one_over_two_p * (*(b + 758 * OS1_S1 + 1) - alpha_over_p * *(b + 758 * OS1_S1 + 2));
            *(b + 1048 * OS1_S1 + 1) = Z_PA * *(b + 882 * OS1_S1 + 1) + alpha_Z * *(b + 882 * OS1_S1 + 2);
            *(b + 1049 * OS1_S1 + 1) = Z_PA * *(b + 883 * OS1_S1 + 1) + alpha_Z * *(b + 883 * OS1_S1 + 2) + one_over_two_p * (*(b + 735 * OS1_S1 + 1) - alpha_over_p * *(b + 735 * OS1_S1 + 2));
            *(b + 1050 * OS1_S1 + 1) = Z_PA * *(b + 884 * OS1_S1 + 1) + alpha_Z * *(b + 884 * OS1_S1 + 2) + 2 * one_over_two_p * (*(b + 736 * OS1_S1 + 1) - alpha_over_p * *(b + 736 * OS1_S1 + 2));
            *(b + 1051 * OS1_S1 + 1) = Z_PA * *(b + 885 * OS1_S1 + 1) + alpha_Z * *(b + 885 * OS1_S1 + 2) + 3 * one_over_two_p * (*(b + 737 * OS1_S1 + 1) - alpha_over_p * *(b + 737 * OS1_S1 + 2));
            *(b + 1055 * OS1_S1 + 1) = Y_PA * *(b + 890 * OS1_S1 + 1) + alpha_Y * *(b + 890 * OS1_S1 + 2) + 3 * one_over_two_p * (*(b + 743 * OS1_S1 + 1) - alpha_over_p * *(b + 743 * OS1_S1 + 2));
            *(b + 1056 * OS1_S1 + 1) = Y_PA * *(b + 891 * OS1_S1 + 1) + alpha_Y * *(b + 891 * OS1_S1 + 2) + 2 * one_over_two_p * (*(b + 744 * OS1_S1 + 1) - alpha_over_p * *(b + 744 * OS1_S1 + 2));
            *(b + 1057 * OS1_S1 + 1) = Y_PA * *(b + 892 * OS1_S1 + 1) + alpha_Y * *(b + 892 * OS1_S1 + 2) + one_over_two_p * (*(b + 745 * OS1_S1 + 1) - alpha_over_p * *(b + 745 * OS1_S1 + 2));
            *(b + 1058 * OS1_S1 + 1) = Y_PA * *(b + 893 * OS1_S1 + 1) + alpha_Y * *(b + 893 * OS1_S1 + 2);
            *(b + 1059 * OS1_S1 + 1) = X_PA * *(b + 906 * OS1_S1 + 1) + alpha_X * *(b + 906 * OS1_S1 + 2) + 4 * one_over_two_p * (*(b + 770 * OS1_S1 + 1) - alpha_over_p * *(b + 770 * OS1_S1 + 2));
            *(b + 1060 * OS1_S1 + 1) = X_PA * *(b + 907 * OS1_S1 + 1) + alpha_X * *(b + 907 * OS1_S1 + 2) + 3 * one_over_two_p * (*(b + 771 * OS1_S1 + 1) - alpha_over_p * *(b + 771 * OS1_S1 + 2));
            *(b + 1061 * OS1_S1 + 1) = Z_PA * *(b + 894 * OS1_S1 + 1) + alpha_Z * *(b + 894 * OS1_S1 + 2);
            *(b + 1062 * OS1_S1 + 1) = Z_PA * *(b + 895 * OS1_S1 + 1) + alpha_Z * *(b + 895 * OS1_S1 + 2) + one_over_two_p * (*(b + 746 * OS1_S1 + 1) - alpha_over_p * *(b + 746 * OS1_S1 + 2));
            *(b + 1063 * OS1_S1 + 1) = Z_PA * *(b + 896 * OS1_S1 + 1) + alpha_Z * *(b + 896 * OS1_S1 + 2) + 2 * one_over_two_p * (*(b + 747 * OS1_S1 + 1) - alpha_over_p * *(b + 747 * OS1_S1 + 2));
            *(b + 1066 * OS1_S1 + 1) = X_PA * *(b + 913 * OS1_S1 + 1) + alpha_X * *(b + 913 * OS1_S1 + 2) + 3 * one_over_two_p * (*(b + 777 * OS1_S1 + 1) - alpha_over_p * *(b + 777 * OS1_S1 + 2));
            *(b + 1067 * OS1_S1 + 1) = X_PA * *(b + 914 * OS1_S1 + 1) + alpha_X * *(b + 914 * OS1_S1 + 2) + 3 * one_over_two_p * (*(b + 778 * OS1_S1 + 1) - alpha_over_p * *(b + 778 * OS1_S1 + 2));
            *(b + 1070 * OS1_S1 + 1) = Y_PA * *(b + 904 * OS1_S1 + 1) + alpha_Y * *(b + 904 * OS1_S1 + 2) + 2 * one_over_two_p * (*(b + 756 * OS1_S1 + 1) - alpha_over_p * *(b + 756 * OS1_S1 + 2));
            *(b + 1071 * OS1_S1 + 1) = Y_PA * *(b + 905 * OS1_S1 + 1) + alpha_Y * *(b + 905 * OS1_S1 + 2) + one_over_two_p * (*(b + 757 * OS1_S1 + 1) - alpha_over_p * *(b + 757 * OS1_S1 + 2));
            *(b + 1072 * OS1_S1 + 1) = Y_PA * *(b + 906 * OS1_S1 + 1) + alpha_Y * *(b + 906 * OS1_S1 + 2);
            *(b + 1073 * OS1_S1 + 1) = X_PA * *(b + 920 * OS1_S1 + 1) + alpha_X * *(b + 920 * OS1_S1 + 2) + 3 * one_over_two_p * (*(b + 784 * OS1_S1 + 1) - alpha_over_p * *(b + 784 * OS1_S1 + 2));
            *(b + 1074 * OS1_S1 + 1) = X_PA * *(b + 921 * OS1_S1 + 1) + alpha_X * *(b + 921 * OS1_S1 + 2) + 2 * one_over_two_p * (*(b + 785 * OS1_S1 + 1) - alpha_over_p * *(b + 785 * OS1_S1 + 2));
            *(b + 1075 * OS1_S1 + 1) = Z_PA * *(b + 907 * OS1_S1 + 1) + alpha_Z * *(b + 907 * OS1_S1 + 2);
            *(b + 1076 * OS1_S1 + 1) = Z_PA * *(b + 908 * OS1_S1 + 1) + alpha_Z * *(b + 908 * OS1_S1 + 2) + one_over_two_p * (*(b + 758 * OS1_S1 + 1) - alpha_over_p * *(b + 758 * OS1_S1 + 2));
            *(b + 1079 * OS1_S1 + 1) = X_PA * *(b + 926 * OS1_S1 + 1) + alpha_X * *(b + 926 * OS1_S1 + 2) + 2 * one_over_two_p * (*(b + 790 * OS1_S1 + 1) - alpha_over_p * *(b + 790 * OS1_S1 + 2));
            *(b + 1080 * OS1_S1 + 1) = X_PA * *(b + 927 * OS1_S1 + 1) + alpha_X * *(b + 927 * OS1_S1 + 2) + 2 * one_over_two_p * (*(b + 791 * OS1_S1 + 1) - alpha_over_p * *(b + 791 * OS1_S1 + 2));
            *(b + 1081 * OS1_S1 + 1) = X_PA * *(b + 928 * OS1_S1 + 1) + alpha_X * *(b + 928 * OS1_S1 + 2) + 2 * one_over_two_p * (*(b + 792 * OS1_S1 + 1) - alpha_over_p * *(b + 792 * OS1_S1 + 2));
            *(b + 1082 * OS1_S1 + 1) = X_PA * *(b + 929 * OS1_S1 + 1) + alpha_X * *(b + 929 * OS1_S1 + 2) + 2 * one_over_two_p * (*(b + 793 * OS1_S1 + 1) - alpha_over_p * *(b + 793 * OS1_S1 + 2));
            *(b + 1083 * OS1_S1 + 1) = X_PA * *(b + 930 * OS1_S1 + 1) + alpha_X * *(b + 930 * OS1_S1 + 2) + 2 * one_over_two_p * (*(b + 794 * OS1_S1 + 1) - alpha_over_p * *(b + 794 * OS1_S1 + 2));
            *(b + 1086 * OS1_S1 + 1) = Y_PA * *(b + 919 * OS1_S1 + 1) + alpha_Y * *(b + 919 * OS1_S1 + 2) + one_over_two_p * (*(b + 770 * OS1_S1 + 1) - alpha_over_p * *(b + 770 * OS1_S1 + 2));
            *(b + 1087 * OS1_S1 + 1) = Y_PA * *(b + 920 * OS1_S1 + 1) + alpha_Y * *(b + 920 * OS1_S1 + 2);
            *(b + 1088 * OS1_S1 + 1) = X_PA * *(b + 935 * OS1_S1 + 1) + alpha_X * *(b + 935 * OS1_S1 + 2) + 2 * one_over_two_p * (*(b + 799 * OS1_S1 + 1) - alpha_over_p * *(b + 799 * OS1_S1 + 2));
            *(b + 1089 * OS1_S1 + 1) = X_PA * *(b + 936 * OS1_S1 + 1) + alpha_X * *(b + 936 * OS1_S1 + 2) + one_over_two_p * (*(b + 800 * OS1_S1 + 1) - alpha_over_p * *(b + 800 * OS1_S1 + 2));
            *(b + 1090 * OS1_S1 + 1) = Z_PA * *(b + 921 * OS1_S1 + 1) + alpha_Z * *(b + 921 * OS1_S1 + 2);
            *(b + 1093 * OS1_S1 + 1) = X_PA * *(b + 940 * OS1_S1 + 1) + alpha_X * *(b + 940 * OS1_S1 + 2) + one_over_two_p * (*(b + 804 * OS1_S1 + 1) - alpha_over_p * *(b + 804 * OS1_S1 + 2));
            *(b + 1094 * OS1_S1 + 1) = X_PA * *(b + 941 * OS1_S1 + 1) + alpha_X * *(b + 941 * OS1_S1 + 2) + one_over_two_p * (*(b + 805 * OS1_S1 + 1) - alpha_over_p * *(b + 805 * OS1_S1 + 2));
            *(b + 1095 * OS1_S1 + 1) = X_PA * *(b + 942 * OS1_S1 + 1) + alpha_X * *(b + 942 * OS1_S1 + 2) + one_over_two_p * (*(b + 806 * OS1_S1 + 1) - alpha_over_p * *(b + 806 * OS1_S1 + 2));
            *(b + 1096 * OS1_S1 + 1) = X_PA * *(b + 943 * OS1_S1 + 1) + alpha_X * *(b + 943 * OS1_S1 + 2) + one_over_two_p * (*(b + 807 * OS1_S1 + 1) - alpha_over_p * *(b + 807 * OS1_S1 + 2));
            *(b + 1097 * OS1_S1 + 1) = X_PA * *(b + 944 * OS1_S1 + 1) + alpha_X * *(b + 944 * OS1_S1 + 2) + one_over_two_p * (*(b + 808 * OS1_S1 + 1) - alpha_over_p * *(b + 808 * OS1_S1 + 2));
            *(b + 1098 * OS1_S1 + 1) = X_PA * *(b + 945 * OS1_S1 + 1) + alpha_X * *(b + 945 * OS1_S1 + 2) + one_over_two_p * (*(b + 809 * OS1_S1 + 1) - alpha_over_p * *(b + 809 * OS1_S1 + 2));
            *(b + 1099 * OS1_S1 + 1) = X_PA * *(b + 946 * OS1_S1 + 1) + alpha_X * *(b + 946 * OS1_S1 + 2) + one_over_two_p * (*(b + 810 * OS1_S1 + 1) - alpha_over_p * *(b + 810 * OS1_S1 + 2));
            *(b + 1100 * OS1_S1 + 1) = X_PA * *(b + 947 * OS1_S1 + 1) + alpha_X * *(b + 947 * OS1_S1 + 2) + one_over_two_p * (*(b + 811 * OS1_S1 + 1) - alpha_over_p * *(b + 811 * OS1_S1 + 2));
            *(b + 1103 * OS1_S1 + 1) = Y_PA * *(b + 935 * OS1_S1 + 1) + alpha_Y * *(b + 935 * OS1_S1 + 2);
            *(b + 1104 * OS1_S1 + 1) = X_PA * *(b + 951 * OS1_S1 + 1) + alpha_X * *(b + 951 * OS1_S1 + 2) + one_over_two_p * (*(b + 815 * OS1_S1 + 1) - alpha_over_p * *(b + 815 * OS1_S1 + 2));
            *(b + 1105 * OS1_S1 + 1) = X_PA * *(b + 952 * OS1_S1 + 1) + alpha_X * *(b + 952 * OS1_S1 + 2);
            *(b + 1108 * OS1_S1 + 1) = X_PA * *(b + 955 * OS1_S1 + 1) + alpha_X * *(b + 955 * OS1_S1 + 2);
            *(b + 1109 * OS1_S1 + 1) = X_PA * *(b + 956 * OS1_S1 + 1) + alpha_X * *(b + 956 * OS1_S1 + 2);
            *(b + 1110 * OS1_S1 + 1) = X_PA * *(b + 957 * OS1_S1 + 1) + alpha_X * *(b + 957 * OS1_S1 + 2);
            *(b + 1111 * OS1_S1 + 1) = X_PA * *(b + 958 * OS1_S1 + 1) + alpha_X * *(b + 958 * OS1_S1 + 2);
            *(b + 1112 * OS1_S1 + 1) = X_PA * *(b + 959 * OS1_S1 + 1) + alpha_X * *(b + 959 * OS1_S1 + 2);
            *(b + 1113 * OS1_S1 + 1) = X_PA * *(b + 960 * OS1_S1 + 1) + alpha_X * *(b + 960 * OS1_S1 + 2);
            *(b + 1114 * OS1_S1 + 1) = X_PA * *(b + 961 * OS1_S1 + 1) + alpha_X * *(b + 961 * OS1_S1 + 2);
            *(b + 1115 * OS1_S1 + 1) = X_PA * *(b + 962 * OS1_S1 + 1) + alpha_X * *(b + 962 * OS1_S1 + 2);
            *(b + 1116 * OS1_S1 + 1) = X_PA * *(b + 963 * OS1_S1 + 1) + alpha_X * *(b + 963 * OS1_S1 + 2);
            *(b + 1117 * OS1_S1 + 1) = X_PA * *(b + 964 * OS1_S1 + 1) + alpha_X * *(b + 964 * OS1_S1 + 2);
            *(b + 1118 * OS1_S1 + 1) = X_PA * *(b + 965 * OS1_S1 + 1) + alpha_X * *(b + 965 * OS1_S1 + 2);
            *(b + 1121 * OS1_S1 + 1) = X_PA * *(b + 968 * OS1_S1 + 1) + alpha_X * *(b + 968 * OS1_S1 + 2);
            *(b + 1122 * OS1_S1 + 1) = Y_PA * *(b + 952 * OS1_S1 + 1) + alpha_Y * *(b + 952 * OS1_S1 + 2) + 16 * one_over_two_p * (*(b + 800 * OS1_S1 + 1) - alpha_over_p * *(b + 800 * OS1_S1 + 2));
            *(b + 1123 * OS1_S1 + 1) = Z_PA * *(b + 952 * OS1_S1 + 1) + alpha_Z * *(b + 952 * OS1_S1 + 2);
            *(b + 1124 * OS1_S1 + 1) = Z_PA * *(b + 953 * OS1_S1 + 1) + alpha_Z * *(b + 953 * OS1_S1 + 2) + one_over_two_p * (*(b + 800 * OS1_S1 + 1) - alpha_over_p * *(b + 800 * OS1_S1 + 2));
            *(b + 1125 * OS1_S1 + 1) = Z_PA * *(b + 954 * OS1_S1 + 1) + alpha_Z * *(b + 954 * OS1_S1 + 2) + 2 * one_over_two_p * (*(b + 801 * OS1_S1 + 1) - alpha_over_p * *(b + 801 * OS1_S1 + 2));
            *(b + 1126 * OS1_S1 + 1) = Z_PA * *(b + 955 * OS1_S1 + 1) + alpha_Z * *(b + 955 * OS1_S1 + 2) + 3 * one_over_two_p * (*(b + 802 * OS1_S1 + 1) - alpha_over_p * *(b + 802 * OS1_S1 + 2));
            *(b + 1127 * OS1_S1 + 1) = Z_PA * *(b + 956 * OS1_S1 + 1) + alpha_Z * *(b + 956 * OS1_S1 + 2) + 4 * one_over_two_p * (*(b + 803 * OS1_S1 + 1) - alpha_over_p * *(b + 803 * OS1_S1 + 2));
            *(b + 1128 * OS1_S1 + 1) = Z_PA * *(b + 957 * OS1_S1 + 1) + alpha_Z * *(b + 957 * OS1_S1 + 2) + 5 * one_over_two_p * (*(b + 804 * OS1_S1 + 1) - alpha_over_p * *(b + 804 * OS1_S1 + 2));
            *(b + 1129 * OS1_S1 + 1) = Z_PA * *(b + 958 * OS1_S1 + 1) + alpha_Z * *(b + 958 * OS1_S1 + 2) + 6 * one_over_two_p * (*(b + 805 * OS1_S1 + 1) - alpha_over_p * *(b + 805 * OS1_S1 + 2));
            *(b + 1130 * OS1_S1 + 1) = Z_PA * *(b + 959 * OS1_S1 + 1) + alpha_Z * *(b + 959 * OS1_S1 + 2) + 7 * one_over_two_p * (*(b + 806 * OS1_S1 + 1) - alpha_over_p * *(b + 806 * OS1_S1 + 2));
            *(b + 1131 * OS1_S1 + 1) = Y_PA * *(b + 961 * OS1_S1 + 1) + alpha_Y * *(b + 961 * OS1_S1 + 2) + 7 * one_over_two_p * (*(b + 809 * OS1_S1 + 1) - alpha_over_p * *(b + 809 * OS1_S1 + 2));
            *(b + 1132 * OS1_S1 + 1) = Y_PA * *(b + 962 * OS1_S1 + 1) + alpha_Y * *(b + 962 * OS1_S1 + 2) + 6 * one_over_two_p * (*(b + 810 * OS1_S1 + 1) - alpha_over_p * *(b + 810 * OS1_S1 + 2));
            *(b + 1133 * OS1_S1 + 1) = Y_PA * *(b + 963 * OS1_S1 + 1) + alpha_Y * *(b + 963 * OS1_S1 + 2) + 5 * one_over_two_p * (*(b + 811 * OS1_S1 + 1) - alpha_over_p * *(b + 811 * OS1_S1 + 2));
            *(b + 1134 * OS1_S1 + 1) = Y_PA * *(b + 964 * OS1_S1 + 1) + alpha_Y * *(b + 964 * OS1_S1 + 2) + 4 * one_over_two_p * (*(b + 812 * OS1_S1 + 1) - alpha_over_p * *(b + 812 * OS1_S1 + 2));
            *(b + 1135 * OS1_S1 + 1) = Y_PA * *(b + 965 * OS1_S1 + 1) + alpha_Y * *(b + 965 * OS1_S1 + 2) + 3 * one_over_two_p * (*(b + 813 * OS1_S1 + 1) - alpha_over_p * *(b + 813 * OS1_S1 + 2));
            *(b + 1136 * OS1_S1 + 1) = Y_PA * *(b + 966 * OS1_S1 + 1) + alpha_Y * *(b + 966 * OS1_S1 + 2) + 2 * one_over_two_p * (*(b + 814 * OS1_S1 + 1) - alpha_over_p * *(b + 814 * OS1_S1 + 2));
            *(b + 1137 * OS1_S1 + 1) = Y_PA * *(b + 967 * OS1_S1 + 1) + alpha_Y * *(b + 967 * OS1_S1 + 2) + one_over_two_p * (*(b + 815 * OS1_S1 + 1) - alpha_over_p * *(b + 815 * OS1_S1 + 2));
            *(b + 1138 * OS1_S1 + 1) = Y_PA * *(b + 968 * OS1_S1 + 1) + alpha_Y * *(b + 968 * OS1_S1 + 2);
            *(b + 1139 * OS1_S1 + 1) = Z_PA * *(b + 968 * OS1_S1 + 1) + alpha_Z * *(b + 968 * OS1_S1 + 2) + 16 * one_over_two_p * (*(b + 815 * OS1_S1 + 1) - alpha_over_p * *(b + 815 * OS1_S1 + 2));
            *(b + 1140 * OS1_S1 + 0) = X_PA * *(b + 969 * OS1_S1 + 0) + alpha_X * *(b + 969 * OS1_S1 + 1) + 17 * one_over_two_p * (*(b + 816 * OS1_S1 + 0) - alpha_over_p * *(b + 816 * OS1_S1 + 1));
            *(b + 1141 * OS1_S1 + 0) = Y_PA * *(b + 969 * OS1_S1 + 0) + alpha_Y * *(b + 969 * OS1_S1 + 1);
            *(b + 1142 * OS1_S1 + 0) = Z_PA * *(b + 969 * OS1_S1 + 0) + alpha_Z * *(b + 969 * OS1_S1 + 1);
            *(b + 1143 * OS1_S1 + 0) = Y_PA * *(b + 970 * OS1_S1 + 0) + alpha_Y * *(b + 970 * OS1_S1 + 1) + one_over_two_p * (*(b + 816 * OS1_S1 + 0) - alpha_over_p * *(b + 816 * OS1_S1 + 1));
            *(b + 1144 * OS1_S1 + 0) = Z_PA * *(b + 970 * OS1_S1 + 0) + alpha_Z * *(b + 970 * OS1_S1 + 1);
            *(b + 1145 * OS1_S1 + 0) = Z_PA * *(b + 971 * OS1_S1 + 0) + alpha_Z * *(b + 971 * OS1_S1 + 1) + one_over_two_p * (*(b + 816 * OS1_S1 + 0) - alpha_over_p * *(b + 816 * OS1_S1 + 1));
            *(b + 1146 * OS1_S1 + 0) = Y_PA * *(b + 972 * OS1_S1 + 0) + alpha_Y * *(b + 972 * OS1_S1 + 1) + 2 * one_over_two_p * (*(b + 817 * OS1_S1 + 0) - alpha_over_p * *(b + 817 * OS1_S1 + 1));
            *(b + 1147 * OS1_S1 + 0) = Z_PA * *(b + 972 * OS1_S1 + 0) + alpha_Z * *(b + 972 * OS1_S1 + 1);
            *(b + 1148 * OS1_S1 + 0) = Y_PA * *(b + 974 * OS1_S1 + 0) + alpha_Y * *(b + 974 * OS1_S1 + 1);
            *(b + 1149 * OS1_S1 + 0) = Z_PA * *(b + 974 * OS1_S1 + 0) + alpha_Z * *(b + 974 * OS1_S1 + 1) + 2 * one_over_two_p * (*(b + 818 * OS1_S1 + 0) - alpha_over_p * *(b + 818 * OS1_S1 + 1));
            *(b + 1150 * OS1_S1 + 0) = Y_PA * *(b + 975 * OS1_S1 + 0) + alpha_Y * *(b + 975 * OS1_S1 + 1) + 3 * one_over_two_p * (*(b + 819 * OS1_S1 + 0) - alpha_over_p * *(b + 819 * OS1_S1 + 1));
            *(b + 1151 * OS1_S1 + 0) = Z_PA * *(b + 975 * OS1_S1 + 0) + alpha_Z * *(b + 975 * OS1_S1 + 1);
            *(b + 1152 * OS1_S1 + 0) = Z_PA * *(b + 976 * OS1_S1 + 0) + alpha_Z * *(b + 976 * OS1_S1 + 1) + one_over_two_p * (*(b + 819 * OS1_S1 + 0) - alpha_over_p * *(b + 819 * OS1_S1 + 1));
            *(b + 1153 * OS1_S1 + 0) = Y_PA * *(b + 978 * OS1_S1 + 0) + alpha_Y * *(b + 978 * OS1_S1 + 1);
            *(b + 1154 * OS1_S1 + 0) = Z_PA * *(b + 978 * OS1_S1 + 0) + alpha_Z * *(b + 978 * OS1_S1 + 1) + 3 * one_over_two_p * (*(b + 821 * OS1_S1 + 0) - alpha_over_p * *(b + 821 * OS1_S1 + 1));
            *(b + 1155 * OS1_S1 + 0) = Y_PA * *(b + 979 * OS1_S1 + 0) + alpha_Y * *(b + 979 * OS1_S1 + 1) + 4 * one_over_two_p * (*(b + 822 * OS1_S1 + 0) - alpha_over_p * *(b + 822 * OS1_S1 + 1));
            *(b + 1156 * OS1_S1 + 0) = Z_PA * *(b + 979 * OS1_S1 + 0) + alpha_Z * *(b + 979 * OS1_S1 + 1);
            *(b + 1157 * OS1_S1 + 0) = Z_PA * *(b + 980 * OS1_S1 + 0) + alpha_Z * *(b + 980 * OS1_S1 + 1) + one_over_two_p * (*(b + 822 * OS1_S1 + 0) - alpha_over_p * *(b + 822 * OS1_S1 + 1));
            *(b + 1158 * OS1_S1 + 0) = Y_PA * *(b + 982 * OS1_S1 + 0) + alpha_Y * *(b + 982 * OS1_S1 + 1) + one_over_two_p * (*(b + 825 * OS1_S1 + 0) - alpha_over_p * *(b + 825 * OS1_S1 + 1));
            *(b + 1159 * OS1_S1 + 0) = Y_PA * *(b + 983 * OS1_S1 + 0) + alpha_Y * *(b + 983 * OS1_S1 + 1);
            *(b + 1160 * OS1_S1 + 0) = Z_PA * *(b + 983 * OS1_S1 + 0) + alpha_Z * *(b + 983 * OS1_S1 + 1) + 4 * one_over_two_p * (*(b + 825 * OS1_S1 + 0) - alpha_over_p * *(b + 825 * OS1_S1 + 1));
            *(b + 1161 * OS1_S1 + 0) = Y_PA * *(b + 984 * OS1_S1 + 0) + alpha_Y * *(b + 984 * OS1_S1 + 1) + 5 * one_over_two_p * (*(b + 826 * OS1_S1 + 0) - alpha_over_p * *(b + 826 * OS1_S1 + 1));
            *(b + 1162 * OS1_S1 + 0) = Z_PA * *(b + 984 * OS1_S1 + 0) + alpha_Z * *(b + 984 * OS1_S1 + 1);
            *(b + 1163 * OS1_S1 + 0) = Z_PA * *(b + 985 * OS1_S1 + 0) + alpha_Z * *(b + 985 * OS1_S1 + 1) + one_over_two_p * (*(b + 826 * OS1_S1 + 0) - alpha_over_p * *(b + 826 * OS1_S1 + 1));
            *(b + 1164 * OS1_S1 + 0) = Z_PA * *(b + 986 * OS1_S1 + 0) + alpha_Z * *(b + 986 * OS1_S1 + 1) + 2 * one_over_two_p * (*(b + 827 * OS1_S1 + 0) - alpha_over_p * *(b + 827 * OS1_S1 + 1));
            *(b + 1165 * OS1_S1 + 0) = Y_PA * *(b + 988 * OS1_S1 + 0) + alpha_Y * *(b + 988 * OS1_S1 + 1) + one_over_two_p * (*(b + 830 * OS1_S1 + 0) - alpha_over_p * *(b + 830 * OS1_S1 + 1));
            *(b + 1166 * OS1_S1 + 0) = Y_PA * *(b + 989 * OS1_S1 + 0) + alpha_Y * *(b + 989 * OS1_S1 + 1);
            *(b + 1167 * OS1_S1 + 0) = Z_PA * *(b + 989 * OS1_S1 + 0) + alpha_Z * *(b + 989 * OS1_S1 + 1) + 5 * one_over_two_p * (*(b + 830 * OS1_S1 + 0) - alpha_over_p * *(b + 830 * OS1_S1 + 1));
            *(b + 1168 * OS1_S1 + 0) = Y_PA * *(b + 990 * OS1_S1 + 0) + alpha_Y * *(b + 990 * OS1_S1 + 1) + 6 * one_over_two_p * (*(b + 831 * OS1_S1 + 0) - alpha_over_p * *(b + 831 * OS1_S1 + 1));
            *(b + 1169 * OS1_S1 + 0) = Z_PA * *(b + 990 * OS1_S1 + 0) + alpha_Z * *(b + 990 * OS1_S1 + 1);
            *(b + 1170 * OS1_S1 + 0) = Z_PA * *(b + 991 * OS1_S1 + 0) + alpha_Z * *(b + 991 * OS1_S1 + 1) + one_over_two_p * (*(b + 831 * OS1_S1 + 0) - alpha_over_p * *(b + 831 * OS1_S1 + 1));
            *(b + 1171 * OS1_S1 + 0) = Z_PA * *(b + 992 * OS1_S1 + 0) + alpha_Z * *(b + 992 * OS1_S1 + 1) + 2 * one_over_two_p * (*(b + 832 * OS1_S1 + 0) - alpha_over_p * *(b + 832 * OS1_S1 + 1));
            *(b + 1172 * OS1_S1 + 0) = Y_PA * *(b + 994 * OS1_S1 + 0) + alpha_Y * *(b + 994 * OS1_S1 + 1) + 2 * one_over_two_p * (*(b + 835 * OS1_S1 + 0) - alpha_over_p * *(b + 835 * OS1_S1 + 1));
            *(b + 1173 * OS1_S1 + 0) = Y_PA * *(b + 995 * OS1_S1 + 0) + alpha_Y * *(b + 995 * OS1_S1 + 1) + one_over_two_p * (*(b + 836 * OS1_S1 + 0) - alpha_over_p * *(b + 836 * OS1_S1 + 1));
            *(b + 1174 * OS1_S1 + 0) = Y_PA * *(b + 996 * OS1_S1 + 0) + alpha_Y * *(b + 996 * OS1_S1 + 1);
            *(b + 1175 * OS1_S1 + 0) = Z_PA * *(b + 996 * OS1_S1 + 0) + alpha_Z * *(b + 996 * OS1_S1 + 1) + 6 * one_over_two_p * (*(b + 836 * OS1_S1 + 0) - alpha_over_p * *(b + 836 * OS1_S1 + 1));
            *(b + 1176 * OS1_S1 + 0) = Y_PA * *(b + 997 * OS1_S1 + 0) + alpha_Y * *(b + 997 * OS1_S1 + 1) + 7 * one_over_two_p * (*(b + 837 * OS1_S1 + 0) - alpha_over_p * *(b + 837 * OS1_S1 + 1));
            *(b + 1177 * OS1_S1 + 0) = Z_PA * *(b + 997 * OS1_S1 + 0) + alpha_Z * *(b + 997 * OS1_S1 + 1);
            *(b + 1178 * OS1_S1 + 0) = Z_PA * *(b + 998 * OS1_S1 + 0) + alpha_Z * *(b + 998 * OS1_S1 + 1) + one_over_two_p * (*(b + 837 * OS1_S1 + 0) - alpha_over_p * *(b + 837 * OS1_S1 + 1));
            *(b + 1179 * OS1_S1 + 0) = Z_PA * *(b + 999 * OS1_S1 + 0) + alpha_Z * *(b + 999 * OS1_S1 + 1) + 2 * one_over_two_p * (*(b + 838 * OS1_S1 + 0) - alpha_over_p * *(b + 838 * OS1_S1 + 1));
            *(b + 1180 * OS1_S1 + 0) = Z_PA * *(b + 1000 * OS1_S1 + 0) + alpha_Z * *(b + 1000 * OS1_S1 + 1) + 3 * one_over_two_p * (*(b + 839 * OS1_S1 + 0) - alpha_over_p * *(b + 839 * OS1_S1 + 1));
            *(b + 1181 * OS1_S1 + 0) = Y_PA * *(b + 1002 * OS1_S1 + 0) + alpha_Y * *(b + 1002 * OS1_S1 + 1) + 2 * one_over_two_p * (*(b + 842 * OS1_S1 + 0) - alpha_over_p * *(b + 842 * OS1_S1 + 1));
            *(b + 1182 * OS1_S1 + 0) = Y_PA * *(b + 1003 * OS1_S1 + 0) + alpha_Y * *(b + 1003 * OS1_S1 + 1) + one_over_two_p * (*(b + 843 * OS1_S1 + 0) - alpha_over_p * *(b + 843 * OS1_S1 + 1));
            *(b + 1183 * OS1_S1 + 0) = Y_PA * *(b + 1004 * OS1_S1 + 0) + alpha_Y * *(b + 1004 * OS1_S1 + 1);
            *(b + 1184 * OS1_S1 + 0) = Z_PA * *(b + 1004 * OS1_S1 + 0) + alpha_Z * *(b + 1004 * OS1_S1 + 1) + 7 * one_over_two_p * (*(b + 843 * OS1_S1 + 0) - alpha_over_p * *(b + 843 * OS1_S1 + 1));
            *(b + 1185 * OS1_S1 + 0) = Y_PA * *(b + 1005 * OS1_S1 + 0) + alpha_Y * *(b + 1005 * OS1_S1 + 1) + 8 * one_over_two_p * (*(b + 844 * OS1_S1 + 0) - alpha_over_p * *(b + 844 * OS1_S1 + 1));
            *(b + 1186 * OS1_S1 + 0) = Z_PA * *(b + 1005 * OS1_S1 + 0) + alpha_Z * *(b + 1005 * OS1_S1 + 1);
            *(b + 1187 * OS1_S1 + 0) = Z_PA * *(b + 1006 * OS1_S1 + 0) + alpha_Z * *(b + 1006 * OS1_S1 + 1) + one_over_two_p * (*(b + 844 * OS1_S1 + 0) - alpha_over_p * *(b + 844 * OS1_S1 + 1));
            *(b + 1188 * OS1_S1 + 0) = Z_PA * *(b + 1007 * OS1_S1 + 0) + alpha_Z * *(b + 1007 * OS1_S1 + 1) + 2 * one_over_two_p * (*(b + 845 * OS1_S1 + 0) - alpha_over_p * *(b + 845 * OS1_S1 + 1));
            *(b + 1189 * OS1_S1 + 0) = Z_PA * *(b + 1008 * OS1_S1 + 0) + alpha_Z * *(b + 1008 * OS1_S1 + 1) + 3 * one_over_two_p * (*(b + 846 * OS1_S1 + 0) - alpha_over_p * *(b + 846 * OS1_S1 + 1));
            *(b + 1190 * OS1_S1 + 0) = Y_PA * *(b + 1010 * OS1_S1 + 0) + alpha_Y * *(b + 1010 * OS1_S1 + 1) + 3 * one_over_two_p * (*(b + 849 * OS1_S1 + 0) - alpha_over_p * *(b + 849 * OS1_S1 + 1));
            *(b + 1191 * OS1_S1 + 0) = Y_PA * *(b + 1011 * OS1_S1 + 0) + alpha_Y * *(b + 1011 * OS1_S1 + 1) + 2 * one_over_two_p * (*(b + 850 * OS1_S1 + 0) - alpha_over_p * *(b + 850 * OS1_S1 + 1));
            *(b + 1192 * OS1_S1 + 0) = Y_PA * *(b + 1012 * OS1_S1 + 0) + alpha_Y * *(b + 1012 * OS1_S1 + 1) + one_over_two_p * (*(b + 851 * OS1_S1 + 0) - alpha_over_p * *(b + 851 * OS1_S1 + 1));
            *(b + 1193 * OS1_S1 + 0) = Y_PA * *(b + 1013 * OS1_S1 + 0) + alpha_Y * *(b + 1013 * OS1_S1 + 1);
            *(b + 1194 * OS1_S1 + 0) = Z_PA * *(b + 1013 * OS1_S1 + 0) + alpha_Z * *(b + 1013 * OS1_S1 + 1) + 8 * one_over_two_p * (*(b + 851 * OS1_S1 + 0) - alpha_over_p * *(b + 851 * OS1_S1 + 1));
            *(b + 1195 * OS1_S1 + 0) = X_PA * *(b + 1024 * OS1_S1 + 0) + alpha_X * *(b + 1024 * OS1_S1 + 1) + 7 * one_over_two_p * (*(b + 871 * OS1_S1 + 0) - alpha_over_p * *(b + 871 * OS1_S1 + 1));
            *(b + 1196 * OS1_S1 + 0) = Z_PA * *(b + 1014 * OS1_S1 + 0) + alpha_Z * *(b + 1014 * OS1_S1 + 1);
            *(b + 1197 * OS1_S1 + 0) = Z_PA * *(b + 1015 * OS1_S1 + 0) + alpha_Z * *(b + 1015 * OS1_S1 + 1) + one_over_two_p * (*(b + 852 * OS1_S1 + 0) - alpha_over_p * *(b + 852 * OS1_S1 + 1));
            *(b + 1198 * OS1_S1 + 0) = Z_PA * *(b + 1016 * OS1_S1 + 0) + alpha_Z * *(b + 1016 * OS1_S1 + 1) + 2 * one_over_two_p * (*(b + 853 * OS1_S1 + 0) - alpha_over_p * *(b + 853 * OS1_S1 + 1));
            *(b + 1199 * OS1_S1 + 0) = Z_PA * *(b + 1017 * OS1_S1 + 0) + alpha_Z * *(b + 1017 * OS1_S1 + 1) + 3 * one_over_two_p * (*(b + 854 * OS1_S1 + 0) - alpha_over_p * *(b + 854 * OS1_S1 + 1));
            *(b + 1200 * OS1_S1 + 0) = Z_PA * *(b + 1018 * OS1_S1 + 0) + alpha_Z * *(b + 1018 * OS1_S1 + 1) + 4 * one_over_two_p * (*(b + 855 * OS1_S1 + 0) - alpha_over_p * *(b + 855 * OS1_S1 + 1));
            *(b + 1201 * OS1_S1 + 0) = Y_PA * *(b + 1020 * OS1_S1 + 0) + alpha_Y * *(b + 1020 * OS1_S1 + 1) + 3 * one_over_two_p * (*(b + 858 * OS1_S1 + 0) - alpha_over_p * *(b + 858 * OS1_S1 + 1));
            *(b + 1202 * OS1_S1 + 0) = Y_PA * *(b + 1021 * OS1_S1 + 0) + alpha_Y * *(b + 1021 * OS1_S1 + 1) + 2 * one_over_two_p * (*(b + 859 * OS1_S1 + 0) - alpha_over_p * *(b + 859 * OS1_S1 + 1));
            *(b + 1203 * OS1_S1 + 0) = Y_PA * *(b + 1022 * OS1_S1 + 0) + alpha_Y * *(b + 1022 * OS1_S1 + 1) + one_over_two_p * (*(b + 860 * OS1_S1 + 0) - alpha_over_p * *(b + 860 * OS1_S1 + 1));
            *(b + 1204 * OS1_S1 + 0) = Y_PA * *(b + 1023 * OS1_S1 + 0) + alpha_Y * *(b + 1023 * OS1_S1 + 1);
            *(b + 1205 * OS1_S1 + 0) = X_PA * *(b + 1034 * OS1_S1 + 0) + alpha_X * *(b + 1034 * OS1_S1 + 1) + 7 * one_over_two_p * (*(b + 881 * OS1_S1 + 0) - alpha_over_p * *(b + 881 * OS1_S1 + 1));
            *(b + 1206 * OS1_S1 + 0) = X_PA * *(b + 1035 * OS1_S1 + 0) + alpha_X * *(b + 1035 * OS1_S1 + 1) + 6 * one_over_two_p * (*(b + 882 * OS1_S1 + 0) - alpha_over_p * *(b + 882 * OS1_S1 + 1));
            *(b + 1207 * OS1_S1 + 0) = Z_PA * *(b + 1024 * OS1_S1 + 0) + alpha_Z * *(b + 1024 * OS1_S1 + 1);
            *(b + 1208 * OS1_S1 + 0) = Z_PA * *(b + 1025 * OS1_S1 + 0) + alpha_Z * *(b + 1025 * OS1_S1 + 1) + one_over_two_p * (*(b + 861 * OS1_S1 + 0) - alpha_over_p * *(b + 861 * OS1_S1 + 1));
            *(b + 1209 * OS1_S1 + 0) = Z_PA * *(b + 1026 * OS1_S1 + 0) + alpha_Z * *(b + 1026 * OS1_S1 + 1) + 2 * one_over_two_p * (*(b + 862 * OS1_S1 + 0) - alpha_over_p * *(b + 862 * OS1_S1 + 1));
            *(b + 1210 * OS1_S1 + 0) = Z_PA * *(b + 1027 * OS1_S1 + 0) + alpha_Z * *(b + 1027 * OS1_S1 + 1) + 3 * one_over_two_p * (*(b + 863 * OS1_S1 + 0) - alpha_over_p * *(b + 863 * OS1_S1 + 1));
            *(b + 1211 * OS1_S1 + 0) = Z_PA * *(b + 1028 * OS1_S1 + 0) + alpha_Z * *(b + 1028 * OS1_S1 + 1) + 4 * one_over_two_p * (*(b + 864 * OS1_S1 + 0) - alpha_over_p * *(b + 864 * OS1_S1 + 1));
            *(b + 1212 * OS1_S1 + 0) = Y_PA * *(b + 1030 * OS1_S1 + 0) + alpha_Y * *(b + 1030 * OS1_S1 + 1) + 4 * one_over_two_p * (*(b + 867 * OS1_S1 + 0) - alpha_over_p * *(b + 867 * OS1_S1 + 1));
            *(b + 1213 * OS1_S1 + 0) = Y_PA * *(b + 1031 * OS1_S1 + 0) + alpha_Y * *(b + 1031 * OS1_S1 + 1) + 3 * one_over_two_p * (*(b + 868 * OS1_S1 + 0) - alpha_over_p * *(b + 868 * OS1_S1 + 1));
            *(b + 1214 * OS1_S1 + 0) = Y_PA * *(b + 1032 * OS1_S1 + 0) + alpha_Y * *(b + 1032 * OS1_S1 + 1) + 2 * one_over_two_p * (*(b + 869 * OS1_S1 + 0) - alpha_over_p * *(b + 869 * OS1_S1 + 1));
            *(b + 1215 * OS1_S1 + 0) = Y_PA * *(b + 1033 * OS1_S1 + 0) + alpha_Y * *(b + 1033 * OS1_S1 + 1) + one_over_two_p * (*(b + 870 * OS1_S1 + 0) - alpha_over_p * *(b + 870 * OS1_S1 + 1));
            *(b + 1216 * OS1_S1 + 0) = Y_PA * *(b + 1034 * OS1_S1 + 0) + alpha_Y * *(b + 1034 * OS1_S1 + 1);
            *(b + 1217 * OS1_S1 + 0) = X_PA * *(b + 1046 * OS1_S1 + 0) + alpha_X * *(b + 1046 * OS1_S1 + 1) + 6 * one_over_two_p * (*(b + 893 * OS1_S1 + 0) - alpha_over_p * *(b + 893 * OS1_S1 + 1));
            *(b + 1218 * OS1_S1 + 0) = X_PA * *(b + 1047 * OS1_S1 + 0) + alpha_X * *(b + 1047 * OS1_S1 + 1) + 5 * one_over_two_p * (*(b + 894 * OS1_S1 + 0) - alpha_over_p * *(b + 894 * OS1_S1 + 1));
            *(b + 1219 * OS1_S1 + 0) = Z_PA * *(b + 1035 * OS1_S1 + 0) + alpha_Z * *(b + 1035 * OS1_S1 + 1);
            *(b + 1220 * OS1_S1 + 0) = Z_PA * *(b + 1036 * OS1_S1 + 0) + alpha_Z * *(b + 1036 * OS1_S1 + 1) + one_over_two_p * (*(b + 871 * OS1_S1 + 0) - alpha_over_p * *(b + 871 * OS1_S1 + 1));
            *(b + 1221 * OS1_S1 + 0) = Z_PA * *(b + 1037 * OS1_S1 + 0) + alpha_Z * *(b + 1037 * OS1_S1 + 1) + 2 * one_over_two_p * (*(b + 872 * OS1_S1 + 0) - alpha_over_p * *(b + 872 * OS1_S1 + 1));
            *(b + 1222 * OS1_S1 + 0) = Z_PA * *(b + 1038 * OS1_S1 + 0) + alpha_Z * *(b + 1038 * OS1_S1 + 1) + 3 * one_over_two_p * (*(b + 873 * OS1_S1 + 0) - alpha_over_p * *(b + 873 * OS1_S1 + 1));
            *(b + 1223 * OS1_S1 + 0) = Z_PA * *(b + 1039 * OS1_S1 + 0) + alpha_Z * *(b + 1039 * OS1_S1 + 1) + 4 * one_over_two_p * (*(b + 874 * OS1_S1 + 0) - alpha_over_p * *(b + 874 * OS1_S1 + 1));
            *(b + 1224 * OS1_S1 + 0) = Z_PA * *(b + 1040 * OS1_S1 + 0) + alpha_Z * *(b + 1040 * OS1_S1 + 1) + 5 * one_over_two_p * (*(b + 875 * OS1_S1 + 0) - alpha_over_p * *(b + 875 * OS1_S1 + 1));
            *(b + 1225 * OS1_S1 + 0) = Y_PA * *(b + 1042 * OS1_S1 + 0) + alpha_Y * *(b + 1042 * OS1_S1 + 1) + 4 * one_over_two_p * (*(b + 878 * OS1_S1 + 0) - alpha_over_p * *(b + 878 * OS1_S1 + 1));
            *(b + 1226 * OS1_S1 + 0) = Y_PA * *(b + 1043 * OS1_S1 + 0) + alpha_Y * *(b + 1043 * OS1_S1 + 1) + 3 * one_over_two_p * (*(b + 879 * OS1_S1 + 0) - alpha_over_p * *(b + 879 * OS1_S1 + 1));
            *(b + 1227 * OS1_S1 + 0) = Y_PA * *(b + 1044 * OS1_S1 + 0) + alpha_Y * *(b + 1044 * OS1_S1 + 1) + 2 * one_over_two_p * (*(b + 880 * OS1_S1 + 0) - alpha_over_p * *(b + 880 * OS1_S1 + 1));
            *(b + 1228 * OS1_S1 + 0) = Y_PA * *(b + 1045 * OS1_S1 + 0) + alpha_Y * *(b + 1045 * OS1_S1 + 1) + one_over_two_p * (*(b + 881 * OS1_S1 + 0) - alpha_over_p * *(b + 881 * OS1_S1 + 1));
            *(b + 1229 * OS1_S1 + 0) = Y_PA * *(b + 1046 * OS1_S1 + 0) + alpha_Y * *(b + 1046 * OS1_S1 + 1);
            *(b + 1230 * OS1_S1 + 0) = X_PA * *(b + 1059 * OS1_S1 + 0) + alpha_X * *(b + 1059 * OS1_S1 + 1) + 5 * one_over_two_p * (*(b + 906 * OS1_S1 + 0) - alpha_over_p * *(b + 906 * OS1_S1 + 1));
            *(b + 1231 * OS1_S1 + 0) = X_PA * *(b + 1060 * OS1_S1 + 0) + alpha_X * *(b + 1060 * OS1_S1 + 1) + 4 * one_over_two_p * (*(b + 907 * OS1_S1 + 0) - alpha_over_p * *(b + 907 * OS1_S1 + 1));
            *(b + 1232 * OS1_S1 + 0) = Z_PA * *(b + 1047 * OS1_S1 + 0) + alpha_Z * *(b + 1047 * OS1_S1 + 1);
            *(b + 1233 * OS1_S1 + 0) = Z_PA * *(b + 1048 * OS1_S1 + 0) + alpha_Z * *(b + 1048 * OS1_S1 + 1) + one_over_two_p * (*(b + 882 * OS1_S1 + 0) - alpha_over_p * *(b + 882 * OS1_S1 + 1));
            *(b + 1234 * OS1_S1 + 0) = Z_PA * *(b + 1049 * OS1_S1 + 0) + alpha_Z * *(b + 1049 * OS1_S1 + 1) + 2 * one_over_two_p * (*(b + 883 * OS1_S1 + 0) - alpha_over_p * *(b + 883 * OS1_S1 + 1));
            *(b + 1235 * OS1_S1 + 0) = Z_PA * *(b + 1050 * OS1_S1 + 0) + alpha_Z * *(b + 1050 * OS1_S1 + 1) + 3 * one_over_two_p * (*(b + 884 * OS1_S1 + 0) - alpha_over_p * *(b + 884 * OS1_S1 + 1));
            *(b + 1236 * OS1_S1 + 0) = Z_PA * *(b + 1051 * OS1_S1 + 0) + alpha_Z * *(b + 1051 * OS1_S1 + 1) + 4 * one_over_two_p * (*(b + 885 * OS1_S1 + 0) - alpha_over_p * *(b + 885 * OS1_S1 + 1));
            *(b + 1237 * OS1_S1 + 0) = X_PA * *(b + 1066 * OS1_S1 + 0) + alpha_X * *(b + 1066 * OS1_S1 + 1) + 4 * one_over_two_p * (*(b + 913 * OS1_S1 + 0) - alpha_over_p * *(b + 913 * OS1_S1 + 1));
            *(b + 1238 * OS1_S1 + 0) = X_PA * *(b + 1067 * OS1_S1 + 0) + alpha_X * *(b + 1067 * OS1_S1 + 1) + 4 * one_over_two_p * (*(b + 914 * OS1_S1 + 0) - alpha_over_p * *(b + 914 * OS1_S1 + 1));
            *(b + 1239 * OS1_S1 + 0) = Y_PA * *(b + 1055 * OS1_S1 + 0) + alpha_Y * *(b + 1055 * OS1_S1 + 1) + 4 * one_over_two_p * (*(b + 890 * OS1_S1 + 0) - alpha_over_p * *(b + 890 * OS1_S1 + 1));
            *(b + 1240 * OS1_S1 + 0) = Y_PA * *(b + 1056 * OS1_S1 + 0) + alpha_Y * *(b + 1056 * OS1_S1 + 1) + 3 * one_over_two_p * (*(b + 891 * OS1_S1 + 0) - alpha_over_p * *(b + 891 * OS1_S1 + 1));
            *(b + 1241 * OS1_S1 + 0) = Y_PA * *(b + 1057 * OS1_S1 + 0) + alpha_Y * *(b + 1057 * OS1_S1 + 1) + 2 * one_over_two_p * (*(b + 892 * OS1_S1 + 0) - alpha_over_p * *(b + 892 * OS1_S1 + 1));
            *(b + 1242 * OS1_S1 + 0) = Y_PA * *(b + 1058 * OS1_S1 + 0) + alpha_Y * *(b + 1058 * OS1_S1 + 1) + one_over_two_p * (*(b + 893 * OS1_S1 + 0) - alpha_over_p * *(b + 893 * OS1_S1 + 1));
            *(b + 1243 * OS1_S1 + 0) = Y_PA * *(b + 1059 * OS1_S1 + 0) + alpha_Y * *(b + 1059 * OS1_S1 + 1);
            *(b + 1244 * OS1_S1 + 0) = X_PA * *(b + 1073 * OS1_S1 + 0) + alpha_X * *(b + 1073 * OS1_S1 + 1) + 4 * one_over_two_p * (*(b + 920 * OS1_S1 + 0) - alpha_over_p * *(b + 920 * OS1_S1 + 1));
            *(b + 1245 * OS1_S1 + 0) = X_PA * *(b + 1074 * OS1_S1 + 0) + alpha_X * *(b + 1074 * OS1_S1 + 1) + 3 * one_over_two_p * (*(b + 921 * OS1_S1 + 0) - alpha_over_p * *(b + 921 * OS1_S1 + 1));
            *(b + 1246 * OS1_S1 + 0) = Z_PA * *(b + 1060 * OS1_S1 + 0) + alpha_Z * *(b + 1060 * OS1_S1 + 1);
            *(b + 1247 * OS1_S1 + 0) = Z_PA * *(b + 1061 * OS1_S1 + 0) + alpha_Z * *(b + 1061 * OS1_S1 + 1) + one_over_two_p * (*(b + 894 * OS1_S1 + 0) - alpha_over_p * *(b + 894 * OS1_S1 + 1));
            *(b + 1248 * OS1_S1 + 0) = Z_PA * *(b + 1062 * OS1_S1 + 0) + alpha_Z * *(b + 1062 * OS1_S1 + 1) + 2 * one_over_two_p * (*(b + 895 * OS1_S1 + 0) - alpha_over_p * *(b + 895 * OS1_S1 + 1));
            *(b + 1249 * OS1_S1 + 0) = Z_PA * *(b + 1063 * OS1_S1 + 0) + alpha_Z * *(b + 1063 * OS1_S1 + 1) + 3 * one_over_two_p * (*(b + 896 * OS1_S1 + 0) - alpha_over_p * *(b + 896 * OS1_S1 + 1));
            *(b + 1250 * OS1_S1 + 0) = X_PA * *(b + 1079 * OS1_S1 + 0) + alpha_X * *(b + 1079 * OS1_S1 + 1) + 3 * one_over_two_p * (*(b + 926 * OS1_S1 + 0) - alpha_over_p * *(b + 926 * OS1_S1 + 1));
            *(b + 1251 * OS1_S1 + 0) = X_PA * *(b + 1080 * OS1_S1 + 0) + alpha_X * *(b + 1080 * OS1_S1 + 1) + 3 * one_over_two_p * (*(b + 927 * OS1_S1 + 0) - alpha_over_p * *(b + 927 * OS1_S1 + 1));
            *(b + 1252 * OS1_S1 + 0) = X_PA * *(b + 1081 * OS1_S1 + 0) + alpha_X * *(b + 1081 * OS1_S1 + 1) + 3 * one_over_two_p * (*(b + 928 * OS1_S1 + 0) - alpha_over_p * *(b + 928 * OS1_S1 + 1));
            *(b + 1253 * OS1_S1 + 0) = X_PA * *(b + 1082 * OS1_S1 + 0) + alpha_X * *(b + 1082 * OS1_S1 + 1) + 3 * one_over_two_p * (*(b + 929 * OS1_S1 + 0) - alpha_over_p * *(b + 929 * OS1_S1 + 1));
            *(b + 1254 * OS1_S1 + 0) = X_PA * *(b + 1083 * OS1_S1 + 0) + alpha_X * *(b + 1083 * OS1_S1 + 1) + 3 * one_over_two_p * (*(b + 930 * OS1_S1 + 0) - alpha_over_p * *(b + 930 * OS1_S1 + 1));
            *(b + 1255 * OS1_S1 + 0) = Y_PA * *(b + 1070 * OS1_S1 + 0) + alpha_Y * *(b + 1070 * OS1_S1 + 1) + 3 * one_over_two_p * (*(b + 904 * OS1_S1 + 0) - alpha_over_p * *(b + 904 * OS1_S1 + 1));
            *(b + 1256 * OS1_S1 + 0) = Y_PA * *(b + 1071 * OS1_S1 + 0) + alpha_Y * *(b + 1071 * OS1_S1 + 1) + 2 * one_over_two_p * (*(b + 905 * OS1_S1 + 0) - alpha_over_p * *(b + 905 * OS1_S1 + 1));
            *(b + 1257 * OS1_S1 + 0) = Y_PA * *(b + 1072 * OS1_S1 + 0) + alpha_Y * *(b + 1072 * OS1_S1 + 1) + one_over_two_p * (*(b + 906 * OS1_S1 + 0) - alpha_over_p * *(b + 906 * OS1_S1 + 1));
            *(b + 1258 * OS1_S1 + 0) = Y_PA * *(b + 1073 * OS1_S1 + 0) + alpha_Y * *(b + 1073 * OS1_S1 + 1);
            *(b + 1259 * OS1_S1 + 0) = X_PA * *(b + 1088 * OS1_S1 + 0) + alpha_X * *(b + 1088 * OS1_S1 + 1) + 3 * one_over_two_p * (*(b + 935 * OS1_S1 + 0) - alpha_over_p * *(b + 935 * OS1_S1 + 1));
            *(b + 1260 * OS1_S1 + 0) = X_PA * *(b + 1089 * OS1_S1 + 0) + alpha_X * *(b + 1089 * OS1_S1 + 1) + 2 * one_over_two_p * (*(b + 936 * OS1_S1 + 0) - alpha_over_p * *(b + 936 * OS1_S1 + 1));
            *(b + 1261 * OS1_S1 + 0) = Z_PA * *(b + 1074 * OS1_S1 + 0) + alpha_Z * *(b + 1074 * OS1_S1 + 1);
            *(b + 1262 * OS1_S1 + 0) = Z_PA * *(b + 1075 * OS1_S1 + 0) + alpha_Z * *(b + 1075 * OS1_S1 + 1) + one_over_two_p * (*(b + 907 * OS1_S1 + 0) - alpha_over_p * *(b + 907 * OS1_S1 + 1));
            *(b + 1263 * OS1_S1 + 0) = Z_PA * *(b + 1076 * OS1_S1 + 0) + alpha_Z * *(b + 1076 * OS1_S1 + 1) + 2 * one_over_two_p * (*(b + 908 * OS1_S1 + 0) - alpha_over_p * *(b + 908 * OS1_S1 + 1));
            *(b + 1264 * OS1_S1 + 0) = X_PA * *(b + 1093 * OS1_S1 + 0) + alpha_X * *(b + 1093 * OS1_S1 + 1) + 2 * one_over_two_p * (*(b + 940 * OS1_S1 + 0) - alpha_over_p * *(b + 940 * OS1_S1 + 1));
            *(b + 1265 * OS1_S1 + 0) = X_PA * *(b + 1094 * OS1_S1 + 0) + alpha_X * *(b + 1094 * OS1_S1 + 1) + 2 * one_over_two_p * (*(b + 941 * OS1_S1 + 0) - alpha_over_p * *(b + 941 * OS1_S1 + 1));
            *(b + 1266 * OS1_S1 + 0) = X_PA * *(b + 1095 * OS1_S1 + 0) + alpha_X * *(b + 1095 * OS1_S1 + 1) + 2 * one_over_two_p * (*(b + 942 * OS1_S1 + 0) - alpha_over_p * *(b + 942 * OS1_S1 + 1));
            *(b + 1267 * OS1_S1 + 0) = X_PA * *(b + 1096 * OS1_S1 + 0) + alpha_X * *(b + 1096 * OS1_S1 + 1) + 2 * one_over_two_p * (*(b + 943 * OS1_S1 + 0) - alpha_over_p * *(b + 943 * OS1_S1 + 1));
            *(b + 1268 * OS1_S1 + 0) = X_PA * *(b + 1097 * OS1_S1 + 0) + alpha_X * *(b + 1097 * OS1_S1 + 1) + 2 * one_over_two_p * (*(b + 944 * OS1_S1 + 0) - alpha_over_p * *(b + 944 * OS1_S1 + 1));
            *(b + 1269 * OS1_S1 + 0) = X_PA * *(b + 1098 * OS1_S1 + 0) + alpha_X * *(b + 1098 * OS1_S1 + 1) + 2 * one_over_two_p * (*(b + 945 * OS1_S1 + 0) - alpha_over_p * *(b + 945 * OS1_S1 + 1));
            *(b + 1270 * OS1_S1 + 0) = X_PA * *(b + 1099 * OS1_S1 + 0) + alpha_X * *(b + 1099 * OS1_S1 + 1) + 2 * one_over_two_p * (*(b + 946 * OS1_S1 + 0) - alpha_over_p * *(b + 946 * OS1_S1 + 1));
            *(b + 1271 * OS1_S1 + 0) = X_PA * *(b + 1100 * OS1_S1 + 0) + alpha_X * *(b + 1100 * OS1_S1 + 1) + 2 * one_over_two_p * (*(b + 947 * OS1_S1 + 0) - alpha_over_p * *(b + 947 * OS1_S1 + 1));
            *(b + 1272 * OS1_S1 + 0) = Y_PA * *(b + 1086 * OS1_S1 + 0) + alpha_Y * *(b + 1086 * OS1_S1 + 1) + 2 * one_over_two_p * (*(b + 919 * OS1_S1 + 0) - alpha_over_p * *(b + 919 * OS1_S1 + 1));
            *(b + 1273 * OS1_S1 + 0) = Y_PA * *(b + 1087 * OS1_S1 + 0) + alpha_Y * *(b + 1087 * OS1_S1 + 1) + one_over_two_p * (*(b + 920 * OS1_S1 + 0) - alpha_over_p * *(b + 920 * OS1_S1 + 1));
            *(b + 1274 * OS1_S1 + 0) = Y_PA * *(b + 1088 * OS1_S1 + 0) + alpha_Y * *(b + 1088 * OS1_S1 + 1);
            *(b + 1275 * OS1_S1 + 0) = X_PA * *(b + 1104 * OS1_S1 + 0) + alpha_X * *(b + 1104 * OS1_S1 + 1) + 2 * one_over_two_p * (*(b + 951 * OS1_S1 + 0) - alpha_over_p * *(b + 951 * OS1_S1 + 1));
            *(b + 1276 * OS1_S1 + 0) = X_PA * *(b + 1105 * OS1_S1 + 0) + alpha_X * *(b + 1105 * OS1_S1 + 1) + one_over_two_p * (*(b + 952 * OS1_S1 + 0) - alpha_over_p * *(b + 952 * OS1_S1 + 1));
            *(b + 1277 * OS1_S1 + 0) = Z_PA * *(b + 1089 * OS1_S1 + 0) + alpha_Z * *(b + 1089 * OS1_S1 + 1);
            *(b + 1278 * OS1_S1 + 0) = Z_PA * *(b + 1090 * OS1_S1 + 0) + alpha_Z * *(b + 1090 * OS1_S1 + 1) + one_over_two_p * (*(b + 921 * OS1_S1 + 0) - alpha_over_p * *(b + 921 * OS1_S1 + 1));
            *(b + 1279 * OS1_S1 + 0) = X_PA * *(b + 1108 * OS1_S1 + 0) + alpha_X * *(b + 1108 * OS1_S1 + 1) + one_over_two_p * (*(b + 955 * OS1_S1 + 0) - alpha_over_p * *(b + 955 * OS1_S1 + 1));
            *(b + 1280 * OS1_S1 + 0) = X_PA * *(b + 1109 * OS1_S1 + 0) + alpha_X * *(b + 1109 * OS1_S1 + 1) + one_over_two_p * (*(b + 956 * OS1_S1 + 0) - alpha_over_p * *(b + 956 * OS1_S1 + 1));
            *(b + 1281 * OS1_S1 + 0) = X_PA * *(b + 1110 * OS1_S1 + 0) + alpha_X * *(b + 1110 * OS1_S1 + 1) + one_over_two_p * (*(b + 957 * OS1_S1 + 0) - alpha_over_p * *(b + 957 * OS1_S1 + 1));
            *(b + 1282 * OS1_S1 + 0) = X_PA * *(b + 1111 * OS1_S1 + 0) + alpha_X * *(b + 1111 * OS1_S1 + 1) + one_over_two_p * (*(b + 958 * OS1_S1 + 0) - alpha_over_p * *(b + 958 * OS1_S1 + 1));
            *(b + 1283 * OS1_S1 + 0) = X_PA * *(b + 1112 * OS1_S1 + 0) + alpha_X * *(b + 1112 * OS1_S1 + 1) + one_over_two_p * (*(b + 959 * OS1_S1 + 0) - alpha_over_p * *(b + 959 * OS1_S1 + 1));
            *(b + 1284 * OS1_S1 + 0) = X_PA * *(b + 1113 * OS1_S1 + 0) + alpha_X * *(b + 1113 * OS1_S1 + 1) + one_over_two_p * (*(b + 960 * OS1_S1 + 0) - alpha_over_p * *(b + 960 * OS1_S1 + 1));
            *(b + 1285 * OS1_S1 + 0) = X_PA * *(b + 1114 * OS1_S1 + 0) + alpha_X * *(b + 1114 * OS1_S1 + 1) + one_over_two_p * (*(b + 961 * OS1_S1 + 0) - alpha_over_p * *(b + 961 * OS1_S1 + 1));
            *(b + 1286 * OS1_S1 + 0) = X_PA * *(b + 1115 * OS1_S1 + 0) + alpha_X * *(b + 1115 * OS1_S1 + 1) + one_over_two_p * (*(b + 962 * OS1_S1 + 0) - alpha_over_p * *(b + 962 * OS1_S1 + 1));
            *(b + 1287 * OS1_S1 + 0) = X_PA * *(b + 1116 * OS1_S1 + 0) + alpha_X * *(b + 1116 * OS1_S1 + 1) + one_over_two_p * (*(b + 963 * OS1_S1 + 0) - alpha_over_p * *(b + 963 * OS1_S1 + 1));
            *(b + 1288 * OS1_S1 + 0) = X_PA * *(b + 1117 * OS1_S1 + 0) + alpha_X * *(b + 1117 * OS1_S1 + 1) + one_over_two_p * (*(b + 964 * OS1_S1 + 0) - alpha_over_p * *(b + 964 * OS1_S1 + 1));
            *(b + 1289 * OS1_S1 + 0) = X_PA * *(b + 1118 * OS1_S1 + 0) + alpha_X * *(b + 1118 * OS1_S1 + 1) + one_over_two_p * (*(b + 965 * OS1_S1 + 0) - alpha_over_p * *(b + 965 * OS1_S1 + 1));
            *(b + 1290 * OS1_S1 + 0) = Y_PA * *(b + 1103 * OS1_S1 + 0) + alpha_Y * *(b + 1103 * OS1_S1 + 1) + one_over_two_p * (*(b + 935 * OS1_S1 + 0) - alpha_over_p * *(b + 935 * OS1_S1 + 1));
            *(b + 1291 * OS1_S1 + 0) = Y_PA * *(b + 1104 * OS1_S1 + 0) + alpha_Y * *(b + 1104 * OS1_S1 + 1);
            *(b + 1292 * OS1_S1 + 0) = X_PA * *(b + 1121 * OS1_S1 + 0) + alpha_X * *(b + 1121 * OS1_S1 + 1) + one_over_two_p * (*(b + 968 * OS1_S1 + 0) - alpha_over_p * *(b + 968 * OS1_S1 + 1));
            *(b + 1293 * OS1_S1 + 0) = X_PA * *(b + 1122 * OS1_S1 + 0) + alpha_X * *(b + 1122 * OS1_S1 + 1);
            *(b + 1294 * OS1_S1 + 0) = Z_PA * *(b + 1105 * OS1_S1 + 0) + alpha_Z * *(b + 1105 * OS1_S1 + 1);
            *(b + 1295 * OS1_S1 + 0) = X_PA * *(b + 1124 * OS1_S1 + 0) + alpha_X * *(b + 1124 * OS1_S1 + 1);
            *(b + 1296 * OS1_S1 + 0) = X_PA * *(b + 1125 * OS1_S1 + 0) + alpha_X * *(b + 1125 * OS1_S1 + 1);
            *(b + 1297 * OS1_S1 + 0) = X_PA * *(b + 1126 * OS1_S1 + 0) + alpha_X * *(b + 1126 * OS1_S1 + 1);
            *(b + 1298 * OS1_S1 + 0) = X_PA * *(b + 1127 * OS1_S1 + 0) + alpha_X * *(b + 1127 * OS1_S1 + 1);
            *(b + 1299 * OS1_S1 + 0) = X_PA * *(b + 1128 * OS1_S1 + 0) + alpha_X * *(b + 1128 * OS1_S1 + 1);
            *(b + 1300 * OS1_S1 + 0) = X_PA * *(b + 1129 * OS1_S1 + 0) + alpha_X * *(b + 1129 * OS1_S1 + 1);
            *(b + 1301 * OS1_S1 + 0) = X_PA * *(b + 1130 * OS1_S1 + 0) + alpha_X * *(b + 1130 * OS1_S1 + 1);
            *(b + 1302 * OS1_S1 + 0) = X_PA * *(b + 1131 * OS1_S1 + 0) + alpha_X * *(b + 1131 * OS1_S1 + 1);
            *(b + 1303 * OS1_S1 + 0) = X_PA * *(b + 1132 * OS1_S1 + 0) + alpha_X * *(b + 1132 * OS1_S1 + 1);
            *(b + 1304 * OS1_S1 + 0) = X_PA * *(b + 1133 * OS1_S1 + 0) + alpha_X * *(b + 1133 * OS1_S1 + 1);
            *(b + 1305 * OS1_S1 + 0) = X_PA * *(b + 1134 * OS1_S1 + 0) + alpha_X * *(b + 1134 * OS1_S1 + 1);
            *(b + 1306 * OS1_S1 + 0) = X_PA * *(b + 1135 * OS1_S1 + 0) + alpha_X * *(b + 1135 * OS1_S1 + 1);
            *(b + 1307 * OS1_S1 + 0) = X_PA * *(b + 1136 * OS1_S1 + 0) + alpha_X * *(b + 1136 * OS1_S1 + 1);
            *(b + 1308 * OS1_S1 + 0) = X_PA * *(b + 1137 * OS1_S1 + 0) + alpha_X * *(b + 1137 * OS1_S1 + 1);
            *(b + 1309 * OS1_S1 + 0) = Y_PA * *(b + 1121 * OS1_S1 + 0) + alpha_Y * *(b + 1121 * OS1_S1 + 1);
            *(b + 1310 * OS1_S1 + 0) = X_PA * *(b + 1139 * OS1_S1 + 0) + alpha_X * *(b + 1139 * OS1_S1 + 1);
            *(b + 1311 * OS1_S1 + 0) = Y_PA * *(b + 1122 * OS1_S1 + 0) + alpha_Y * *(b + 1122 * OS1_S1 + 1) + 17 * one_over_two_p * (*(b + 952 * OS1_S1 + 0) - alpha_over_p * *(b + 952 * OS1_S1 + 1));
            *(b + 1312 * OS1_S1 + 0) = Z_PA * *(b + 1122 * OS1_S1 + 0) + alpha_Z * *(b + 1122 * OS1_S1 + 1);
            *(b + 1313 * OS1_S1 + 0) = Z_PA * *(b + 1123 * OS1_S1 + 0) + alpha_Z * *(b + 1123 * OS1_S1 + 1) + one_over_two_p * (*(b + 952 * OS1_S1 + 0) - alpha_over_p * *(b + 952 * OS1_S1 + 1));
            *(b + 1314 * OS1_S1 + 0) = Z_PA * *(b + 1124 * OS1_S1 + 0) + alpha_Z * *(b + 1124 * OS1_S1 + 1) + 2 * one_over_two_p * (*(b + 953 * OS1_S1 + 0) - alpha_over_p * *(b + 953 * OS1_S1 + 1));
            *(b + 1315 * OS1_S1 + 0) = Z_PA * *(b + 1125 * OS1_S1 + 0) + alpha_Z * *(b + 1125 * OS1_S1 + 1) + 3 * one_over_two_p * (*(b + 954 * OS1_S1 + 0) - alpha_over_p * *(b + 954 * OS1_S1 + 1));
            *(b + 1316 * OS1_S1 + 0) = Z_PA * *(b + 1126 * OS1_S1 + 0) + alpha_Z * *(b + 1126 * OS1_S1 + 1) + 4 * one_over_two_p * (*(b + 955 * OS1_S1 + 0) - alpha_over_p * *(b + 955 * OS1_S1 + 1));
            *(b + 1317 * OS1_S1 + 0) = Z_PA * *(b + 1127 * OS1_S1 + 0) + alpha_Z * *(b + 1127 * OS1_S1 + 1) + 5 * one_over_two_p * (*(b + 956 * OS1_S1 + 0) - alpha_over_p * *(b + 956 * OS1_S1 + 1));
            *(b + 1318 * OS1_S1 + 0) = Z_PA * *(b + 1128 * OS1_S1 + 0) + alpha_Z * *(b + 1128 * OS1_S1 + 1) + 6 * one_over_two_p * (*(b + 957 * OS1_S1 + 0) - alpha_over_p * *(b + 957 * OS1_S1 + 1));
            *(b + 1319 * OS1_S1 + 0) = Z_PA * *(b + 1129 * OS1_S1 + 0) + alpha_Z * *(b + 1129 * OS1_S1 + 1) + 7 * one_over_two_p * (*(b + 958 * OS1_S1 + 0) - alpha_over_p * *(b + 958 * OS1_S1 + 1));
            *(b + 1320 * OS1_S1 + 0) = Z_PA * *(b + 1130 * OS1_S1 + 0) + alpha_Z * *(b + 1130 * OS1_S1 + 1) + 8 * one_over_two_p * (*(b + 959 * OS1_S1 + 0) - alpha_over_p * *(b + 959 * OS1_S1 + 1));
            *(b + 1321 * OS1_S1 + 0) = Y_PA * *(b + 1132 * OS1_S1 + 0) + alpha_Y * *(b + 1132 * OS1_S1 + 1) + 7 * one_over_two_p * (*(b + 962 * OS1_S1 + 0) - alpha_over_p * *(b + 962 * OS1_S1 + 1));
            *(b + 1322 * OS1_S1 + 0) = Y_PA * *(b + 1133 * OS1_S1 + 0) + alpha_Y * *(b + 1133 * OS1_S1 + 1) + 6 * one_over_two_p * (*(b + 963 * OS1_S1 + 0) - alpha_over_p * *(b + 963 * OS1_S1 + 1));
            *(b + 1323 * OS1_S1 + 0) = Y_PA * *(b + 1134 * OS1_S1 + 0) + alpha_Y * *(b + 1134 * OS1_S1 + 1) + 5 * one_over_two_p * (*(b + 964 * OS1_S1 + 0) - alpha_over_p * *(b + 964 * OS1_S1 + 1));
            *(b + 1324 * OS1_S1 + 0) = Y_PA * *(b + 1135 * OS1_S1 + 0) + alpha_Y * *(b + 1135 * OS1_S1 + 1) + 4 * one_over_two_p * (*(b + 965 * OS1_S1 + 0) - alpha_over_p * *(b + 965 * OS1_S1 + 1));
            *(b + 1325 * OS1_S1 + 0) = Y_PA * *(b + 1136 * OS1_S1 + 0) + alpha_Y * *(b + 1136 * OS1_S1 + 1) + 3 * one_over_two_p * (*(b + 966 * OS1_S1 + 0) - alpha_over_p * *(b + 966 * OS1_S1 + 1));
            *(b + 1326 * OS1_S1 + 0) = Y_PA * *(b + 1137 * OS1_S1 + 0) + alpha_Y * *(b + 1137 * OS1_S1 + 1) + 2 * one_over_two_p * (*(b + 967 * OS1_S1 + 0) - alpha_over_p * *(b + 967 * OS1_S1 + 1));
            *(b + 1327 * OS1_S1 + 0) = Y_PA * *(b + 1138 * OS1_S1 + 0) + alpha_Y * *(b + 1138 * OS1_S1 + 1) + one_over_two_p * (*(b + 968 * OS1_S1 + 0) - alpha_over_p * *(b + 968 * OS1_S1 + 1));
            *(b + 1328 * OS1_S1 + 0) = Y_PA * *(b + 1139 * OS1_S1 + 0) + alpha_Y * *(b + 1139 * OS1_S1 + 1);
            *(b + 1329 * OS1_S1 + 0) = Z_PA * *(b + 1139 * OS1_S1 + 0) + alpha_Z * *(b + 1139 * OS1_S1 + 1) + 17 * one_over_two_p * (*(b + 968 * OS1_S1 + 0) - alpha_over_p * *(b + 968 * OS1_S1 + 1));
            return;
        }
    }
}
