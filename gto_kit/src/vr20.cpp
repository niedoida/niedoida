/* This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/. */

#include "gto_kit/vr.hpp"

#include "gto_kit/os1_constants.hpp"

namespace niedoida {
    namespace gto {
        void vr20(const double alpha_over_p,
                  const double one_over_two_p,
                  const unsigned m,
                  const double X_PA,
                  const double Y_PA,
                  const double Z_PA,
                  const double alpha_X,
                  const double alpha_Y,
                  const double alpha_Z,
                  double* NIEDOIDA_RESTRICT b)
        {
            *(b + 1 * OS1_S1 + 19) = X_PA * *(b + 0 * OS1_S1 + 19) + alpha_X * *(b + 0 * OS1_S1 + 20);
            *(b + 2 * OS1_S1 + 19) = Y_PA * *(b + 0 * OS1_S1 + 19) + alpha_Y * *(b + 0 * OS1_S1 + 20);
            *(b + 3 * OS1_S1 + 19) = Z_PA * *(b + 0 * OS1_S1 + 19) + alpha_Z * *(b + 0 * OS1_S1 + 20);
            *(b + 4 * OS1_S1 + 18) = X_PA * *(b + 1 * OS1_S1 + 18) + alpha_X * *(b + 1 * OS1_S1 + 19) + one_over_two_p * (*(b + 0 * OS1_S1 + 18) - alpha_over_p * *(b + 0 * OS1_S1 + 19));
            *(b + 7 * OS1_S1 + 18) = Y_PA * *(b + 2 * OS1_S1 + 18) + alpha_Y * *(b + 2 * OS1_S1 + 19) + one_over_two_p * (*(b + 0 * OS1_S1 + 18) - alpha_over_p * *(b + 0 * OS1_S1 + 19));
            *(b + 9 * OS1_S1 + 18) = Z_PA * *(b + 3 * OS1_S1 + 18) + alpha_Z * *(b + 3 * OS1_S1 + 19) + one_over_two_p * (*(b + 0 * OS1_S1 + 18) - alpha_over_p * *(b + 0 * OS1_S1 + 19));
            *(b + 10 * OS1_S1 + 17) = X_PA * *(b + 4 * OS1_S1 + 17) + alpha_X * *(b + 4 * OS1_S1 + 18) + 2 * one_over_two_p * (*(b + 1 * OS1_S1 + 17) - alpha_over_p * *(b + 1 * OS1_S1 + 18));
            *(b + 16 * OS1_S1 + 17) = Y_PA * *(b + 7 * OS1_S1 + 17) + alpha_Y * *(b + 7 * OS1_S1 + 18) + 2 * one_over_two_p * (*(b + 2 * OS1_S1 + 17) - alpha_over_p * *(b + 2 * OS1_S1 + 18));
            *(b + 19 * OS1_S1 + 17) = Z_PA * *(b + 9 * OS1_S1 + 17) + alpha_Z * *(b + 9 * OS1_S1 + 18) + 2 * one_over_two_p * (*(b + 3 * OS1_S1 + 17) - alpha_over_p * *(b + 3 * OS1_S1 + 18));
            *(b + 20 * OS1_S1 + 16) = X_PA * *(b + 10 * OS1_S1 + 16) + alpha_X * *(b + 10 * OS1_S1 + 17) + 3 * one_over_two_p * (*(b + 4 * OS1_S1 + 16) - alpha_over_p * *(b + 4 * OS1_S1 + 17));
            *(b + 30 * OS1_S1 + 16) = Y_PA * *(b + 16 * OS1_S1 + 16) + alpha_Y * *(b + 16 * OS1_S1 + 17) + 3 * one_over_two_p * (*(b + 7 * OS1_S1 + 16) - alpha_over_p * *(b + 7 * OS1_S1 + 17));
            *(b + 34 * OS1_S1 + 16) = Z_PA * *(b + 19 * OS1_S1 + 16) + alpha_Z * *(b + 19 * OS1_S1 + 17) + 3 * one_over_two_p * (*(b + 9 * OS1_S1 + 16) - alpha_over_p * *(b + 9 * OS1_S1 + 17));
            *(b + 35 * OS1_S1 + 15) = X_PA * *(b + 20 * OS1_S1 + 15) + alpha_X * *(b + 20 * OS1_S1 + 16) + 4 * one_over_two_p * (*(b + 10 * OS1_S1 + 15) - alpha_over_p * *(b + 10 * OS1_S1 + 16));
            *(b + 50 * OS1_S1 + 15) = Y_PA * *(b + 30 * OS1_S1 + 15) + alpha_Y * *(b + 30 * OS1_S1 + 16) + 4 * one_over_two_p * (*(b + 16 * OS1_S1 + 15) - alpha_over_p * *(b + 16 * OS1_S1 + 16));
            *(b + 55 * OS1_S1 + 15) = Z_PA * *(b + 34 * OS1_S1 + 15) + alpha_Z * *(b + 34 * OS1_S1 + 16) + 4 * one_over_two_p * (*(b + 19 * OS1_S1 + 15) - alpha_over_p * *(b + 19 * OS1_S1 + 16));
            *(b + 56 * OS1_S1 + 14) = X_PA * *(b + 35 * OS1_S1 + 14) + alpha_X * *(b + 35 * OS1_S1 + 15) + 5 * one_over_two_p * (*(b + 20 * OS1_S1 + 14) - alpha_over_p * *(b + 20 * OS1_S1 + 15));
            *(b + 77 * OS1_S1 + 14) = Y_PA * *(b + 50 * OS1_S1 + 14) + alpha_Y * *(b + 50 * OS1_S1 + 15) + 5 * one_over_two_p * (*(b + 30 * OS1_S1 + 14) - alpha_over_p * *(b + 30 * OS1_S1 + 15));
            *(b + 83 * OS1_S1 + 14) = Z_PA * *(b + 55 * OS1_S1 + 14) + alpha_Z * *(b + 55 * OS1_S1 + 15) + 5 * one_over_two_p * (*(b + 34 * OS1_S1 + 14) - alpha_over_p * *(b + 34 * OS1_S1 + 15));
            *(b + 84 * OS1_S1 + 13) = X_PA * *(b + 56 * OS1_S1 + 13) + alpha_X * *(b + 56 * OS1_S1 + 14) + 6 * one_over_two_p * (*(b + 35 * OS1_S1 + 13) - alpha_over_p * *(b + 35 * OS1_S1 + 14));
            *(b + 112 * OS1_S1 + 13) = Y_PA * *(b + 77 * OS1_S1 + 13) + alpha_Y * *(b + 77 * OS1_S1 + 14) + 6 * one_over_two_p * (*(b + 50 * OS1_S1 + 13) - alpha_over_p * *(b + 50 * OS1_S1 + 14));
            *(b + 119 * OS1_S1 + 13) = Z_PA * *(b + 83 * OS1_S1 + 13) + alpha_Z * *(b + 83 * OS1_S1 + 14) + 6 * one_over_two_p * (*(b + 55 * OS1_S1 + 13) - alpha_over_p * *(b + 55 * OS1_S1 + 14));
            *(b + 120 * OS1_S1 + 12) = X_PA * *(b + 84 * OS1_S1 + 12) + alpha_X * *(b + 84 * OS1_S1 + 13) + 7 * one_over_two_p * (*(b + 56 * OS1_S1 + 12) - alpha_over_p * *(b + 56 * OS1_S1 + 13));
            *(b + 121 * OS1_S1 + 12) = Y_PA * *(b + 84 * OS1_S1 + 12) + alpha_Y * *(b + 84 * OS1_S1 + 13);
            *(b + 122 * OS1_S1 + 12) = Z_PA * *(b + 84 * OS1_S1 + 12) + alpha_Z * *(b + 84 * OS1_S1 + 13);
            *(b + 156 * OS1_S1 + 12) = Y_PA * *(b + 112 * OS1_S1 + 12) + alpha_Y * *(b + 112 * OS1_S1 + 13) + 7 * one_over_two_p * (*(b + 77 * OS1_S1 + 12) - alpha_over_p * *(b + 77 * OS1_S1 + 13));
            *(b + 157 * OS1_S1 + 12) = Z_PA * *(b + 112 * OS1_S1 + 12) + alpha_Z * *(b + 112 * OS1_S1 + 13);
            *(b + 164 * OS1_S1 + 12) = Z_PA * *(b + 119 * OS1_S1 + 12) + alpha_Z * *(b + 119 * OS1_S1 + 13) + 7 * one_over_two_p * (*(b + 83 * OS1_S1 + 12) - alpha_over_p * *(b + 83 * OS1_S1 + 13));
            *(b + 165 * OS1_S1 + 11) = X_PA * *(b + 120 * OS1_S1 + 11) + alpha_X * *(b + 120 * OS1_S1 + 12) + 8 * one_over_two_p * (*(b + 84 * OS1_S1 + 11) - alpha_over_p * *(b + 84 * OS1_S1 + 12));
            *(b + 166 * OS1_S1 + 11) = Y_PA * *(b + 120 * OS1_S1 + 11) + alpha_Y * *(b + 120 * OS1_S1 + 12);
            *(b + 167 * OS1_S1 + 11) = Z_PA * *(b + 120 * OS1_S1 + 11) + alpha_Z * *(b + 120 * OS1_S1 + 12);
            *(b + 168 * OS1_S1 + 11) = Y_PA * *(b + 121 * OS1_S1 + 11) + alpha_Y * *(b + 121 * OS1_S1 + 12) + one_over_two_p * (*(b + 84 * OS1_S1 + 11) - alpha_over_p * *(b + 84 * OS1_S1 + 12));
            *(b + 170 * OS1_S1 + 11) = Z_PA * *(b + 122 * OS1_S1 + 11) + alpha_Z * *(b + 122 * OS1_S1 + 12) + one_over_two_p * (*(b + 84 * OS1_S1 + 11) - alpha_over_p * *(b + 84 * OS1_S1 + 12));
            *(b + 201 * OS1_S1 + 11) = X_PA * *(b + 156 * OS1_S1 + 11) + alpha_X * *(b + 156 * OS1_S1 + 12);
            *(b + 209 * OS1_S1 + 11) = X_PA * *(b + 164 * OS1_S1 + 11) + alpha_X * *(b + 164 * OS1_S1 + 12);
            *(b + 210 * OS1_S1 + 11) = Y_PA * *(b + 156 * OS1_S1 + 11) + alpha_Y * *(b + 156 * OS1_S1 + 12) + 8 * one_over_two_p * (*(b + 112 * OS1_S1 + 11) - alpha_over_p * *(b + 112 * OS1_S1 + 12));
            *(b + 211 * OS1_S1 + 11) = Z_PA * *(b + 156 * OS1_S1 + 11) + alpha_Z * *(b + 156 * OS1_S1 + 12);
            *(b + 212 * OS1_S1 + 11) = Z_PA * *(b + 157 * OS1_S1 + 11) + alpha_Z * *(b + 157 * OS1_S1 + 12) + one_over_two_p * (*(b + 112 * OS1_S1 + 11) - alpha_over_p * *(b + 112 * OS1_S1 + 12));
            *(b + 218 * OS1_S1 + 11) = Y_PA * *(b + 164 * OS1_S1 + 11) + alpha_Y * *(b + 164 * OS1_S1 + 12);
            *(b + 219 * OS1_S1 + 11) = Z_PA * *(b + 164 * OS1_S1 + 11) + alpha_Z * *(b + 164 * OS1_S1 + 12) + 8 * one_over_two_p * (*(b + 119 * OS1_S1 + 11) - alpha_over_p * *(b + 119 * OS1_S1 + 12));
            *(b + 220 * OS1_S1 + 10) = X_PA * *(b + 165 * OS1_S1 + 10) + alpha_X * *(b + 165 * OS1_S1 + 11) + 9 * one_over_two_p * (*(b + 120 * OS1_S1 + 10) - alpha_over_p * *(b + 120 * OS1_S1 + 11));
            *(b + 221 * OS1_S1 + 10) = Y_PA * *(b + 165 * OS1_S1 + 10) + alpha_Y * *(b + 165 * OS1_S1 + 11);
            *(b + 222 * OS1_S1 + 10) = Z_PA * *(b + 165 * OS1_S1 + 10) + alpha_Z * *(b + 165 * OS1_S1 + 11);
            *(b + 223 * OS1_S1 + 10) = Y_PA * *(b + 166 * OS1_S1 + 10) + alpha_Y * *(b + 166 * OS1_S1 + 11) + one_over_two_p * (*(b + 120 * OS1_S1 + 10) - alpha_over_p * *(b + 120 * OS1_S1 + 11));
            *(b + 225 * OS1_S1 + 10) = Z_PA * *(b + 167 * OS1_S1 + 10) + alpha_Z * *(b + 167 * OS1_S1 + 11) + one_over_two_p * (*(b + 120 * OS1_S1 + 10) - alpha_over_p * *(b + 120 * OS1_S1 + 11));
            *(b + 226 * OS1_S1 + 10) = Y_PA * *(b + 168 * OS1_S1 + 10) + alpha_Y * *(b + 168 * OS1_S1 + 11) + 2 * one_over_two_p * (*(b + 121 * OS1_S1 + 10) - alpha_over_p * *(b + 121 * OS1_S1 + 11));
            *(b + 229 * OS1_S1 + 10) = Z_PA * *(b + 170 * OS1_S1 + 10) + alpha_Z * *(b + 170 * OS1_S1 + 11) + 2 * one_over_two_p * (*(b + 122 * OS1_S1 + 10) - alpha_over_p * *(b + 122 * OS1_S1 + 11));
            *(b + 256 * OS1_S1 + 10) = X_PA * *(b + 201 * OS1_S1 + 10) + alpha_X * *(b + 201 * OS1_S1 + 11) + one_over_two_p * (*(b + 156 * OS1_S1 + 10) - alpha_over_p * *(b + 156 * OS1_S1 + 11));
            *(b + 264 * OS1_S1 + 10) = X_PA * *(b + 209 * OS1_S1 + 10) + alpha_X * *(b + 209 * OS1_S1 + 11) + one_over_two_p * (*(b + 164 * OS1_S1 + 10) - alpha_over_p * *(b + 164 * OS1_S1 + 11));
            *(b + 265 * OS1_S1 + 10) = X_PA * *(b + 210 * OS1_S1 + 10) + alpha_X * *(b + 210 * OS1_S1 + 11);
            *(b + 274 * OS1_S1 + 10) = X_PA * *(b + 219 * OS1_S1 + 10) + alpha_X * *(b + 219 * OS1_S1 + 11);
            *(b + 275 * OS1_S1 + 10) = Y_PA * *(b + 210 * OS1_S1 + 10) + alpha_Y * *(b + 210 * OS1_S1 + 11) + 9 * one_over_two_p * (*(b + 156 * OS1_S1 + 10) - alpha_over_p * *(b + 156 * OS1_S1 + 11));
            *(b + 276 * OS1_S1 + 10) = Z_PA * *(b + 210 * OS1_S1 + 10) + alpha_Z * *(b + 210 * OS1_S1 + 11);
            *(b + 277 * OS1_S1 + 10) = Z_PA * *(b + 211 * OS1_S1 + 10) + alpha_Z * *(b + 211 * OS1_S1 + 11) + one_over_two_p * (*(b + 156 * OS1_S1 + 10) - alpha_over_p * *(b + 156 * OS1_S1 + 11));
            *(b + 278 * OS1_S1 + 10) = Z_PA * *(b + 212 * OS1_S1 + 10) + alpha_Z * *(b + 212 * OS1_S1 + 11) + 2 * one_over_two_p * (*(b + 157 * OS1_S1 + 10) - alpha_over_p * *(b + 157 * OS1_S1 + 11));
            *(b + 283 * OS1_S1 + 10) = Y_PA * *(b + 218 * OS1_S1 + 10) + alpha_Y * *(b + 218 * OS1_S1 + 11) + one_over_two_p * (*(b + 164 * OS1_S1 + 10) - alpha_over_p * *(b + 164 * OS1_S1 + 11));
            *(b + 284 * OS1_S1 + 10) = Y_PA * *(b + 219 * OS1_S1 + 10) + alpha_Y * *(b + 219 * OS1_S1 + 11);
            *(b + 285 * OS1_S1 + 10) = Z_PA * *(b + 219 * OS1_S1 + 10) + alpha_Z * *(b + 219 * OS1_S1 + 11) + 9 * one_over_two_p * (*(b + 164 * OS1_S1 + 10) - alpha_over_p * *(b + 164 * OS1_S1 + 11));
            *(b + 286 * OS1_S1 + 9) = X_PA * *(b + 220 * OS1_S1 + 9) + alpha_X * *(b + 220 * OS1_S1 + 10) + 10 * one_over_two_p * (*(b + 165 * OS1_S1 + 9) - alpha_over_p * *(b + 165 * OS1_S1 + 10));
            *(b + 287 * OS1_S1 + 9) = Y_PA * *(b + 220 * OS1_S1 + 9) + alpha_Y * *(b + 220 * OS1_S1 + 10);
            *(b + 288 * OS1_S1 + 9) = Z_PA * *(b + 220 * OS1_S1 + 9) + alpha_Z * *(b + 220 * OS1_S1 + 10);
            *(b + 289 * OS1_S1 + 9) = Y_PA * *(b + 221 * OS1_S1 + 9) + alpha_Y * *(b + 221 * OS1_S1 + 10) + one_over_two_p * (*(b + 165 * OS1_S1 + 9) - alpha_over_p * *(b + 165 * OS1_S1 + 10));
            *(b + 291 * OS1_S1 + 9) = Z_PA * *(b + 222 * OS1_S1 + 9) + alpha_Z * *(b + 222 * OS1_S1 + 10) + one_over_two_p * (*(b + 165 * OS1_S1 + 9) - alpha_over_p * *(b + 165 * OS1_S1 + 10));
            *(b + 292 * OS1_S1 + 9) = Y_PA * *(b + 223 * OS1_S1 + 9) + alpha_Y * *(b + 223 * OS1_S1 + 10) + 2 * one_over_two_p * (*(b + 166 * OS1_S1 + 9) - alpha_over_p * *(b + 166 * OS1_S1 + 10));
            *(b + 295 * OS1_S1 + 9) = Z_PA * *(b + 225 * OS1_S1 + 9) + alpha_Z * *(b + 225 * OS1_S1 + 10) + 2 * one_over_two_p * (*(b + 167 * OS1_S1 + 9) - alpha_over_p * *(b + 167 * OS1_S1 + 10));
            *(b + 296 * OS1_S1 + 9) = Y_PA * *(b + 226 * OS1_S1 + 9) + alpha_Y * *(b + 226 * OS1_S1 + 10) + 3 * one_over_two_p * (*(b + 168 * OS1_S1 + 9) - alpha_over_p * *(b + 168 * OS1_S1 + 10));
            *(b + 300 * OS1_S1 + 9) = Z_PA * *(b + 229 * OS1_S1 + 9) + alpha_Z * *(b + 229 * OS1_S1 + 10) + 3 * one_over_two_p * (*(b + 170 * OS1_S1 + 9) - alpha_over_p * *(b + 170 * OS1_S1 + 10));
            *(b + 322 * OS1_S1 + 9) = X_PA * *(b + 256 * OS1_S1 + 9) + alpha_X * *(b + 256 * OS1_S1 + 10) + 2 * one_over_two_p * (*(b + 201 * OS1_S1 + 9) - alpha_over_p * *(b + 201 * OS1_S1 + 10));
            *(b + 330 * OS1_S1 + 9) = X_PA * *(b + 264 * OS1_S1 + 9) + alpha_X * *(b + 264 * OS1_S1 + 10) + 2 * one_over_two_p * (*(b + 209 * OS1_S1 + 9) - alpha_over_p * *(b + 209 * OS1_S1 + 10));
            *(b + 331 * OS1_S1 + 9) = X_PA * *(b + 265 * OS1_S1 + 9) + alpha_X * *(b + 265 * OS1_S1 + 10) + one_over_two_p * (*(b + 210 * OS1_S1 + 9) - alpha_over_p * *(b + 210 * OS1_S1 + 10));
            *(b + 340 * OS1_S1 + 9) = X_PA * *(b + 274 * OS1_S1 + 9) + alpha_X * *(b + 274 * OS1_S1 + 10) + one_over_two_p * (*(b + 219 * OS1_S1 + 9) - alpha_over_p * *(b + 219 * OS1_S1 + 10));
            *(b + 341 * OS1_S1 + 9) = X_PA * *(b + 275 * OS1_S1 + 9) + alpha_X * *(b + 275 * OS1_S1 + 10);
            *(b + 351 * OS1_S1 + 9) = X_PA * *(b + 285 * OS1_S1 + 9) + alpha_X * *(b + 285 * OS1_S1 + 10);
            *(b + 352 * OS1_S1 + 9) = Y_PA * *(b + 275 * OS1_S1 + 9) + alpha_Y * *(b + 275 * OS1_S1 + 10) + 10 * one_over_two_p * (*(b + 210 * OS1_S1 + 9) - alpha_over_p * *(b + 210 * OS1_S1 + 10));
            *(b + 353 * OS1_S1 + 9) = Z_PA * *(b + 275 * OS1_S1 + 9) + alpha_Z * *(b + 275 * OS1_S1 + 10);
            *(b + 354 * OS1_S1 + 9) = Z_PA * *(b + 276 * OS1_S1 + 9) + alpha_Z * *(b + 276 * OS1_S1 + 10) + one_over_two_p * (*(b + 210 * OS1_S1 + 9) - alpha_over_p * *(b + 210 * OS1_S1 + 10));
            *(b + 355 * OS1_S1 + 9) = Z_PA * *(b + 277 * OS1_S1 + 9) + alpha_Z * *(b + 277 * OS1_S1 + 10) + 2 * one_over_two_p * (*(b + 211 * OS1_S1 + 9) - alpha_over_p * *(b + 211 * OS1_S1 + 10));
            *(b + 356 * OS1_S1 + 9) = Z_PA * *(b + 278 * OS1_S1 + 9) + alpha_Z * *(b + 278 * OS1_S1 + 10) + 3 * one_over_two_p * (*(b + 212 * OS1_S1 + 9) - alpha_over_p * *(b + 212 * OS1_S1 + 10));
            *(b + 360 * OS1_S1 + 9) = Y_PA * *(b + 283 * OS1_S1 + 9) + alpha_Y * *(b + 283 * OS1_S1 + 10) + 2 * one_over_two_p * (*(b + 218 * OS1_S1 + 9) - alpha_over_p * *(b + 218 * OS1_S1 + 10));
            *(b + 361 * OS1_S1 + 9) = Y_PA * *(b + 284 * OS1_S1 + 9) + alpha_Y * *(b + 284 * OS1_S1 + 10) + one_over_two_p * (*(b + 219 * OS1_S1 + 9) - alpha_over_p * *(b + 219 * OS1_S1 + 10));
            *(b + 362 * OS1_S1 + 9) = Y_PA * *(b + 285 * OS1_S1 + 9) + alpha_Y * *(b + 285 * OS1_S1 + 10);
            *(b + 363 * OS1_S1 + 9) = Z_PA * *(b + 285 * OS1_S1 + 9) + alpha_Z * *(b + 285 * OS1_S1 + 10) + 10 * one_over_two_p * (*(b + 219 * OS1_S1 + 9) - alpha_over_p * *(b + 219 * OS1_S1 + 10));
            *(b + 364 * OS1_S1 + 8) = X_PA * *(b + 286 * OS1_S1 + 8) + alpha_X * *(b + 286 * OS1_S1 + 9) + 11 * one_over_two_p * (*(b + 220 * OS1_S1 + 8) - alpha_over_p * *(b + 220 * OS1_S1 + 9));
            *(b + 365 * OS1_S1 + 8) = Y_PA * *(b + 286 * OS1_S1 + 8) + alpha_Y * *(b + 286 * OS1_S1 + 9);
            *(b + 366 * OS1_S1 + 8) = Z_PA * *(b + 286 * OS1_S1 + 8) + alpha_Z * *(b + 286 * OS1_S1 + 9);
            *(b + 367 * OS1_S1 + 8) = Y_PA * *(b + 287 * OS1_S1 + 8) + alpha_Y * *(b + 287 * OS1_S1 + 9) + one_over_two_p * (*(b + 220 * OS1_S1 + 8) - alpha_over_p * *(b + 220 * OS1_S1 + 9));
            *(b + 369 * OS1_S1 + 8) = Z_PA * *(b + 288 * OS1_S1 + 8) + alpha_Z * *(b + 288 * OS1_S1 + 9) + one_over_two_p * (*(b + 220 * OS1_S1 + 8) - alpha_over_p * *(b + 220 * OS1_S1 + 9));
            *(b + 370 * OS1_S1 + 8) = Y_PA * *(b + 289 * OS1_S1 + 8) + alpha_Y * *(b + 289 * OS1_S1 + 9) + 2 * one_over_two_p * (*(b + 221 * OS1_S1 + 8) - alpha_over_p * *(b + 221 * OS1_S1 + 9));
            *(b + 373 * OS1_S1 + 8) = Z_PA * *(b + 291 * OS1_S1 + 8) + alpha_Z * *(b + 291 * OS1_S1 + 9) + 2 * one_over_two_p * (*(b + 222 * OS1_S1 + 8) - alpha_over_p * *(b + 222 * OS1_S1 + 9));
            *(b + 374 * OS1_S1 + 8) = Y_PA * *(b + 292 * OS1_S1 + 8) + alpha_Y * *(b + 292 * OS1_S1 + 9) + 3 * one_over_two_p * (*(b + 223 * OS1_S1 + 8) - alpha_over_p * *(b + 223 * OS1_S1 + 9));
            *(b + 378 * OS1_S1 + 8) = Z_PA * *(b + 295 * OS1_S1 + 8) + alpha_Z * *(b + 295 * OS1_S1 + 9) + 3 * one_over_two_p * (*(b + 225 * OS1_S1 + 8) - alpha_over_p * *(b + 225 * OS1_S1 + 9));
            *(b + 379 * OS1_S1 + 8) = Y_PA * *(b + 296 * OS1_S1 + 8) + alpha_Y * *(b + 296 * OS1_S1 + 9) + 4 * one_over_two_p * (*(b + 226 * OS1_S1 + 8) - alpha_over_p * *(b + 226 * OS1_S1 + 9));
            *(b + 384 * OS1_S1 + 8) = Z_PA * *(b + 300 * OS1_S1 + 8) + alpha_Z * *(b + 300 * OS1_S1 + 9) + 4 * one_over_two_p * (*(b + 229 * OS1_S1 + 8) - alpha_over_p * *(b + 229 * OS1_S1 + 9));
            *(b + 400 * OS1_S1 + 8) = X_PA * *(b + 322 * OS1_S1 + 8) + alpha_X * *(b + 322 * OS1_S1 + 9) + 3 * one_over_two_p * (*(b + 256 * OS1_S1 + 8) - alpha_over_p * *(b + 256 * OS1_S1 + 9));
            *(b + 408 * OS1_S1 + 8) = X_PA * *(b + 330 * OS1_S1 + 8) + alpha_X * *(b + 330 * OS1_S1 + 9) + 3 * one_over_two_p * (*(b + 264 * OS1_S1 + 8) - alpha_over_p * *(b + 264 * OS1_S1 + 9));
            *(b + 409 * OS1_S1 + 8) = X_PA * *(b + 331 * OS1_S1 + 8) + alpha_X * *(b + 331 * OS1_S1 + 9) + 2 * one_over_two_p * (*(b + 265 * OS1_S1 + 8) - alpha_over_p * *(b + 265 * OS1_S1 + 9));
            *(b + 418 * OS1_S1 + 8) = X_PA * *(b + 340 * OS1_S1 + 8) + alpha_X * *(b + 340 * OS1_S1 + 9) + 2 * one_over_two_p * (*(b + 274 * OS1_S1 + 8) - alpha_over_p * *(b + 274 * OS1_S1 + 9));
            *(b + 419 * OS1_S1 + 8) = X_PA * *(b + 341 * OS1_S1 + 8) + alpha_X * *(b + 341 * OS1_S1 + 9) + one_over_two_p * (*(b + 275 * OS1_S1 + 8) - alpha_over_p * *(b + 275 * OS1_S1 + 9));
            *(b + 429 * OS1_S1 + 8) = X_PA * *(b + 351 * OS1_S1 + 8) + alpha_X * *(b + 351 * OS1_S1 + 9) + one_over_two_p * (*(b + 285 * OS1_S1 + 8) - alpha_over_p * *(b + 285 * OS1_S1 + 9));
            *(b + 430 * OS1_S1 + 8) = X_PA * *(b + 352 * OS1_S1 + 8) + alpha_X * *(b + 352 * OS1_S1 + 9);
            *(b + 441 * OS1_S1 + 8) = X_PA * *(b + 363 * OS1_S1 + 8) + alpha_X * *(b + 363 * OS1_S1 + 9);
            *(b + 442 * OS1_S1 + 8) = Y_PA * *(b + 352 * OS1_S1 + 8) + alpha_Y * *(b + 352 * OS1_S1 + 9) + 11 * one_over_two_p * (*(b + 275 * OS1_S1 + 8) - alpha_over_p * *(b + 275 * OS1_S1 + 9));
            *(b + 443 * OS1_S1 + 8) = Z_PA * *(b + 352 * OS1_S1 + 8) + alpha_Z * *(b + 352 * OS1_S1 + 9);
            *(b + 444 * OS1_S1 + 8) = Z_PA * *(b + 353 * OS1_S1 + 8) + alpha_Z * *(b + 353 * OS1_S1 + 9) + one_over_two_p * (*(b + 275 * OS1_S1 + 8) - alpha_over_p * *(b + 275 * OS1_S1 + 9));
            *(b + 445 * OS1_S1 + 8) = Z_PA * *(b + 354 * OS1_S1 + 8) + alpha_Z * *(b + 354 * OS1_S1 + 9) + 2 * one_over_two_p * (*(b + 276 * OS1_S1 + 8) - alpha_over_p * *(b + 276 * OS1_S1 + 9));
            *(b + 446 * OS1_S1 + 8) = Z_PA * *(b + 355 * OS1_S1 + 8) + alpha_Z * *(b + 355 * OS1_S1 + 9) + 3 * one_over_two_p * (*(b + 277 * OS1_S1 + 8) - alpha_over_p * *(b + 277 * OS1_S1 + 9));
            *(b + 447 * OS1_S1 + 8) = Z_PA * *(b + 356 * OS1_S1 + 8) + alpha_Z * *(b + 356 * OS1_S1 + 9) + 4 * one_over_two_p * (*(b + 278 * OS1_S1 + 8) - alpha_over_p * *(b + 278 * OS1_S1 + 9));
            *(b + 450 * OS1_S1 + 8) = Y_PA * *(b + 360 * OS1_S1 + 8) + alpha_Y * *(b + 360 * OS1_S1 + 9) + 3 * one_over_two_p * (*(b + 283 * OS1_S1 + 8) - alpha_over_p * *(b + 283 * OS1_S1 + 9));
            *(b + 451 * OS1_S1 + 8) = Y_PA * *(b + 361 * OS1_S1 + 8) + alpha_Y * *(b + 361 * OS1_S1 + 9) + 2 * one_over_two_p * (*(b + 284 * OS1_S1 + 8) - alpha_over_p * *(b + 284 * OS1_S1 + 9));
            *(b + 452 * OS1_S1 + 8) = Y_PA * *(b + 362 * OS1_S1 + 8) + alpha_Y * *(b + 362 * OS1_S1 + 9) + one_over_two_p * (*(b + 285 * OS1_S1 + 8) - alpha_over_p * *(b + 285 * OS1_S1 + 9));
            *(b + 453 * OS1_S1 + 8) = Y_PA * *(b + 363 * OS1_S1 + 8) + alpha_Y * *(b + 363 * OS1_S1 + 9);
            *(b + 454 * OS1_S1 + 8) = Z_PA * *(b + 363 * OS1_S1 + 8) + alpha_Z * *(b + 363 * OS1_S1 + 9) + 11 * one_over_two_p * (*(b + 285 * OS1_S1 + 8) - alpha_over_p * *(b + 285 * OS1_S1 + 9));
            *(b + 455 * OS1_S1 + 7) = X_PA * *(b + 364 * OS1_S1 + 7) + alpha_X * *(b + 364 * OS1_S1 + 8) + 12 * one_over_two_p * (*(b + 286 * OS1_S1 + 7) - alpha_over_p * *(b + 286 * OS1_S1 + 8));
            *(b + 456 * OS1_S1 + 7) = Y_PA * *(b + 364 * OS1_S1 + 7) + alpha_Y * *(b + 364 * OS1_S1 + 8);
            *(b + 457 * OS1_S1 + 7) = Z_PA * *(b + 364 * OS1_S1 + 7) + alpha_Z * *(b + 364 * OS1_S1 + 8);
            *(b + 458 * OS1_S1 + 7) = Y_PA * *(b + 365 * OS1_S1 + 7) + alpha_Y * *(b + 365 * OS1_S1 + 8) + one_over_two_p * (*(b + 286 * OS1_S1 + 7) - alpha_over_p * *(b + 286 * OS1_S1 + 8));
            *(b + 460 * OS1_S1 + 7) = Z_PA * *(b + 366 * OS1_S1 + 7) + alpha_Z * *(b + 366 * OS1_S1 + 8) + one_over_two_p * (*(b + 286 * OS1_S1 + 7) - alpha_over_p * *(b + 286 * OS1_S1 + 8));
            *(b + 461 * OS1_S1 + 7) = Y_PA * *(b + 367 * OS1_S1 + 7) + alpha_Y * *(b + 367 * OS1_S1 + 8) + 2 * one_over_two_p * (*(b + 287 * OS1_S1 + 7) - alpha_over_p * *(b + 287 * OS1_S1 + 8));
            *(b + 464 * OS1_S1 + 7) = Z_PA * *(b + 369 * OS1_S1 + 7) + alpha_Z * *(b + 369 * OS1_S1 + 8) + 2 * one_over_two_p * (*(b + 288 * OS1_S1 + 7) - alpha_over_p * *(b + 288 * OS1_S1 + 8));
            *(b + 465 * OS1_S1 + 7) = Y_PA * *(b + 370 * OS1_S1 + 7) + alpha_Y * *(b + 370 * OS1_S1 + 8) + 3 * one_over_two_p * (*(b + 289 * OS1_S1 + 7) - alpha_over_p * *(b + 289 * OS1_S1 + 8));
            *(b + 469 * OS1_S1 + 7) = Z_PA * *(b + 373 * OS1_S1 + 7) + alpha_Z * *(b + 373 * OS1_S1 + 8) + 3 * one_over_two_p * (*(b + 291 * OS1_S1 + 7) - alpha_over_p * *(b + 291 * OS1_S1 + 8));
            *(b + 470 * OS1_S1 + 7) = Y_PA * *(b + 374 * OS1_S1 + 7) + alpha_Y * *(b + 374 * OS1_S1 + 8) + 4 * one_over_two_p * (*(b + 292 * OS1_S1 + 7) - alpha_over_p * *(b + 292 * OS1_S1 + 8));
            *(b + 475 * OS1_S1 + 7) = Z_PA * *(b + 378 * OS1_S1 + 7) + alpha_Z * *(b + 378 * OS1_S1 + 8) + 4 * one_over_two_p * (*(b + 295 * OS1_S1 + 7) - alpha_over_p * *(b + 295 * OS1_S1 + 8));
            *(b + 476 * OS1_S1 + 7) = Y_PA * *(b + 379 * OS1_S1 + 7) + alpha_Y * *(b + 379 * OS1_S1 + 8) + 5 * one_over_two_p * (*(b + 296 * OS1_S1 + 7) - alpha_over_p * *(b + 296 * OS1_S1 + 8));
            *(b + 482 * OS1_S1 + 7) = Z_PA * *(b + 384 * OS1_S1 + 7) + alpha_Z * *(b + 384 * OS1_S1 + 8) + 5 * one_over_two_p * (*(b + 300 * OS1_S1 + 7) - alpha_over_p * *(b + 300 * OS1_S1 + 8));
            *(b + 491 * OS1_S1 + 7) = X_PA * *(b + 400 * OS1_S1 + 7) + alpha_X * *(b + 400 * OS1_S1 + 8) + 4 * one_over_two_p * (*(b + 322 * OS1_S1 + 7) - alpha_over_p * *(b + 322 * OS1_S1 + 8));
            *(b + 499 * OS1_S1 + 7) = X_PA * *(b + 408 * OS1_S1 + 7) + alpha_X * *(b + 408 * OS1_S1 + 8) + 4 * one_over_two_p * (*(b + 330 * OS1_S1 + 7) - alpha_over_p * *(b + 330 * OS1_S1 + 8));
            *(b + 500 * OS1_S1 + 7) = X_PA * *(b + 409 * OS1_S1 + 7) + alpha_X * *(b + 409 * OS1_S1 + 8) + 3 * one_over_two_p * (*(b + 331 * OS1_S1 + 7) - alpha_over_p * *(b + 331 * OS1_S1 + 8));
            *(b + 509 * OS1_S1 + 7) = X_PA * *(b + 418 * OS1_S1 + 7) + alpha_X * *(b + 418 * OS1_S1 + 8) + 3 * one_over_two_p * (*(b + 340 * OS1_S1 + 7) - alpha_over_p * *(b + 340 * OS1_S1 + 8));
            *(b + 510 * OS1_S1 + 7) = X_PA * *(b + 419 * OS1_S1 + 7) + alpha_X * *(b + 419 * OS1_S1 + 8) + 2 * one_over_two_p * (*(b + 341 * OS1_S1 + 7) - alpha_over_p * *(b + 341 * OS1_S1 + 8));
            *(b + 520 * OS1_S1 + 7) = X_PA * *(b + 429 * OS1_S1 + 7) + alpha_X * *(b + 429 * OS1_S1 + 8) + 2 * one_over_two_p * (*(b + 351 * OS1_S1 + 7) - alpha_over_p * *(b + 351 * OS1_S1 + 8));
            *(b + 521 * OS1_S1 + 7) = X_PA * *(b + 430 * OS1_S1 + 7) + alpha_X * *(b + 430 * OS1_S1 + 8) + one_over_two_p * (*(b + 352 * OS1_S1 + 7) - alpha_over_p * *(b + 352 * OS1_S1 + 8));
            *(b + 532 * OS1_S1 + 7) = X_PA * *(b + 441 * OS1_S1 + 7) + alpha_X * *(b + 441 * OS1_S1 + 8) + one_over_two_p * (*(b + 363 * OS1_S1 + 7) - alpha_over_p * *(b + 363 * OS1_S1 + 8));
            *(b + 533 * OS1_S1 + 7) = X_PA * *(b + 442 * OS1_S1 + 7) + alpha_X * *(b + 442 * OS1_S1 + 8);
            *(b + 545 * OS1_S1 + 7) = X_PA * *(b + 454 * OS1_S1 + 7) + alpha_X * *(b + 454 * OS1_S1 + 8);
            *(b + 546 * OS1_S1 + 7) = Y_PA * *(b + 442 * OS1_S1 + 7) + alpha_Y * *(b + 442 * OS1_S1 + 8) + 12 * one_over_two_p * (*(b + 352 * OS1_S1 + 7) - alpha_over_p * *(b + 352 * OS1_S1 + 8));
            *(b + 547 * OS1_S1 + 7) = Z_PA * *(b + 442 * OS1_S1 + 7) + alpha_Z * *(b + 442 * OS1_S1 + 8);
            *(b + 548 * OS1_S1 + 7) = Z_PA * *(b + 443 * OS1_S1 + 7) + alpha_Z * *(b + 443 * OS1_S1 + 8) + one_over_two_p * (*(b + 352 * OS1_S1 + 7) - alpha_over_p * *(b + 352 * OS1_S1 + 8));
            *(b + 549 * OS1_S1 + 7) = Z_PA * *(b + 444 * OS1_S1 + 7) + alpha_Z * *(b + 444 * OS1_S1 + 8) + 2 * one_over_two_p * (*(b + 353 * OS1_S1 + 7) - alpha_over_p * *(b + 353 * OS1_S1 + 8));
            *(b + 550 * OS1_S1 + 7) = Z_PA * *(b + 445 * OS1_S1 + 7) + alpha_Z * *(b + 445 * OS1_S1 + 8) + 3 * one_over_two_p * (*(b + 354 * OS1_S1 + 7) - alpha_over_p * *(b + 354 * OS1_S1 + 8));
            *(b + 551 * OS1_S1 + 7) = Z_PA * *(b + 446 * OS1_S1 + 7) + alpha_Z * *(b + 446 * OS1_S1 + 8) + 4 * one_over_two_p * (*(b + 355 * OS1_S1 + 7) - alpha_over_p * *(b + 355 * OS1_S1 + 8));
            *(b + 552 * OS1_S1 + 7) = Z_PA * *(b + 447 * OS1_S1 + 7) + alpha_Z * *(b + 447 * OS1_S1 + 8) + 5 * one_over_two_p * (*(b + 356 * OS1_S1 + 7) - alpha_over_p * *(b + 356 * OS1_S1 + 8));
            *(b + 554 * OS1_S1 + 7) = Y_PA * *(b + 450 * OS1_S1 + 7) + alpha_Y * *(b + 450 * OS1_S1 + 8) + 4 * one_over_two_p * (*(b + 360 * OS1_S1 + 7) - alpha_over_p * *(b + 360 * OS1_S1 + 8));
            *(b + 555 * OS1_S1 + 7) = Y_PA * *(b + 451 * OS1_S1 + 7) + alpha_Y * *(b + 451 * OS1_S1 + 8) + 3 * one_over_two_p * (*(b + 361 * OS1_S1 + 7) - alpha_over_p * *(b + 361 * OS1_S1 + 8));
            *(b + 556 * OS1_S1 + 7) = Y_PA * *(b + 452 * OS1_S1 + 7) + alpha_Y * *(b + 452 * OS1_S1 + 8) + 2 * one_over_two_p * (*(b + 362 * OS1_S1 + 7) - alpha_over_p * *(b + 362 * OS1_S1 + 8));
            *(b + 557 * OS1_S1 + 7) = Y_PA * *(b + 453 * OS1_S1 + 7) + alpha_Y * *(b + 453 * OS1_S1 + 8) + one_over_two_p * (*(b + 363 * OS1_S1 + 7) - alpha_over_p * *(b + 363 * OS1_S1 + 8));
            *(b + 558 * OS1_S1 + 7) = Y_PA * *(b + 454 * OS1_S1 + 7) + alpha_Y * *(b + 454 * OS1_S1 + 8);
            *(b + 559 * OS1_S1 + 7) = Z_PA * *(b + 454 * OS1_S1 + 7) + alpha_Z * *(b + 454 * OS1_S1 + 8) + 12 * one_over_two_p * (*(b + 363 * OS1_S1 + 7) - alpha_over_p * *(b + 363 * OS1_S1 + 8));
            *(b + 560 * OS1_S1 + 6) = X_PA * *(b + 455 * OS1_S1 + 6) + alpha_X * *(b + 455 * OS1_S1 + 7) + 13 * one_over_two_p * (*(b + 364 * OS1_S1 + 6) - alpha_over_p * *(b + 364 * OS1_S1 + 7));
            *(b + 561 * OS1_S1 + 6) = Y_PA * *(b + 455 * OS1_S1 + 6) + alpha_Y * *(b + 455 * OS1_S1 + 7);
            *(b + 562 * OS1_S1 + 6) = Z_PA * *(b + 455 * OS1_S1 + 6) + alpha_Z * *(b + 455 * OS1_S1 + 7);
            *(b + 563 * OS1_S1 + 6) = Y_PA * *(b + 456 * OS1_S1 + 6) + alpha_Y * *(b + 456 * OS1_S1 + 7) + one_over_two_p * (*(b + 364 * OS1_S1 + 6) - alpha_over_p * *(b + 364 * OS1_S1 + 7));
            *(b + 565 * OS1_S1 + 6) = Z_PA * *(b + 457 * OS1_S1 + 6) + alpha_Z * *(b + 457 * OS1_S1 + 7) + one_over_two_p * (*(b + 364 * OS1_S1 + 6) - alpha_over_p * *(b + 364 * OS1_S1 + 7));
            *(b + 566 * OS1_S1 + 6) = Y_PA * *(b + 458 * OS1_S1 + 6) + alpha_Y * *(b + 458 * OS1_S1 + 7) + 2 * one_over_two_p * (*(b + 365 * OS1_S1 + 6) - alpha_over_p * *(b + 365 * OS1_S1 + 7));
            *(b + 569 * OS1_S1 + 6) = Z_PA * *(b + 460 * OS1_S1 + 6) + alpha_Z * *(b + 460 * OS1_S1 + 7) + 2 * one_over_two_p * (*(b + 366 * OS1_S1 + 6) - alpha_over_p * *(b + 366 * OS1_S1 + 7));
            *(b + 570 * OS1_S1 + 6) = Y_PA * *(b + 461 * OS1_S1 + 6) + alpha_Y * *(b + 461 * OS1_S1 + 7) + 3 * one_over_two_p * (*(b + 367 * OS1_S1 + 6) - alpha_over_p * *(b + 367 * OS1_S1 + 7));
            *(b + 574 * OS1_S1 + 6) = Z_PA * *(b + 464 * OS1_S1 + 6) + alpha_Z * *(b + 464 * OS1_S1 + 7) + 3 * one_over_two_p * (*(b + 369 * OS1_S1 + 6) - alpha_over_p * *(b + 369 * OS1_S1 + 7));
            *(b + 575 * OS1_S1 + 6) = Y_PA * *(b + 465 * OS1_S1 + 6) + alpha_Y * *(b + 465 * OS1_S1 + 7) + 4 * one_over_two_p * (*(b + 370 * OS1_S1 + 6) - alpha_over_p * *(b + 370 * OS1_S1 + 7));
            *(b + 580 * OS1_S1 + 6) = Z_PA * *(b + 469 * OS1_S1 + 6) + alpha_Z * *(b + 469 * OS1_S1 + 7) + 4 * one_over_two_p * (*(b + 373 * OS1_S1 + 6) - alpha_over_p * *(b + 373 * OS1_S1 + 7));
            *(b + 581 * OS1_S1 + 6) = Y_PA * *(b + 470 * OS1_S1 + 6) + alpha_Y * *(b + 470 * OS1_S1 + 7) + 5 * one_over_two_p * (*(b + 374 * OS1_S1 + 6) - alpha_over_p * *(b + 374 * OS1_S1 + 7));
            *(b + 587 * OS1_S1 + 6) = Z_PA * *(b + 475 * OS1_S1 + 6) + alpha_Z * *(b + 475 * OS1_S1 + 7) + 5 * one_over_two_p * (*(b + 378 * OS1_S1 + 6) - alpha_over_p * *(b + 378 * OS1_S1 + 7));
            *(b + 588 * OS1_S1 + 6) = Y_PA * *(b + 476 * OS1_S1 + 6) + alpha_Y * *(b + 476 * OS1_S1 + 7) + 6 * one_over_two_p * (*(b + 379 * OS1_S1 + 6) - alpha_over_p * *(b + 379 * OS1_S1 + 7));
            *(b + 595 * OS1_S1 + 6) = Z_PA * *(b + 482 * OS1_S1 + 6) + alpha_Z * *(b + 482 * OS1_S1 + 7) + 6 * one_over_two_p * (*(b + 384 * OS1_S1 + 6) - alpha_over_p * *(b + 384 * OS1_S1 + 7));
            *(b + 596 * OS1_S1 + 6) = X_PA * *(b + 491 * OS1_S1 + 6) + alpha_X * *(b + 491 * OS1_S1 + 7) + 5 * one_over_two_p * (*(b + 400 * OS1_S1 + 6) - alpha_over_p * *(b + 400 * OS1_S1 + 7));
            *(b + 604 * OS1_S1 + 6) = X_PA * *(b + 499 * OS1_S1 + 6) + alpha_X * *(b + 499 * OS1_S1 + 7) + 5 * one_over_two_p * (*(b + 408 * OS1_S1 + 6) - alpha_over_p * *(b + 408 * OS1_S1 + 7));
            *(b + 605 * OS1_S1 + 6) = X_PA * *(b + 500 * OS1_S1 + 6) + alpha_X * *(b + 500 * OS1_S1 + 7) + 4 * one_over_two_p * (*(b + 409 * OS1_S1 + 6) - alpha_over_p * *(b + 409 * OS1_S1 + 7));
            *(b + 614 * OS1_S1 + 6) = X_PA * *(b + 509 * OS1_S1 + 6) + alpha_X * *(b + 509 * OS1_S1 + 7) + 4 * one_over_two_p * (*(b + 418 * OS1_S1 + 6) - alpha_over_p * *(b + 418 * OS1_S1 + 7));
            *(b + 615 * OS1_S1 + 6) = X_PA * *(b + 510 * OS1_S1 + 6) + alpha_X * *(b + 510 * OS1_S1 + 7) + 3 * one_over_two_p * (*(b + 419 * OS1_S1 + 6) - alpha_over_p * *(b + 419 * OS1_S1 + 7));
            *(b + 625 * OS1_S1 + 6) = X_PA * *(b + 520 * OS1_S1 + 6) + alpha_X * *(b + 520 * OS1_S1 + 7) + 3 * one_over_two_p * (*(b + 429 * OS1_S1 + 6) - alpha_over_p * *(b + 429 * OS1_S1 + 7));
            *(b + 626 * OS1_S1 + 6) = X_PA * *(b + 521 * OS1_S1 + 6) + alpha_X * *(b + 521 * OS1_S1 + 7) + 2 * one_over_two_p * (*(b + 430 * OS1_S1 + 6) - alpha_over_p * *(b + 430 * OS1_S1 + 7));
            *(b + 637 * OS1_S1 + 6) = X_PA * *(b + 532 * OS1_S1 + 6) + alpha_X * *(b + 532 * OS1_S1 + 7) + 2 * one_over_two_p * (*(b + 441 * OS1_S1 + 6) - alpha_over_p * *(b + 441 * OS1_S1 + 7));
            *(b + 638 * OS1_S1 + 6) = X_PA * *(b + 533 * OS1_S1 + 6) + alpha_X * *(b + 533 * OS1_S1 + 7) + one_over_two_p * (*(b + 442 * OS1_S1 + 6) - alpha_over_p * *(b + 442 * OS1_S1 + 7));
            *(b + 650 * OS1_S1 + 6) = X_PA * *(b + 545 * OS1_S1 + 6) + alpha_X * *(b + 545 * OS1_S1 + 7) + one_over_two_p * (*(b + 454 * OS1_S1 + 6) - alpha_over_p * *(b + 454 * OS1_S1 + 7));
            *(b + 651 * OS1_S1 + 6) = X_PA * *(b + 546 * OS1_S1 + 6) + alpha_X * *(b + 546 * OS1_S1 + 7);
            *(b + 664 * OS1_S1 + 6) = X_PA * *(b + 559 * OS1_S1 + 6) + alpha_X * *(b + 559 * OS1_S1 + 7);
            *(b + 665 * OS1_S1 + 6) = Y_PA * *(b + 546 * OS1_S1 + 6) + alpha_Y * *(b + 546 * OS1_S1 + 7) + 13 * one_over_two_p * (*(b + 442 * OS1_S1 + 6) - alpha_over_p * *(b + 442 * OS1_S1 + 7));
            *(b + 666 * OS1_S1 + 6) = Z_PA * *(b + 546 * OS1_S1 + 6) + alpha_Z * *(b + 546 * OS1_S1 + 7);
            *(b + 667 * OS1_S1 + 6) = Z_PA * *(b + 547 * OS1_S1 + 6) + alpha_Z * *(b + 547 * OS1_S1 + 7) + one_over_two_p * (*(b + 442 * OS1_S1 + 6) - alpha_over_p * *(b + 442 * OS1_S1 + 7));
            *(b + 668 * OS1_S1 + 6) = Z_PA * *(b + 548 * OS1_S1 + 6) + alpha_Z * *(b + 548 * OS1_S1 + 7) + 2 * one_over_two_p * (*(b + 443 * OS1_S1 + 6) - alpha_over_p * *(b + 443 * OS1_S1 + 7));
            *(b + 669 * OS1_S1 + 6) = Z_PA * *(b + 549 * OS1_S1 + 6) + alpha_Z * *(b + 549 * OS1_S1 + 7) + 3 * one_over_two_p * (*(b + 444 * OS1_S1 + 6) - alpha_over_p * *(b + 444 * OS1_S1 + 7));
            *(b + 670 * OS1_S1 + 6) = Z_PA * *(b + 550 * OS1_S1 + 6) + alpha_Z * *(b + 550 * OS1_S1 + 7) + 4 * one_over_two_p * (*(b + 445 * OS1_S1 + 6) - alpha_over_p * *(b + 445 * OS1_S1 + 7));
            *(b + 671 * OS1_S1 + 6) = Z_PA * *(b + 551 * OS1_S1 + 6) + alpha_Z * *(b + 551 * OS1_S1 + 7) + 5 * one_over_two_p * (*(b + 446 * OS1_S1 + 6) - alpha_over_p * *(b + 446 * OS1_S1 + 7));
            *(b + 672 * OS1_S1 + 6) = Z_PA * *(b + 552 * OS1_S1 + 6) + alpha_Z * *(b + 552 * OS1_S1 + 7) + 6 * one_over_two_p * (*(b + 447 * OS1_S1 + 6) - alpha_over_p * *(b + 447 * OS1_S1 + 7));
            *(b + 673 * OS1_S1 + 6) = Y_PA * *(b + 554 * OS1_S1 + 6) + alpha_Y * *(b + 554 * OS1_S1 + 7) + 5 * one_over_two_p * (*(b + 450 * OS1_S1 + 6) - alpha_over_p * *(b + 450 * OS1_S1 + 7));
            *(b + 674 * OS1_S1 + 6) = Y_PA * *(b + 555 * OS1_S1 + 6) + alpha_Y * *(b + 555 * OS1_S1 + 7) + 4 * one_over_two_p * (*(b + 451 * OS1_S1 + 6) - alpha_over_p * *(b + 451 * OS1_S1 + 7));
            *(b + 675 * OS1_S1 + 6) = Y_PA * *(b + 556 * OS1_S1 + 6) + alpha_Y * *(b + 556 * OS1_S1 + 7) + 3 * one_over_two_p * (*(b + 452 * OS1_S1 + 6) - alpha_over_p * *(b + 452 * OS1_S1 + 7));
            *(b + 676 * OS1_S1 + 6) = Y_PA * *(b + 557 * OS1_S1 + 6) + alpha_Y * *(b + 557 * OS1_S1 + 7) + 2 * one_over_two_p * (*(b + 453 * OS1_S1 + 6) - alpha_over_p * *(b + 453 * OS1_S1 + 7));
            *(b + 677 * OS1_S1 + 6) = Y_PA * *(b + 558 * OS1_S1 + 6) + alpha_Y * *(b + 558 * OS1_S1 + 7) + one_over_two_p * (*(b + 454 * OS1_S1 + 6) - alpha_over_p * *(b + 454 * OS1_S1 + 7));
            *(b + 678 * OS1_S1 + 6) = Y_PA * *(b + 559 * OS1_S1 + 6) + alpha_Y * *(b + 559 * OS1_S1 + 7);
            *(b + 679 * OS1_S1 + 6) = Z_PA * *(b + 559 * OS1_S1 + 6) + alpha_Z * *(b + 559 * OS1_S1 + 7) + 13 * one_over_two_p * (*(b + 454 * OS1_S1 + 6) - alpha_over_p * *(b + 454 * OS1_S1 + 7));
            *(b + 680 * OS1_S1 + 5) = X_PA * *(b + 560 * OS1_S1 + 5) + alpha_X * *(b + 560 * OS1_S1 + 6) + 14 * one_over_two_p * (*(b + 455 * OS1_S1 + 5) - alpha_over_p * *(b + 455 * OS1_S1 + 6));
            *(b + 681 * OS1_S1 + 5) = Y_PA * *(b + 560 * OS1_S1 + 5) + alpha_Y * *(b + 560 * OS1_S1 + 6);
            *(b + 682 * OS1_S1 + 5) = Z_PA * *(b + 560 * OS1_S1 + 5) + alpha_Z * *(b + 560 * OS1_S1 + 6);
            *(b + 683 * OS1_S1 + 5) = Y_PA * *(b + 561 * OS1_S1 + 5) + alpha_Y * *(b + 561 * OS1_S1 + 6) + one_over_two_p * (*(b + 455 * OS1_S1 + 5) - alpha_over_p * *(b + 455 * OS1_S1 + 6));
            *(b + 685 * OS1_S1 + 5) = Z_PA * *(b + 562 * OS1_S1 + 5) + alpha_Z * *(b + 562 * OS1_S1 + 6) + one_over_two_p * (*(b + 455 * OS1_S1 + 5) - alpha_over_p * *(b + 455 * OS1_S1 + 6));
            *(b + 686 * OS1_S1 + 5) = Y_PA * *(b + 563 * OS1_S1 + 5) + alpha_Y * *(b + 563 * OS1_S1 + 6) + 2 * one_over_two_p * (*(b + 456 * OS1_S1 + 5) - alpha_over_p * *(b + 456 * OS1_S1 + 6));
            *(b + 689 * OS1_S1 + 5) = Z_PA * *(b + 565 * OS1_S1 + 5) + alpha_Z * *(b + 565 * OS1_S1 + 6) + 2 * one_over_two_p * (*(b + 457 * OS1_S1 + 5) - alpha_over_p * *(b + 457 * OS1_S1 + 6));
            *(b + 690 * OS1_S1 + 5) = Y_PA * *(b + 566 * OS1_S1 + 5) + alpha_Y * *(b + 566 * OS1_S1 + 6) + 3 * one_over_two_p * (*(b + 458 * OS1_S1 + 5) - alpha_over_p * *(b + 458 * OS1_S1 + 6));
            *(b + 694 * OS1_S1 + 5) = Z_PA * *(b + 569 * OS1_S1 + 5) + alpha_Z * *(b + 569 * OS1_S1 + 6) + 3 * one_over_two_p * (*(b + 460 * OS1_S1 + 5) - alpha_over_p * *(b + 460 * OS1_S1 + 6));
            *(b + 695 * OS1_S1 + 5) = Y_PA * *(b + 570 * OS1_S1 + 5) + alpha_Y * *(b + 570 * OS1_S1 + 6) + 4 * one_over_two_p * (*(b + 461 * OS1_S1 + 5) - alpha_over_p * *(b + 461 * OS1_S1 + 6));
            *(b + 700 * OS1_S1 + 5) = Z_PA * *(b + 574 * OS1_S1 + 5) + alpha_Z * *(b + 574 * OS1_S1 + 6) + 4 * one_over_two_p * (*(b + 464 * OS1_S1 + 5) - alpha_over_p * *(b + 464 * OS1_S1 + 6));
            *(b + 701 * OS1_S1 + 5) = Y_PA * *(b + 575 * OS1_S1 + 5) + alpha_Y * *(b + 575 * OS1_S1 + 6) + 5 * one_over_two_p * (*(b + 465 * OS1_S1 + 5) - alpha_over_p * *(b + 465 * OS1_S1 + 6));
            *(b + 707 * OS1_S1 + 5) = Z_PA * *(b + 580 * OS1_S1 + 5) + alpha_Z * *(b + 580 * OS1_S1 + 6) + 5 * one_over_two_p * (*(b + 469 * OS1_S1 + 5) - alpha_over_p * *(b + 469 * OS1_S1 + 6));
            *(b + 708 * OS1_S1 + 5) = Y_PA * *(b + 581 * OS1_S1 + 5) + alpha_Y * *(b + 581 * OS1_S1 + 6) + 6 * one_over_two_p * (*(b + 470 * OS1_S1 + 5) - alpha_over_p * *(b + 470 * OS1_S1 + 6));
            *(b + 709 * OS1_S1 + 5) = Z_PA * *(b + 581 * OS1_S1 + 5) + alpha_Z * *(b + 581 * OS1_S1 + 6);
            *(b + 715 * OS1_S1 + 5) = Z_PA * *(b + 587 * OS1_S1 + 5) + alpha_Z * *(b + 587 * OS1_S1 + 6) + 6 * one_over_two_p * (*(b + 475 * OS1_S1 + 5) - alpha_over_p * *(b + 475 * OS1_S1 + 6));
            *(b + 716 * OS1_S1 + 5) = X_PA * *(b + 596 * OS1_S1 + 5) + alpha_X * *(b + 596 * OS1_S1 + 6) + 6 * one_over_two_p * (*(b + 491 * OS1_S1 + 5) - alpha_over_p * *(b + 491 * OS1_S1 + 6));
            *(b + 717 * OS1_S1 + 5) = Z_PA * *(b + 588 * OS1_S1 + 5) + alpha_Z * *(b + 588 * OS1_S1 + 6);
            *(b + 723 * OS1_S1 + 5) = Y_PA * *(b + 595 * OS1_S1 + 5) + alpha_Y * *(b + 595 * OS1_S1 + 6);
            *(b + 724 * OS1_S1 + 5) = X_PA * *(b + 604 * OS1_S1 + 5) + alpha_X * *(b + 604 * OS1_S1 + 6) + 6 * one_over_two_p * (*(b + 499 * OS1_S1 + 5) - alpha_over_p * *(b + 499 * OS1_S1 + 6));
            *(b + 725 * OS1_S1 + 5) = X_PA * *(b + 605 * OS1_S1 + 5) + alpha_X * *(b + 605 * OS1_S1 + 6) + 5 * one_over_two_p * (*(b + 500 * OS1_S1 + 5) - alpha_over_p * *(b + 500 * OS1_S1 + 6));
            *(b + 726 * OS1_S1 + 5) = Z_PA * *(b + 596 * OS1_S1 + 5) + alpha_Z * *(b + 596 * OS1_S1 + 6);
            *(b + 733 * OS1_S1 + 5) = Y_PA * *(b + 604 * OS1_S1 + 5) + alpha_Y * *(b + 604 * OS1_S1 + 6);
            *(b + 734 * OS1_S1 + 5) = X_PA * *(b + 614 * OS1_S1 + 5) + alpha_X * *(b + 614 * OS1_S1 + 6) + 5 * one_over_two_p * (*(b + 509 * OS1_S1 + 5) - alpha_over_p * *(b + 509 * OS1_S1 + 6));
            *(b + 735 * OS1_S1 + 5) = X_PA * *(b + 615 * OS1_S1 + 5) + alpha_X * *(b + 615 * OS1_S1 + 6) + 4 * one_over_two_p * (*(b + 510 * OS1_S1 + 5) - alpha_over_p * *(b + 510 * OS1_S1 + 6));
            *(b + 745 * OS1_S1 + 5) = X_PA * *(b + 625 * OS1_S1 + 5) + alpha_X * *(b + 625 * OS1_S1 + 6) + 4 * one_over_two_p * (*(b + 520 * OS1_S1 + 5) - alpha_over_p * *(b + 520 * OS1_S1 + 6));
            *(b + 746 * OS1_S1 + 5) = X_PA * *(b + 626 * OS1_S1 + 5) + alpha_X * *(b + 626 * OS1_S1 + 6) + 3 * one_over_two_p * (*(b + 521 * OS1_S1 + 5) - alpha_over_p * *(b + 521 * OS1_S1 + 6));
            *(b + 757 * OS1_S1 + 5) = X_PA * *(b + 637 * OS1_S1 + 5) + alpha_X * *(b + 637 * OS1_S1 + 6) + 3 * one_over_two_p * (*(b + 532 * OS1_S1 + 5) - alpha_over_p * *(b + 532 * OS1_S1 + 6));
            *(b + 758 * OS1_S1 + 5) = X_PA * *(b + 638 * OS1_S1 + 5) + alpha_X * *(b + 638 * OS1_S1 + 6) + 2 * one_over_two_p * (*(b + 533 * OS1_S1 + 5) - alpha_over_p * *(b + 533 * OS1_S1 + 6));
            *(b + 770 * OS1_S1 + 5) = X_PA * *(b + 650 * OS1_S1 + 5) + alpha_X * *(b + 650 * OS1_S1 + 6) + 2 * one_over_two_p * (*(b + 545 * OS1_S1 + 5) - alpha_over_p * *(b + 545 * OS1_S1 + 6));
            *(b + 771 * OS1_S1 + 5) = X_PA * *(b + 651 * OS1_S1 + 5) + alpha_X * *(b + 651 * OS1_S1 + 6) + one_over_two_p * (*(b + 546 * OS1_S1 + 5) - alpha_over_p * *(b + 546 * OS1_S1 + 6));
            *(b + 784 * OS1_S1 + 5) = X_PA * *(b + 664 * OS1_S1 + 5) + alpha_X * *(b + 664 * OS1_S1 + 6) + one_over_two_p * (*(b + 559 * OS1_S1 + 5) - alpha_over_p * *(b + 559 * OS1_S1 + 6));
            *(b + 785 * OS1_S1 + 5) = X_PA * *(b + 665 * OS1_S1 + 5) + alpha_X * *(b + 665 * OS1_S1 + 6);
            *(b + 792 * OS1_S1 + 5) = X_PA * *(b + 672 * OS1_S1 + 5) + alpha_X * *(b + 672 * OS1_S1 + 6);
            *(b + 799 * OS1_S1 + 5) = X_PA * *(b + 679 * OS1_S1 + 5) + alpha_X * *(b + 679 * OS1_S1 + 6);
            *(b + 800 * OS1_S1 + 5) = Y_PA * *(b + 665 * OS1_S1 + 5) + alpha_Y * *(b + 665 * OS1_S1 + 6) + 14 * one_over_two_p * (*(b + 546 * OS1_S1 + 5) - alpha_over_p * *(b + 546 * OS1_S1 + 6));
            *(b + 801 * OS1_S1 + 5) = Z_PA * *(b + 665 * OS1_S1 + 5) + alpha_Z * *(b + 665 * OS1_S1 + 6);
            *(b + 802 * OS1_S1 + 5) = Z_PA * *(b + 666 * OS1_S1 + 5) + alpha_Z * *(b + 666 * OS1_S1 + 6) + one_over_two_p * (*(b + 546 * OS1_S1 + 5) - alpha_over_p * *(b + 546 * OS1_S1 + 6));
            *(b + 803 * OS1_S1 + 5) = Z_PA * *(b + 667 * OS1_S1 + 5) + alpha_Z * *(b + 667 * OS1_S1 + 6) + 2 * one_over_two_p * (*(b + 547 * OS1_S1 + 5) - alpha_over_p * *(b + 547 * OS1_S1 + 6));
            *(b + 804 * OS1_S1 + 5) = Z_PA * *(b + 668 * OS1_S1 + 5) + alpha_Z * *(b + 668 * OS1_S1 + 6) + 3 * one_over_two_p * (*(b + 548 * OS1_S1 + 5) - alpha_over_p * *(b + 548 * OS1_S1 + 6));
            *(b + 805 * OS1_S1 + 5) = Z_PA * *(b + 669 * OS1_S1 + 5) + alpha_Z * *(b + 669 * OS1_S1 + 6) + 4 * one_over_two_p * (*(b + 549 * OS1_S1 + 5) - alpha_over_p * *(b + 549 * OS1_S1 + 6));
            *(b + 806 * OS1_S1 + 5) = Z_PA * *(b + 670 * OS1_S1 + 5) + alpha_Z * *(b + 670 * OS1_S1 + 6) + 5 * one_over_two_p * (*(b + 550 * OS1_S1 + 5) - alpha_over_p * *(b + 550 * OS1_S1 + 6));
            *(b + 807 * OS1_S1 + 5) = Z_PA * *(b + 671 * OS1_S1 + 5) + alpha_Z * *(b + 671 * OS1_S1 + 6) + 6 * one_over_two_p * (*(b + 551 * OS1_S1 + 5) - alpha_over_p * *(b + 551 * OS1_S1 + 6));
            *(b + 808 * OS1_S1 + 5) = Y_PA * *(b + 673 * OS1_S1 + 5) + alpha_Y * *(b + 673 * OS1_S1 + 6) + 6 * one_over_two_p * (*(b + 554 * OS1_S1 + 5) - alpha_over_p * *(b + 554 * OS1_S1 + 6));
            *(b + 809 * OS1_S1 + 5) = Y_PA * *(b + 674 * OS1_S1 + 5) + alpha_Y * *(b + 674 * OS1_S1 + 6) + 5 * one_over_two_p * (*(b + 555 * OS1_S1 + 5) - alpha_over_p * *(b + 555 * OS1_S1 + 6));
            *(b + 810 * OS1_S1 + 5) = Y_PA * *(b + 675 * OS1_S1 + 5) + alpha_Y * *(b + 675 * OS1_S1 + 6) + 4 * one_over_two_p * (*(b + 556 * OS1_S1 + 5) - alpha_over_p * *(b + 556 * OS1_S1 + 6));
            *(b + 811 * OS1_S1 + 5) = Y_PA * *(b + 676 * OS1_S1 + 5) + alpha_Y * *(b + 676 * OS1_S1 + 6) + 3 * one_over_two_p * (*(b + 557 * OS1_S1 + 5) - alpha_over_p * *(b + 557 * OS1_S1 + 6));
            *(b + 812 * OS1_S1 + 5) = Y_PA * *(b + 677 * OS1_S1 + 5) + alpha_Y * *(b + 677 * OS1_S1 + 6) + 2 * one_over_two_p * (*(b + 558 * OS1_S1 + 5) - alpha_over_p * *(b + 558 * OS1_S1 + 6));
            *(b + 813 * OS1_S1 + 5) = Y_PA * *(b + 678 * OS1_S1 + 5) + alpha_Y * *(b + 678 * OS1_S1 + 6) + one_over_two_p * (*(b + 559 * OS1_S1 + 5) - alpha_over_p * *(b + 559 * OS1_S1 + 6));
            *(b + 814 * OS1_S1 + 5) = Y_PA * *(b + 679 * OS1_S1 + 5) + alpha_Y * *(b + 679 * OS1_S1 + 6);
            *(b + 815 * OS1_S1 + 5) = Z_PA * *(b + 679 * OS1_S1 + 5) + alpha_Z * *(b + 679 * OS1_S1 + 6) + 14 * one_over_two_p * (*(b + 559 * OS1_S1 + 5) - alpha_over_p * *(b + 559 * OS1_S1 + 6));
            *(b + 816 * OS1_S1 + 4) = X_PA * *(b + 680 * OS1_S1 + 4) + alpha_X * *(b + 680 * OS1_S1 + 5) + 15 * one_over_two_p * (*(b + 560 * OS1_S1 + 4) - alpha_over_p * *(b + 560 * OS1_S1 + 5));
            *(b + 817 * OS1_S1 + 4) = Y_PA * *(b + 680 * OS1_S1 + 4) + alpha_Y * *(b + 680 * OS1_S1 + 5);
            *(b + 818 * OS1_S1 + 4) = Z_PA * *(b + 680 * OS1_S1 + 4) + alpha_Z * *(b + 680 * OS1_S1 + 5);
            *(b + 819 * OS1_S1 + 4) = Y_PA * *(b + 681 * OS1_S1 + 4) + alpha_Y * *(b + 681 * OS1_S1 + 5) + one_over_two_p * (*(b + 560 * OS1_S1 + 4) - alpha_over_p * *(b + 560 * OS1_S1 + 5));
            *(b + 821 * OS1_S1 + 4) = Z_PA * *(b + 682 * OS1_S1 + 4) + alpha_Z * *(b + 682 * OS1_S1 + 5) + one_over_two_p * (*(b + 560 * OS1_S1 + 4) - alpha_over_p * *(b + 560 * OS1_S1 + 5));
            *(b + 822 * OS1_S1 + 4) = Y_PA * *(b + 683 * OS1_S1 + 4) + alpha_Y * *(b + 683 * OS1_S1 + 5) + 2 * one_over_two_p * (*(b + 561 * OS1_S1 + 4) - alpha_over_p * *(b + 561 * OS1_S1 + 5));
            *(b + 825 * OS1_S1 + 4) = Z_PA * *(b + 685 * OS1_S1 + 4) + alpha_Z * *(b + 685 * OS1_S1 + 5) + 2 * one_over_two_p * (*(b + 562 * OS1_S1 + 4) - alpha_over_p * *(b + 562 * OS1_S1 + 5));
            *(b + 826 * OS1_S1 + 4) = Y_PA * *(b + 686 * OS1_S1 + 4) + alpha_Y * *(b + 686 * OS1_S1 + 5) + 3 * one_over_two_p * (*(b + 563 * OS1_S1 + 4) - alpha_over_p * *(b + 563 * OS1_S1 + 5));
            *(b + 830 * OS1_S1 + 4) = Z_PA * *(b + 689 * OS1_S1 + 4) + alpha_Z * *(b + 689 * OS1_S1 + 5) + 3 * one_over_two_p * (*(b + 565 * OS1_S1 + 4) - alpha_over_p * *(b + 565 * OS1_S1 + 5));
            *(b + 831 * OS1_S1 + 4) = Y_PA * *(b + 690 * OS1_S1 + 4) + alpha_Y * *(b + 690 * OS1_S1 + 5) + 4 * one_over_two_p * (*(b + 566 * OS1_S1 + 4) - alpha_over_p * *(b + 566 * OS1_S1 + 5));
            *(b + 836 * OS1_S1 + 4) = Z_PA * *(b + 694 * OS1_S1 + 4) + alpha_Z * *(b + 694 * OS1_S1 + 5) + 4 * one_over_two_p * (*(b + 569 * OS1_S1 + 4) - alpha_over_p * *(b + 569 * OS1_S1 + 5));
            *(b + 837 * OS1_S1 + 4) = Y_PA * *(b + 695 * OS1_S1 + 4) + alpha_Y * *(b + 695 * OS1_S1 + 5) + 5 * one_over_two_p * (*(b + 570 * OS1_S1 + 4) - alpha_over_p * *(b + 570 * OS1_S1 + 5));
            *(b + 838 * OS1_S1 + 4) = Z_PA * *(b + 695 * OS1_S1 + 4) + alpha_Z * *(b + 695 * OS1_S1 + 5);
            *(b + 843 * OS1_S1 + 4) = Z_PA * *(b + 700 * OS1_S1 + 4) + alpha_Z * *(b + 700 * OS1_S1 + 5) + 5 * one_over_two_p * (*(b + 574 * OS1_S1 + 4) - alpha_over_p * *(b + 574 * OS1_S1 + 5));
            *(b + 844 * OS1_S1 + 4) = Y_PA * *(b + 701 * OS1_S1 + 4) + alpha_Y * *(b + 701 * OS1_S1 + 5) + 6 * one_over_two_p * (*(b + 575 * OS1_S1 + 4) - alpha_over_p * *(b + 575 * OS1_S1 + 5));
            *(b + 845 * OS1_S1 + 4) = Z_PA * *(b + 701 * OS1_S1 + 4) + alpha_Z * *(b + 701 * OS1_S1 + 5);
            *(b + 850 * OS1_S1 + 4) = Y_PA * *(b + 707 * OS1_S1 + 4) + alpha_Y * *(b + 707 * OS1_S1 + 5);
            *(b + 851 * OS1_S1 + 4) = Z_PA * *(b + 707 * OS1_S1 + 4) + alpha_Z * *(b + 707 * OS1_S1 + 5) + 6 * one_over_two_p * (*(b + 580 * OS1_S1 + 4) - alpha_over_p * *(b + 580 * OS1_S1 + 5));
            *(b + 852 * OS1_S1 + 4) = Y_PA * *(b + 708 * OS1_S1 + 4) + alpha_Y * *(b + 708 * OS1_S1 + 5) + 7 * one_over_two_p * (*(b + 581 * OS1_S1 + 4) - alpha_over_p * *(b + 581 * OS1_S1 + 5));
            *(b + 853 * OS1_S1 + 4) = Z_PA * *(b + 708 * OS1_S1 + 4) + alpha_Z * *(b + 708 * OS1_S1 + 5);
            *(b + 854 * OS1_S1 + 4) = Z_PA * *(b + 709 * OS1_S1 + 4) + alpha_Z * *(b + 709 * OS1_S1 + 5) + one_over_two_p * (*(b + 581 * OS1_S1 + 4) - alpha_over_p * *(b + 581 * OS1_S1 + 5));
            *(b + 859 * OS1_S1 + 4) = Y_PA * *(b + 715 * OS1_S1 + 4) + alpha_Y * *(b + 715 * OS1_S1 + 5);
            *(b + 860 * OS1_S1 + 4) = Z_PA * *(b + 715 * OS1_S1 + 4) + alpha_Z * *(b + 715 * OS1_S1 + 5) + 7 * one_over_two_p * (*(b + 587 * OS1_S1 + 4) - alpha_over_p * *(b + 587 * OS1_S1 + 5));
            *(b + 861 * OS1_S1 + 4) = X_PA * *(b + 725 * OS1_S1 + 4) + alpha_X * *(b + 725 * OS1_S1 + 5) + 6 * one_over_two_p * (*(b + 605 * OS1_S1 + 4) - alpha_over_p * *(b + 605 * OS1_S1 + 5));
            *(b + 862 * OS1_S1 + 4) = Z_PA * *(b + 716 * OS1_S1 + 4) + alpha_Z * *(b + 716 * OS1_S1 + 5);
            *(b + 863 * OS1_S1 + 4) = Z_PA * *(b + 717 * OS1_S1 + 4) + alpha_Z * *(b + 717 * OS1_S1 + 5) + one_over_two_p * (*(b + 588 * OS1_S1 + 4) - alpha_over_p * *(b + 588 * OS1_S1 + 5));
            *(b + 868 * OS1_S1 + 4) = Y_PA * *(b + 723 * OS1_S1 + 4) + alpha_Y * *(b + 723 * OS1_S1 + 5) + one_over_two_p * (*(b + 595 * OS1_S1 + 4) - alpha_over_p * *(b + 595 * OS1_S1 + 5));
            *(b + 869 * OS1_S1 + 4) = Y_PA * *(b + 724 * OS1_S1 + 4) + alpha_Y * *(b + 724 * OS1_S1 + 5);
            *(b + 870 * OS1_S1 + 4) = X_PA * *(b + 734 * OS1_S1 + 4) + alpha_X * *(b + 734 * OS1_S1 + 5) + 6 * one_over_two_p * (*(b + 614 * OS1_S1 + 4) - alpha_over_p * *(b + 614 * OS1_S1 + 5));
            *(b + 871 * OS1_S1 + 4) = X_PA * *(b + 735 * OS1_S1 + 4) + alpha_X * *(b + 735 * OS1_S1 + 5) + 5 * one_over_two_p * (*(b + 615 * OS1_S1 + 4) - alpha_over_p * *(b + 615 * OS1_S1 + 5));
            *(b + 872 * OS1_S1 + 4) = Z_PA * *(b + 725 * OS1_S1 + 4) + alpha_Z * *(b + 725 * OS1_S1 + 5);
            *(b + 873 * OS1_S1 + 4) = Z_PA * *(b + 726 * OS1_S1 + 4) + alpha_Z * *(b + 726 * OS1_S1 + 5) + one_over_two_p * (*(b + 596 * OS1_S1 + 4) - alpha_over_p * *(b + 596 * OS1_S1 + 5));
            *(b + 879 * OS1_S1 + 4) = Y_PA * *(b + 733 * OS1_S1 + 4) + alpha_Y * *(b + 733 * OS1_S1 + 5) + one_over_two_p * (*(b + 604 * OS1_S1 + 4) - alpha_over_p * *(b + 604 * OS1_S1 + 5));
            *(b + 880 * OS1_S1 + 4) = Y_PA * *(b + 734 * OS1_S1 + 4) + alpha_Y * *(b + 734 * OS1_S1 + 5);
            *(b + 881 * OS1_S1 + 4) = X_PA * *(b + 745 * OS1_S1 + 4) + alpha_X * *(b + 745 * OS1_S1 + 5) + 5 * one_over_two_p * (*(b + 625 * OS1_S1 + 4) - alpha_over_p * *(b + 625 * OS1_S1 + 5));
            *(b + 882 * OS1_S1 + 4) = X_PA * *(b + 746 * OS1_S1 + 4) + alpha_X * *(b + 746 * OS1_S1 + 5) + 4 * one_over_two_p * (*(b + 626 * OS1_S1 + 4) - alpha_over_p * *(b + 626 * OS1_S1 + 5));
            *(b + 883 * OS1_S1 + 4) = Z_PA * *(b + 735 * OS1_S1 + 4) + alpha_Z * *(b + 735 * OS1_S1 + 5);
            *(b + 892 * OS1_S1 + 4) = Y_PA * *(b + 745 * OS1_S1 + 4) + alpha_Y * *(b + 745 * OS1_S1 + 5);
            *(b + 893 * OS1_S1 + 4) = X_PA * *(b + 757 * OS1_S1 + 4) + alpha_X * *(b + 757 * OS1_S1 + 5) + 4 * one_over_two_p * (*(b + 637 * OS1_S1 + 4) - alpha_over_p * *(b + 637 * OS1_S1 + 5));
            *(b + 894 * OS1_S1 + 4) = X_PA * *(b + 758 * OS1_S1 + 4) + alpha_X * *(b + 758 * OS1_S1 + 5) + 3 * one_over_two_p * (*(b + 638 * OS1_S1 + 4) - alpha_over_p * *(b + 638 * OS1_S1 + 5));
            *(b + 906 * OS1_S1 + 4) = X_PA * *(b + 770 * OS1_S1 + 4) + alpha_X * *(b + 770 * OS1_S1 + 5) + 3 * one_over_two_p * (*(b + 650 * OS1_S1 + 4) - alpha_over_p * *(b + 650 * OS1_S1 + 5));
            *(b + 907 * OS1_S1 + 4) = X_PA * *(b + 771 * OS1_S1 + 4) + alpha_X * *(b + 771 * OS1_S1 + 5) + 2 * one_over_two_p * (*(b + 651 * OS1_S1 + 4) - alpha_over_p * *(b + 651 * OS1_S1 + 5));
            *(b + 920 * OS1_S1 + 4) = X_PA * *(b + 784 * OS1_S1 + 4) + alpha_X * *(b + 784 * OS1_S1 + 5) + 2 * one_over_two_p * (*(b + 664 * OS1_S1 + 4) - alpha_over_p * *(b + 664 * OS1_S1 + 5));
            *(b + 921 * OS1_S1 + 4) = X_PA * *(b + 785 * OS1_S1 + 4) + alpha_X * *(b + 785 * OS1_S1 + 5) + one_over_two_p * (*(b + 665 * OS1_S1 + 4) - alpha_over_p * *(b + 665 * OS1_S1 + 5));
            *(b + 928 * OS1_S1 + 4) = X_PA * *(b + 792 * OS1_S1 + 4) + alpha_X * *(b + 792 * OS1_S1 + 5) + one_over_two_p * (*(b + 672 * OS1_S1 + 4) - alpha_over_p * *(b + 672 * OS1_S1 + 5));
            *(b + 935 * OS1_S1 + 4) = X_PA * *(b + 799 * OS1_S1 + 4) + alpha_X * *(b + 799 * OS1_S1 + 5) + one_over_two_p * (*(b + 679 * OS1_S1 + 4) - alpha_over_p * *(b + 679 * OS1_S1 + 5));
            *(b + 936 * OS1_S1 + 4) = X_PA * *(b + 800 * OS1_S1 + 4) + alpha_X * *(b + 800 * OS1_S1 + 5);
            *(b + 942 * OS1_S1 + 4) = X_PA * *(b + 806 * OS1_S1 + 4) + alpha_X * *(b + 806 * OS1_S1 + 5);
            *(b + 943 * OS1_S1 + 4) = X_PA * *(b + 807 * OS1_S1 + 4) + alpha_X * *(b + 807 * OS1_S1 + 5);
            *(b + 944 * OS1_S1 + 4) = X_PA * *(b + 808 * OS1_S1 + 4) + alpha_X * *(b + 808 * OS1_S1 + 5);
            *(b + 945 * OS1_S1 + 4) = X_PA * *(b + 809 * OS1_S1 + 4) + alpha_X * *(b + 809 * OS1_S1 + 5);
            *(b + 951 * OS1_S1 + 4) = X_PA * *(b + 815 * OS1_S1 + 4) + alpha_X * *(b + 815 * OS1_S1 + 5);
            *(b + 952 * OS1_S1 + 4) = Y_PA * *(b + 800 * OS1_S1 + 4) + alpha_Y * *(b + 800 * OS1_S1 + 5) + 15 * one_over_two_p * (*(b + 665 * OS1_S1 + 4) - alpha_over_p * *(b + 665 * OS1_S1 + 5));
            *(b + 953 * OS1_S1 + 4) = Z_PA * *(b + 800 * OS1_S1 + 4) + alpha_Z * *(b + 800 * OS1_S1 + 5);
            *(b + 954 * OS1_S1 + 4) = Z_PA * *(b + 801 * OS1_S1 + 4) + alpha_Z * *(b + 801 * OS1_S1 + 5) + one_over_two_p * (*(b + 665 * OS1_S1 + 4) - alpha_over_p * *(b + 665 * OS1_S1 + 5));
            *(b + 955 * OS1_S1 + 4) = Z_PA * *(b + 802 * OS1_S1 + 4) + alpha_Z * *(b + 802 * OS1_S1 + 5) + 2 * one_over_two_p * (*(b + 666 * OS1_S1 + 4) - alpha_over_p * *(b + 666 * OS1_S1 + 5));
            *(b + 956 * OS1_S1 + 4) = Z_PA * *(b + 803 * OS1_S1 + 4) + alpha_Z * *(b + 803 * OS1_S1 + 5) + 3 * one_over_two_p * (*(b + 667 * OS1_S1 + 4) - alpha_over_p * *(b + 667 * OS1_S1 + 5));
            *(b + 957 * OS1_S1 + 4) = Z_PA * *(b + 804 * OS1_S1 + 4) + alpha_Z * *(b + 804 * OS1_S1 + 5) + 4 * one_over_two_p * (*(b + 668 * OS1_S1 + 4) - alpha_over_p * *(b + 668 * OS1_S1 + 5));
            *(b + 958 * OS1_S1 + 4) = Z_PA * *(b + 805 * OS1_S1 + 4) + alpha_Z * *(b + 805 * OS1_S1 + 5) + 5 * one_over_two_p * (*(b + 669 * OS1_S1 + 4) - alpha_over_p * *(b + 669 * OS1_S1 + 5));
            *(b + 959 * OS1_S1 + 4) = Z_PA * *(b + 806 * OS1_S1 + 4) + alpha_Z * *(b + 806 * OS1_S1 + 5) + 6 * one_over_two_p * (*(b + 670 * OS1_S1 + 4) - alpha_over_p * *(b + 670 * OS1_S1 + 5));
            *(b + 960 * OS1_S1 + 4) = Z_PA * *(b + 807 * OS1_S1 + 4) + alpha_Z * *(b + 807 * OS1_S1 + 5) + 7 * one_over_two_p * (*(b + 671 * OS1_S1 + 4) - alpha_over_p * *(b + 671 * OS1_S1 + 5));
            *(b + 961 * OS1_S1 + 4) = Y_PA * *(b + 809 * OS1_S1 + 4) + alpha_Y * *(b + 809 * OS1_S1 + 5) + 6 * one_over_two_p * (*(b + 674 * OS1_S1 + 4) - alpha_over_p * *(b + 674 * OS1_S1 + 5));
            *(b + 962 * OS1_S1 + 4) = Y_PA * *(b + 810 * OS1_S1 + 4) + alpha_Y * *(b + 810 * OS1_S1 + 5) + 5 * one_over_two_p * (*(b + 675 * OS1_S1 + 4) - alpha_over_p * *(b + 675 * OS1_S1 + 5));
            *(b + 963 * OS1_S1 + 4) = Y_PA * *(b + 811 * OS1_S1 + 4) + alpha_Y * *(b + 811 * OS1_S1 + 5) + 4 * one_over_two_p * (*(b + 676 * OS1_S1 + 4) - alpha_over_p * *(b + 676 * OS1_S1 + 5));
            *(b + 964 * OS1_S1 + 4) = Y_PA * *(b + 812 * OS1_S1 + 4) + alpha_Y * *(b + 812 * OS1_S1 + 5) + 3 * one_over_two_p * (*(b + 677 * OS1_S1 + 4) - alpha_over_p * *(b + 677 * OS1_S1 + 5));
            *(b + 965 * OS1_S1 + 4) = Y_PA * *(b + 813 * OS1_S1 + 4) + alpha_Y * *(b + 813 * OS1_S1 + 5) + 2 * one_over_two_p * (*(b + 678 * OS1_S1 + 4) - alpha_over_p * *(b + 678 * OS1_S1 + 5));
            *(b + 966 * OS1_S1 + 4) = Y_PA * *(b + 814 * OS1_S1 + 4) + alpha_Y * *(b + 814 * OS1_S1 + 5) + one_over_two_p * (*(b + 679 * OS1_S1 + 4) - alpha_over_p * *(b + 679 * OS1_S1 + 5));
            *(b + 967 * OS1_S1 + 4) = Y_PA * *(b + 815 * OS1_S1 + 4) + alpha_Y * *(b + 815 * OS1_S1 + 5);
            *(b + 968 * OS1_S1 + 4) = Z_PA * *(b + 815 * OS1_S1 + 4) + alpha_Z * *(b + 815 * OS1_S1 + 5) + 15 * one_over_two_p * (*(b + 679 * OS1_S1 + 4) - alpha_over_p * *(b + 679 * OS1_S1 + 5));
            *(b + 969 * OS1_S1 + 3) = X_PA * *(b + 816 * OS1_S1 + 3) + alpha_X * *(b + 816 * OS1_S1 + 4) + 16 * one_over_two_p * (*(b + 680 * OS1_S1 + 3) - alpha_over_p * *(b + 680 * OS1_S1 + 4));
            *(b + 970 * OS1_S1 + 3) = Y_PA * *(b + 816 * OS1_S1 + 3) + alpha_Y * *(b + 816 * OS1_S1 + 4);
            *(b + 971 * OS1_S1 + 3) = Z_PA * *(b + 816 * OS1_S1 + 3) + alpha_Z * *(b + 816 * OS1_S1 + 4);
            *(b + 972 * OS1_S1 + 3) = Y_PA * *(b + 817 * OS1_S1 + 3) + alpha_Y * *(b + 817 * OS1_S1 + 4) + one_over_two_p * (*(b + 680 * OS1_S1 + 3) - alpha_over_p * *(b + 680 * OS1_S1 + 4));
            *(b + 974 * OS1_S1 + 3) = Z_PA * *(b + 818 * OS1_S1 + 3) + alpha_Z * *(b + 818 * OS1_S1 + 4) + one_over_two_p * (*(b + 680 * OS1_S1 + 3) - alpha_over_p * *(b + 680 * OS1_S1 + 4));
            *(b + 975 * OS1_S1 + 3) = Y_PA * *(b + 819 * OS1_S1 + 3) + alpha_Y * *(b + 819 * OS1_S1 + 4) + 2 * one_over_two_p * (*(b + 681 * OS1_S1 + 3) - alpha_over_p * *(b + 681 * OS1_S1 + 4));
            *(b + 978 * OS1_S1 + 3) = Z_PA * *(b + 821 * OS1_S1 + 3) + alpha_Z * *(b + 821 * OS1_S1 + 4) + 2 * one_over_two_p * (*(b + 682 * OS1_S1 + 3) - alpha_over_p * *(b + 682 * OS1_S1 + 4));
            *(b + 979 * OS1_S1 + 3) = Y_PA * *(b + 822 * OS1_S1 + 3) + alpha_Y * *(b + 822 * OS1_S1 + 4) + 3 * one_over_two_p * (*(b + 683 * OS1_S1 + 3) - alpha_over_p * *(b + 683 * OS1_S1 + 4));
            *(b + 983 * OS1_S1 + 3) = Z_PA * *(b + 825 * OS1_S1 + 3) + alpha_Z * *(b + 825 * OS1_S1 + 4) + 3 * one_over_two_p * (*(b + 685 * OS1_S1 + 3) - alpha_over_p * *(b + 685 * OS1_S1 + 4));
            *(b + 984 * OS1_S1 + 3) = Y_PA * *(b + 826 * OS1_S1 + 3) + alpha_Y * *(b + 826 * OS1_S1 + 4) + 4 * one_over_two_p * (*(b + 686 * OS1_S1 + 3) - alpha_over_p * *(b + 686 * OS1_S1 + 4));
            *(b + 985 * OS1_S1 + 3) = Z_PA * *(b + 826 * OS1_S1 + 3) + alpha_Z * *(b + 826 * OS1_S1 + 4);
            *(b + 989 * OS1_S1 + 3) = Z_PA * *(b + 830 * OS1_S1 + 3) + alpha_Z * *(b + 830 * OS1_S1 + 4) + 4 * one_over_two_p * (*(b + 689 * OS1_S1 + 3) - alpha_over_p * *(b + 689 * OS1_S1 + 4));
            *(b + 990 * OS1_S1 + 3) = Y_PA * *(b + 831 * OS1_S1 + 3) + alpha_Y * *(b + 831 * OS1_S1 + 4) + 5 * one_over_two_p * (*(b + 690 * OS1_S1 + 3) - alpha_over_p * *(b + 690 * OS1_S1 + 4));
            *(b + 991 * OS1_S1 + 3) = Z_PA * *(b + 831 * OS1_S1 + 3) + alpha_Z * *(b + 831 * OS1_S1 + 4);
            *(b + 995 * OS1_S1 + 3) = Y_PA * *(b + 836 * OS1_S1 + 3) + alpha_Y * *(b + 836 * OS1_S1 + 4);
            *(b + 996 * OS1_S1 + 3) = Z_PA * *(b + 836 * OS1_S1 + 3) + alpha_Z * *(b + 836 * OS1_S1 + 4) + 5 * one_over_two_p * (*(b + 694 * OS1_S1 + 3) - alpha_over_p * *(b + 694 * OS1_S1 + 4));
            *(b + 997 * OS1_S1 + 3) = Y_PA * *(b + 837 * OS1_S1 + 3) + alpha_Y * *(b + 837 * OS1_S1 + 4) + 6 * one_over_two_p * (*(b + 695 * OS1_S1 + 3) - alpha_over_p * *(b + 695 * OS1_S1 + 4));
            *(b + 998 * OS1_S1 + 3) = Z_PA * *(b + 837 * OS1_S1 + 3) + alpha_Z * *(b + 837 * OS1_S1 + 4);
            *(b + 999 * OS1_S1 + 3) = Z_PA * *(b + 838 * OS1_S1 + 3) + alpha_Z * *(b + 838 * OS1_S1 + 4) + one_over_two_p * (*(b + 695 * OS1_S1 + 3) - alpha_over_p * *(b + 695 * OS1_S1 + 4));
            *(b + 1003 * OS1_S1 + 3) = Y_PA * *(b + 843 * OS1_S1 + 3) + alpha_Y * *(b + 843 * OS1_S1 + 4);
            *(b + 1004 * OS1_S1 + 3) = Z_PA * *(b + 843 * OS1_S1 + 3) + alpha_Z * *(b + 843 * OS1_S1 + 4) + 6 * one_over_two_p * (*(b + 700 * OS1_S1 + 3) - alpha_over_p * *(b + 700 * OS1_S1 + 4));
            *(b + 1005 * OS1_S1 + 3) = Y_PA * *(b + 844 * OS1_S1 + 3) + alpha_Y * *(b + 844 * OS1_S1 + 4) + 7 * one_over_two_p * (*(b + 701 * OS1_S1 + 3) - alpha_over_p * *(b + 701 * OS1_S1 + 4));
            *(b + 1006 * OS1_S1 + 3) = Z_PA * *(b + 844 * OS1_S1 + 3) + alpha_Z * *(b + 844 * OS1_S1 + 4);
            *(b + 1007 * OS1_S1 + 3) = Z_PA * *(b + 845 * OS1_S1 + 3) + alpha_Z * *(b + 845 * OS1_S1 + 4) + one_over_two_p * (*(b + 701 * OS1_S1 + 3) - alpha_over_p * *(b + 701 * OS1_S1 + 4));
            *(b + 1011 * OS1_S1 + 3) = Y_PA * *(b + 850 * OS1_S1 + 3) + alpha_Y * *(b + 850 * OS1_S1 + 4) + one_over_two_p * (*(b + 707 * OS1_S1 + 3) - alpha_over_p * *(b + 707 * OS1_S1 + 4));
            *(b + 1012 * OS1_S1 + 3) = Y_PA * *(b + 851 * OS1_S1 + 3) + alpha_Y * *(b + 851 * OS1_S1 + 4);
            *(b + 1013 * OS1_S1 + 3) = Z_PA * *(b + 851 * OS1_S1 + 3) + alpha_Z * *(b + 851 * OS1_S1 + 4) + 7 * one_over_two_p * (*(b + 707 * OS1_S1 + 3) - alpha_over_p * *(b + 707 * OS1_S1 + 4));
            *(b + 1014 * OS1_S1 + 3) = X_PA * *(b + 861 * OS1_S1 + 3) + alpha_X * *(b + 861 * OS1_S1 + 4) + 7 * one_over_two_p * (*(b + 725 * OS1_S1 + 3) - alpha_over_p * *(b + 725 * OS1_S1 + 4));
            *(b + 1015 * OS1_S1 + 3) = Z_PA * *(b + 852 * OS1_S1 + 3) + alpha_Z * *(b + 852 * OS1_S1 + 4);
            *(b + 1016 * OS1_S1 + 3) = Z_PA * *(b + 853 * OS1_S1 + 3) + alpha_Z * *(b + 853 * OS1_S1 + 4) + one_over_two_p * (*(b + 708 * OS1_S1 + 3) - alpha_over_p * *(b + 708 * OS1_S1 + 4));
            *(b + 1017 * OS1_S1 + 3) = Z_PA * *(b + 854 * OS1_S1 + 3) + alpha_Z * *(b + 854 * OS1_S1 + 4) + 2 * one_over_two_p * (*(b + 709 * OS1_S1 + 3) - alpha_over_p * *(b + 709 * OS1_S1 + 4));
            *(b + 1021 * OS1_S1 + 3) = Y_PA * *(b + 859 * OS1_S1 + 3) + alpha_Y * *(b + 859 * OS1_S1 + 4) + one_over_two_p * (*(b + 715 * OS1_S1 + 3) - alpha_over_p * *(b + 715 * OS1_S1 + 4));
            *(b + 1022 * OS1_S1 + 3) = Y_PA * *(b + 860 * OS1_S1 + 3) + alpha_Y * *(b + 860 * OS1_S1 + 4);
            *(b + 1023 * OS1_S1 + 3) = X_PA * *(b + 870 * OS1_S1 + 3) + alpha_X * *(b + 870 * OS1_S1 + 4) + 7 * one_over_two_p * (*(b + 734 * OS1_S1 + 3) - alpha_over_p * *(b + 734 * OS1_S1 + 4));
            *(b + 1024 * OS1_S1 + 3) = X_PA * *(b + 871 * OS1_S1 + 3) + alpha_X * *(b + 871 * OS1_S1 + 4) + 6 * one_over_two_p * (*(b + 735 * OS1_S1 + 3) - alpha_over_p * *(b + 735 * OS1_S1 + 4));
            *(b + 1025 * OS1_S1 + 3) = Z_PA * *(b + 861 * OS1_S1 + 3) + alpha_Z * *(b + 861 * OS1_S1 + 4);
            *(b + 1026 * OS1_S1 + 3) = Z_PA * *(b + 862 * OS1_S1 + 3) + alpha_Z * *(b + 862 * OS1_S1 + 4) + one_over_two_p * (*(b + 716 * OS1_S1 + 3) - alpha_over_p * *(b + 716 * OS1_S1 + 4));
            *(b + 1027 * OS1_S1 + 3) = Z_PA * *(b + 863 * OS1_S1 + 3) + alpha_Z * *(b + 863 * OS1_S1 + 4) + 2 * one_over_two_p * (*(b + 717 * OS1_S1 + 3) - alpha_over_p * *(b + 717 * OS1_S1 + 4));
            *(b + 1031 * OS1_S1 + 3) = Y_PA * *(b + 868 * OS1_S1 + 3) + alpha_Y * *(b + 868 * OS1_S1 + 4) + 2 * one_over_two_p * (*(b + 723 * OS1_S1 + 3) - alpha_over_p * *(b + 723 * OS1_S1 + 4));
            *(b + 1032 * OS1_S1 + 3) = Y_PA * *(b + 869 * OS1_S1 + 3) + alpha_Y * *(b + 869 * OS1_S1 + 4) + one_over_two_p * (*(b + 724 * OS1_S1 + 3) - alpha_over_p * *(b + 724 * OS1_S1 + 4));
            *(b + 1033 * OS1_S1 + 3) = Y_PA * *(b + 870 * OS1_S1 + 3) + alpha_Y * *(b + 870 * OS1_S1 + 4);
            *(b + 1034 * OS1_S1 + 3) = X_PA * *(b + 881 * OS1_S1 + 3) + alpha_X * *(b + 881 * OS1_S1 + 4) + 6 * one_over_two_p * (*(b + 745 * OS1_S1 + 3) - alpha_over_p * *(b + 745 * OS1_S1 + 4));
            *(b + 1035 * OS1_S1 + 3) = X_PA * *(b + 882 * OS1_S1 + 3) + alpha_X * *(b + 882 * OS1_S1 + 4) + 5 * one_over_two_p * (*(b + 746 * OS1_S1 + 3) - alpha_over_p * *(b + 746 * OS1_S1 + 4));
            *(b + 1036 * OS1_S1 + 3) = Z_PA * *(b + 871 * OS1_S1 + 3) + alpha_Z * *(b + 871 * OS1_S1 + 4);
            *(b + 1037 * OS1_S1 + 3) = Z_PA * *(b + 872 * OS1_S1 + 3) + alpha_Z * *(b + 872 * OS1_S1 + 4) + one_over_two_p * (*(b + 725 * OS1_S1 + 3) - alpha_over_p * *(b + 725 * OS1_S1 + 4));
            *(b + 1038 * OS1_S1 + 3) = Z_PA * *(b + 873 * OS1_S1 + 3) + alpha_Z * *(b + 873 * OS1_S1 + 4) + 2 * one_over_two_p * (*(b + 726 * OS1_S1 + 3) - alpha_over_p * *(b + 726 * OS1_S1 + 4));
            *(b + 1043 * OS1_S1 + 3) = Y_PA * *(b + 879 * OS1_S1 + 3) + alpha_Y * *(b + 879 * OS1_S1 + 4) + 2 * one_over_two_p * (*(b + 733 * OS1_S1 + 3) - alpha_over_p * *(b + 733 * OS1_S1 + 4));
            *(b + 1044 * OS1_S1 + 3) = Y_PA * *(b + 880 * OS1_S1 + 3) + alpha_Y * *(b + 880 * OS1_S1 + 4) + one_over_two_p * (*(b + 734 * OS1_S1 + 3) - alpha_over_p * *(b + 734 * OS1_S1 + 4));
            *(b + 1045 * OS1_S1 + 3) = Y_PA * *(b + 881 * OS1_S1 + 3) + alpha_Y * *(b + 881 * OS1_S1 + 4);
            *(b + 1046 * OS1_S1 + 3) = X_PA * *(b + 893 * OS1_S1 + 3) + alpha_X * *(b + 893 * OS1_S1 + 4) + 5 * one_over_two_p * (*(b + 757 * OS1_S1 + 3) - alpha_over_p * *(b + 757 * OS1_S1 + 4));
            *(b + 1047 * OS1_S1 + 3) = X_PA * *(b + 894 * OS1_S1 + 3) + alpha_X * *(b + 894 * OS1_S1 + 4) + 4 * one_over_two_p * (*(b + 758 * OS1_S1 + 3) - alpha_over_p * *(b + 758 * OS1_S1 + 4));
            *(b + 1048 * OS1_S1 + 3) = Z_PA * *(b + 882 * OS1_S1 + 3) + alpha_Z * *(b + 882 * OS1_S1 + 4);
            *(b + 1049 * OS1_S1 + 3) = Z_PA * *(b + 883 * OS1_S1 + 3) + alpha_Z * *(b + 883 * OS1_S1 + 4) + one_over_two_p * (*(b + 735 * OS1_S1 + 3) - alpha_over_p * *(b + 735 * OS1_S1 + 4));
            *(b + 1057 * OS1_S1 + 3) = Y_PA * *(b + 892 * OS1_S1 + 3) + alpha_Y * *(b + 892 * OS1_S1 + 4) + one_over_two_p * (*(b + 745 * OS1_S1 + 3) - alpha_over_p * *(b + 745 * OS1_S1 + 4));
            *(b + 1058 * OS1_S1 + 3) = Y_PA * *(b + 893 * OS1_S1 + 3) + alpha_Y * *(b + 893 * OS1_S1 + 4);
            *(b + 1059 * OS1_S1 + 3) = X_PA * *(b + 906 * OS1_S1 + 3) + alpha_X * *(b + 906 * OS1_S1 + 4) + 4 * one_over_two_p * (*(b + 770 * OS1_S1 + 3) - alpha_over_p * *(b + 770 * OS1_S1 + 4));
            *(b + 1060 * OS1_S1 + 3) = X_PA * *(b + 907 * OS1_S1 + 3) + alpha_X * *(b + 907 * OS1_S1 + 4) + 3 * one_over_two_p * (*(b + 771 * OS1_S1 + 3) - alpha_over_p * *(b + 771 * OS1_S1 + 4));
            *(b + 1061 * OS1_S1 + 3) = Z_PA * *(b + 894 * OS1_S1 + 3) + alpha_Z * *(b + 894 * OS1_S1 + 4);
            *(b + 1072 * OS1_S1 + 3) = Y_PA * *(b + 906 * OS1_S1 + 3) + alpha_Y * *(b + 906 * OS1_S1 + 4);
            *(b + 1073 * OS1_S1 + 3) = X_PA * *(b + 920 * OS1_S1 + 3) + alpha_X * *(b + 920 * OS1_S1 + 4) + 3 * one_over_two_p * (*(b + 784 * OS1_S1 + 3) - alpha_over_p * *(b + 784 * OS1_S1 + 4));
            *(b + 1074 * OS1_S1 + 3) = X_PA * *(b + 921 * OS1_S1 + 3) + alpha_X * *(b + 921 * OS1_S1 + 4) + 2 * one_over_two_p * (*(b + 785 * OS1_S1 + 3) - alpha_over_p * *(b + 785 * OS1_S1 + 4));
            *(b + 1081 * OS1_S1 + 3) = X_PA * *(b + 928 * OS1_S1 + 3) + alpha_X * *(b + 928 * OS1_S1 + 4) + 2 * one_over_two_p * (*(b + 792 * OS1_S1 + 3) - alpha_over_p * *(b + 792 * OS1_S1 + 4));
            *(b + 1088 * OS1_S1 + 3) = X_PA * *(b + 935 * OS1_S1 + 3) + alpha_X * *(b + 935 * OS1_S1 + 4) + 2 * one_over_two_p * (*(b + 799 * OS1_S1 + 3) - alpha_over_p * *(b + 799 * OS1_S1 + 4));
            *(b + 1089 * OS1_S1 + 3) = X_PA * *(b + 936 * OS1_S1 + 3) + alpha_X * *(b + 936 * OS1_S1 + 4) + one_over_two_p * (*(b + 800 * OS1_S1 + 3) - alpha_over_p * *(b + 800 * OS1_S1 + 4));
            *(b + 1095 * OS1_S1 + 3) = X_PA * *(b + 942 * OS1_S1 + 3) + alpha_X * *(b + 942 * OS1_S1 + 4) + one_over_two_p * (*(b + 806 * OS1_S1 + 3) - alpha_over_p * *(b + 806 * OS1_S1 + 4));
            *(b + 1096 * OS1_S1 + 3) = X_PA * *(b + 943 * OS1_S1 + 3) + alpha_X * *(b + 943 * OS1_S1 + 4) + one_over_two_p * (*(b + 807 * OS1_S1 + 3) - alpha_over_p * *(b + 807 * OS1_S1 + 4));
            *(b + 1097 * OS1_S1 + 3) = X_PA * *(b + 944 * OS1_S1 + 3) + alpha_X * *(b + 944 * OS1_S1 + 4) + one_over_two_p * (*(b + 808 * OS1_S1 + 3) - alpha_over_p * *(b + 808 * OS1_S1 + 4));
            *(b + 1098 * OS1_S1 + 3) = X_PA * *(b + 945 * OS1_S1 + 3) + alpha_X * *(b + 945 * OS1_S1 + 4) + one_over_two_p * (*(b + 809 * OS1_S1 + 3) - alpha_over_p * *(b + 809 * OS1_S1 + 4));
            *(b + 1104 * OS1_S1 + 3) = X_PA * *(b + 951 * OS1_S1 + 3) + alpha_X * *(b + 951 * OS1_S1 + 4) + one_over_two_p * (*(b + 815 * OS1_S1 + 3) - alpha_over_p * *(b + 815 * OS1_S1 + 4));
            *(b + 1105 * OS1_S1 + 3) = X_PA * *(b + 952 * OS1_S1 + 3) + alpha_X * *(b + 952 * OS1_S1 + 4);
            *(b + 1110 * OS1_S1 + 3) = X_PA * *(b + 957 * OS1_S1 + 3) + alpha_X * *(b + 957 * OS1_S1 + 4);
            *(b + 1111 * OS1_S1 + 3) = X_PA * *(b + 958 * OS1_S1 + 3) + alpha_X * *(b + 958 * OS1_S1 + 4);
            *(b + 1112 * OS1_S1 + 3) = X_PA * *(b + 959 * OS1_S1 + 3) + alpha_X * *(b + 959 * OS1_S1 + 4);
            *(b + 1113 * OS1_S1 + 3) = X_PA * *(b + 960 * OS1_S1 + 3) + alpha_X * *(b + 960 * OS1_S1 + 4);
            *(b + 1114 * OS1_S1 + 3) = X_PA * *(b + 961 * OS1_S1 + 3) + alpha_X * *(b + 961 * OS1_S1 + 4);
            *(b + 1115 * OS1_S1 + 3) = X_PA * *(b + 962 * OS1_S1 + 3) + alpha_X * *(b + 962 * OS1_S1 + 4);
            *(b + 1116 * OS1_S1 + 3) = X_PA * *(b + 963 * OS1_S1 + 3) + alpha_X * *(b + 963 * OS1_S1 + 4);
            *(b + 1121 * OS1_S1 + 3) = X_PA * *(b + 968 * OS1_S1 + 3) + alpha_X * *(b + 968 * OS1_S1 + 4);
            *(b + 1122 * OS1_S1 + 3) = Y_PA * *(b + 952 * OS1_S1 + 3) + alpha_Y * *(b + 952 * OS1_S1 + 4) + 16 * one_over_two_p * (*(b + 800 * OS1_S1 + 3) - alpha_over_p * *(b + 800 * OS1_S1 + 4));
            *(b + 1123 * OS1_S1 + 3) = Z_PA * *(b + 952 * OS1_S1 + 3) + alpha_Z * *(b + 952 * OS1_S1 + 4);
            *(b + 1124 * OS1_S1 + 3) = Z_PA * *(b + 953 * OS1_S1 + 3) + alpha_Z * *(b + 953 * OS1_S1 + 4) + one_over_two_p * (*(b + 800 * OS1_S1 + 3) - alpha_over_p * *(b + 800 * OS1_S1 + 4));
            *(b + 1125 * OS1_S1 + 3) = Z_PA * *(b + 954 * OS1_S1 + 3) + alpha_Z * *(b + 954 * OS1_S1 + 4) + 2 * one_over_two_p * (*(b + 801 * OS1_S1 + 3) - alpha_over_p * *(b + 801 * OS1_S1 + 4));
            *(b + 1126 * OS1_S1 + 3) = Z_PA * *(b + 955 * OS1_S1 + 3) + alpha_Z * *(b + 955 * OS1_S1 + 4) + 3 * one_over_two_p * (*(b + 802 * OS1_S1 + 3) - alpha_over_p * *(b + 802 * OS1_S1 + 4));
            *(b + 1127 * OS1_S1 + 3) = Z_PA * *(b + 956 * OS1_S1 + 3) + alpha_Z * *(b + 956 * OS1_S1 + 4) + 4 * one_over_two_p * (*(b + 803 * OS1_S1 + 3) - alpha_over_p * *(b + 803 * OS1_S1 + 4));
            *(b + 1128 * OS1_S1 + 3) = Z_PA * *(b + 957 * OS1_S1 + 3) + alpha_Z * *(b + 957 * OS1_S1 + 4) + 5 * one_over_two_p * (*(b + 804 * OS1_S1 + 3) - alpha_over_p * *(b + 804 * OS1_S1 + 4));
            *(b + 1129 * OS1_S1 + 3) = Z_PA * *(b + 958 * OS1_S1 + 3) + alpha_Z * *(b + 958 * OS1_S1 + 4) + 6 * one_over_two_p * (*(b + 805 * OS1_S1 + 3) - alpha_over_p * *(b + 805 * OS1_S1 + 4));
            *(b + 1130 * OS1_S1 + 3) = Z_PA * *(b + 959 * OS1_S1 + 3) + alpha_Z * *(b + 959 * OS1_S1 + 4) + 7 * one_over_two_p * (*(b + 806 * OS1_S1 + 3) - alpha_over_p * *(b + 806 * OS1_S1 + 4));
            *(b + 1131 * OS1_S1 + 3) = Y_PA * *(b + 961 * OS1_S1 + 3) + alpha_Y * *(b + 961 * OS1_S1 + 4) + 7 * one_over_two_p * (*(b + 809 * OS1_S1 + 3) - alpha_over_p * *(b + 809 * OS1_S1 + 4));
            *(b + 1132 * OS1_S1 + 3) = Y_PA * *(b + 962 * OS1_S1 + 3) + alpha_Y * *(b + 962 * OS1_S1 + 4) + 6 * one_over_two_p * (*(b + 810 * OS1_S1 + 3) - alpha_over_p * *(b + 810 * OS1_S1 + 4));
            *(b + 1133 * OS1_S1 + 3) = Y_PA * *(b + 963 * OS1_S1 + 3) + alpha_Y * *(b + 963 * OS1_S1 + 4) + 5 * one_over_two_p * (*(b + 811 * OS1_S1 + 3) - alpha_over_p * *(b + 811 * OS1_S1 + 4));
            *(b + 1134 * OS1_S1 + 3) = Y_PA * *(b + 964 * OS1_S1 + 3) + alpha_Y * *(b + 964 * OS1_S1 + 4) + 4 * one_over_two_p * (*(b + 812 * OS1_S1 + 3) - alpha_over_p * *(b + 812 * OS1_S1 + 4));
            *(b + 1135 * OS1_S1 + 3) = Y_PA * *(b + 965 * OS1_S1 + 3) + alpha_Y * *(b + 965 * OS1_S1 + 4) + 3 * one_over_two_p * (*(b + 813 * OS1_S1 + 3) - alpha_over_p * *(b + 813 * OS1_S1 + 4));
            *(b + 1136 * OS1_S1 + 3) = Y_PA * *(b + 966 * OS1_S1 + 3) + alpha_Y * *(b + 966 * OS1_S1 + 4) + 2 * one_over_two_p * (*(b + 814 * OS1_S1 + 3) - alpha_over_p * *(b + 814 * OS1_S1 + 4));
            *(b + 1137 * OS1_S1 + 3) = Y_PA * *(b + 967 * OS1_S1 + 3) + alpha_Y * *(b + 967 * OS1_S1 + 4) + one_over_two_p * (*(b + 815 * OS1_S1 + 3) - alpha_over_p * *(b + 815 * OS1_S1 + 4));
            *(b + 1138 * OS1_S1 + 3) = Y_PA * *(b + 968 * OS1_S1 + 3) + alpha_Y * *(b + 968 * OS1_S1 + 4);
            *(b + 1139 * OS1_S1 + 3) = Z_PA * *(b + 968 * OS1_S1 + 3) + alpha_Z * *(b + 968 * OS1_S1 + 4) + 16 * one_over_two_p * (*(b + 815 * OS1_S1 + 3) - alpha_over_p * *(b + 815 * OS1_S1 + 4));
            *(b + 1140 * OS1_S1 + 2) = X_PA * *(b + 969 * OS1_S1 + 2) + alpha_X * *(b + 969 * OS1_S1 + 3) + 17 * one_over_two_p * (*(b + 816 * OS1_S1 + 2) - alpha_over_p * *(b + 816 * OS1_S1 + 3));
            *(b + 1141 * OS1_S1 + 2) = Y_PA * *(b + 969 * OS1_S1 + 2) + alpha_Y * *(b + 969 * OS1_S1 + 3);
            *(b + 1142 * OS1_S1 + 2) = Z_PA * *(b + 969 * OS1_S1 + 2) + alpha_Z * *(b + 969 * OS1_S1 + 3);
            *(b + 1143 * OS1_S1 + 2) = Y_PA * *(b + 970 * OS1_S1 + 2) + alpha_Y * *(b + 970 * OS1_S1 + 3) + one_over_two_p * (*(b + 816 * OS1_S1 + 2) - alpha_over_p * *(b + 816 * OS1_S1 + 3));
            *(b + 1145 * OS1_S1 + 2) = Z_PA * *(b + 971 * OS1_S1 + 2) + alpha_Z * *(b + 971 * OS1_S1 + 3) + one_over_two_p * (*(b + 816 * OS1_S1 + 2) - alpha_over_p * *(b + 816 * OS1_S1 + 3));
            *(b + 1146 * OS1_S1 + 2) = Y_PA * *(b + 972 * OS1_S1 + 2) + alpha_Y * *(b + 972 * OS1_S1 + 3) + 2 * one_over_two_p * (*(b + 817 * OS1_S1 + 2) - alpha_over_p * *(b + 817 * OS1_S1 + 3));
            *(b + 1149 * OS1_S1 + 2) = Z_PA * *(b + 974 * OS1_S1 + 2) + alpha_Z * *(b + 974 * OS1_S1 + 3) + 2 * one_over_two_p * (*(b + 818 * OS1_S1 + 2) - alpha_over_p * *(b + 818 * OS1_S1 + 3));
            *(b + 1150 * OS1_S1 + 2) = Y_PA * *(b + 975 * OS1_S1 + 2) + alpha_Y * *(b + 975 * OS1_S1 + 3) + 3 * one_over_two_p * (*(b + 819 * OS1_S1 + 2) - alpha_over_p * *(b + 819 * OS1_S1 + 3));
            *(b + 1151 * OS1_S1 + 2) = Z_PA * *(b + 975 * OS1_S1 + 2) + alpha_Z * *(b + 975 * OS1_S1 + 3);
            *(b + 1154 * OS1_S1 + 2) = Z_PA * *(b + 978 * OS1_S1 + 2) + alpha_Z * *(b + 978 * OS1_S1 + 3) + 3 * one_over_two_p * (*(b + 821 * OS1_S1 + 2) - alpha_over_p * *(b + 821 * OS1_S1 + 3));
            *(b + 1155 * OS1_S1 + 2) = Y_PA * *(b + 979 * OS1_S1 + 2) + alpha_Y * *(b + 979 * OS1_S1 + 3) + 4 * one_over_two_p * (*(b + 822 * OS1_S1 + 2) - alpha_over_p * *(b + 822 * OS1_S1 + 3));
            *(b + 1156 * OS1_S1 + 2) = Z_PA * *(b + 979 * OS1_S1 + 2) + alpha_Z * *(b + 979 * OS1_S1 + 3);
            *(b + 1159 * OS1_S1 + 2) = Y_PA * *(b + 983 * OS1_S1 + 2) + alpha_Y * *(b + 983 * OS1_S1 + 3);
            *(b + 1160 * OS1_S1 + 2) = Z_PA * *(b + 983 * OS1_S1 + 2) + alpha_Z * *(b + 983 * OS1_S1 + 3) + 4 * one_over_two_p * (*(b + 825 * OS1_S1 + 2) - alpha_over_p * *(b + 825 * OS1_S1 + 3));
            *(b + 1161 * OS1_S1 + 2) = Y_PA * *(b + 984 * OS1_S1 + 2) + alpha_Y * *(b + 984 * OS1_S1 + 3) + 5 * one_over_two_p * (*(b + 826 * OS1_S1 + 2) - alpha_over_p * *(b + 826 * OS1_S1 + 3));
            *(b + 1162 * OS1_S1 + 2) = Z_PA * *(b + 984 * OS1_S1 + 2) + alpha_Z * *(b + 984 * OS1_S1 + 3);
            *(b + 1163 * OS1_S1 + 2) = Z_PA * *(b + 985 * OS1_S1 + 2) + alpha_Z * *(b + 985 * OS1_S1 + 3) + one_over_two_p * (*(b + 826 * OS1_S1 + 2) - alpha_over_p * *(b + 826 * OS1_S1 + 3));
            *(b + 1166 * OS1_S1 + 2) = Y_PA * *(b + 989 * OS1_S1 + 2) + alpha_Y * *(b + 989 * OS1_S1 + 3);
            *(b + 1167 * OS1_S1 + 2) = Z_PA * *(b + 989 * OS1_S1 + 2) + alpha_Z * *(b + 989 * OS1_S1 + 3) + 5 * one_over_two_p * (*(b + 830 * OS1_S1 + 2) - alpha_over_p * *(b + 830 * OS1_S1 + 3));
            *(b + 1168 * OS1_S1 + 2) = Y_PA * *(b + 990 * OS1_S1 + 2) + alpha_Y * *(b + 990 * OS1_S1 + 3) + 6 * one_over_two_p * (*(b + 831 * OS1_S1 + 2) - alpha_over_p * *(b + 831 * OS1_S1 + 3));
            *(b + 1169 * OS1_S1 + 2) = Z_PA * *(b + 990 * OS1_S1 + 2) + alpha_Z * *(b + 990 * OS1_S1 + 3);
            *(b + 1170 * OS1_S1 + 2) = Z_PA * *(b + 991 * OS1_S1 + 2) + alpha_Z * *(b + 991 * OS1_S1 + 3) + one_over_two_p * (*(b + 831 * OS1_S1 + 2) - alpha_over_p * *(b + 831 * OS1_S1 + 3));
            *(b + 1173 * OS1_S1 + 2) = Y_PA * *(b + 995 * OS1_S1 + 2) + alpha_Y * *(b + 995 * OS1_S1 + 3) + one_over_two_p * (*(b + 836 * OS1_S1 + 2) - alpha_over_p * *(b + 836 * OS1_S1 + 3));
            *(b + 1174 * OS1_S1 + 2) = Y_PA * *(b + 996 * OS1_S1 + 2) + alpha_Y * *(b + 996 * OS1_S1 + 3);
            *(b + 1175 * OS1_S1 + 2) = Z_PA * *(b + 996 * OS1_S1 + 2) + alpha_Z * *(b + 996 * OS1_S1 + 3) + 6 * one_over_two_p * (*(b + 836 * OS1_S1 + 2) - alpha_over_p * *(b + 836 * OS1_S1 + 3));
            *(b + 1176 * OS1_S1 + 2) = Y_PA * *(b + 997 * OS1_S1 + 2) + alpha_Y * *(b + 997 * OS1_S1 + 3) + 7 * one_over_two_p * (*(b + 837 * OS1_S1 + 2) - alpha_over_p * *(b + 837 * OS1_S1 + 3));
            *(b + 1177 * OS1_S1 + 2) = Z_PA * *(b + 997 * OS1_S1 + 2) + alpha_Z * *(b + 997 * OS1_S1 + 3);
            *(b + 1178 * OS1_S1 + 2) = Z_PA * *(b + 998 * OS1_S1 + 2) + alpha_Z * *(b + 998 * OS1_S1 + 3) + one_over_two_p * (*(b + 837 * OS1_S1 + 2) - alpha_over_p * *(b + 837 * OS1_S1 + 3));
            *(b + 1179 * OS1_S1 + 2) = Z_PA * *(b + 999 * OS1_S1 + 2) + alpha_Z * *(b + 999 * OS1_S1 + 3) + 2 * one_over_two_p * (*(b + 838 * OS1_S1 + 2) - alpha_over_p * *(b + 838 * OS1_S1 + 3));
            *(b + 1182 * OS1_S1 + 2) = Y_PA * *(b + 1003 * OS1_S1 + 2) + alpha_Y * *(b + 1003 * OS1_S1 + 3) + one_over_two_p * (*(b + 843 * OS1_S1 + 2) - alpha_over_p * *(b + 843 * OS1_S1 + 3));
            *(b + 1183 * OS1_S1 + 2) = Y_PA * *(b + 1004 * OS1_S1 + 2) + alpha_Y * *(b + 1004 * OS1_S1 + 3);
            *(b + 1184 * OS1_S1 + 2) = Z_PA * *(b + 1004 * OS1_S1 + 2) + alpha_Z * *(b + 1004 * OS1_S1 + 3) + 7 * one_over_two_p * (*(b + 843 * OS1_S1 + 2) - alpha_over_p * *(b + 843 * OS1_S1 + 3));
            *(b + 1185 * OS1_S1 + 2) = Y_PA * *(b + 1005 * OS1_S1 + 2) + alpha_Y * *(b + 1005 * OS1_S1 + 3) + 8 * one_over_two_p * (*(b + 844 * OS1_S1 + 2) - alpha_over_p * *(b + 844 * OS1_S1 + 3));
            *(b + 1186 * OS1_S1 + 2) = Z_PA * *(b + 1005 * OS1_S1 + 2) + alpha_Z * *(b + 1005 * OS1_S1 + 3);
            *(b + 1187 * OS1_S1 + 2) = Z_PA * *(b + 1006 * OS1_S1 + 2) + alpha_Z * *(b + 1006 * OS1_S1 + 3) + one_over_two_p * (*(b + 844 * OS1_S1 + 2) - alpha_over_p * *(b + 844 * OS1_S1 + 3));
            *(b + 1188 * OS1_S1 + 2) = Z_PA * *(b + 1007 * OS1_S1 + 2) + alpha_Z * *(b + 1007 * OS1_S1 + 3) + 2 * one_over_two_p * (*(b + 845 * OS1_S1 + 2) - alpha_over_p * *(b + 845 * OS1_S1 + 3));
            *(b + 1191 * OS1_S1 + 2) = Y_PA * *(b + 1011 * OS1_S1 + 2) + alpha_Y * *(b + 1011 * OS1_S1 + 3) + 2 * one_over_two_p * (*(b + 850 * OS1_S1 + 2) - alpha_over_p * *(b + 850 * OS1_S1 + 3));
            *(b + 1192 * OS1_S1 + 2) = Y_PA * *(b + 1012 * OS1_S1 + 2) + alpha_Y * *(b + 1012 * OS1_S1 + 3) + one_over_two_p * (*(b + 851 * OS1_S1 + 2) - alpha_over_p * *(b + 851 * OS1_S1 + 3));
            *(b + 1193 * OS1_S1 + 2) = Y_PA * *(b + 1013 * OS1_S1 + 2) + alpha_Y * *(b + 1013 * OS1_S1 + 3);
            *(b + 1194 * OS1_S1 + 2) = Z_PA * *(b + 1013 * OS1_S1 + 2) + alpha_Z * *(b + 1013 * OS1_S1 + 3) + 8 * one_over_two_p * (*(b + 851 * OS1_S1 + 2) - alpha_over_p * *(b + 851 * OS1_S1 + 3));
            *(b + 1195 * OS1_S1 + 2) = X_PA * *(b + 1024 * OS1_S1 + 2) + alpha_X * *(b + 1024 * OS1_S1 + 3) + 7 * one_over_two_p * (*(b + 871 * OS1_S1 + 2) - alpha_over_p * *(b + 871 * OS1_S1 + 3));
            *(b + 1196 * OS1_S1 + 2) = Z_PA * *(b + 1014 * OS1_S1 + 2) + alpha_Z * *(b + 1014 * OS1_S1 + 3);
            *(b + 1197 * OS1_S1 + 2) = Z_PA * *(b + 1015 * OS1_S1 + 2) + alpha_Z * *(b + 1015 * OS1_S1 + 3) + one_over_two_p * (*(b + 852 * OS1_S1 + 2) - alpha_over_p * *(b + 852 * OS1_S1 + 3));
            *(b + 1198 * OS1_S1 + 2) = Z_PA * *(b + 1016 * OS1_S1 + 2) + alpha_Z * *(b + 1016 * OS1_S1 + 3) + 2 * one_over_two_p * (*(b + 853 * OS1_S1 + 2) - alpha_over_p * *(b + 853 * OS1_S1 + 3));
            *(b + 1199 * OS1_S1 + 2) = Z_PA * *(b + 1017 * OS1_S1 + 2) + alpha_Z * *(b + 1017 * OS1_S1 + 3) + 3 * one_over_two_p * (*(b + 854 * OS1_S1 + 2) - alpha_over_p * *(b + 854 * OS1_S1 + 3));
            *(b + 1202 * OS1_S1 + 2) = Y_PA * *(b + 1021 * OS1_S1 + 2) + alpha_Y * *(b + 1021 * OS1_S1 + 3) + 2 * one_over_two_p * (*(b + 859 * OS1_S1 + 2) - alpha_over_p * *(b + 859 * OS1_S1 + 3));
            *(b + 1203 * OS1_S1 + 2) = Y_PA * *(b + 1022 * OS1_S1 + 2) + alpha_Y * *(b + 1022 * OS1_S1 + 3) + one_over_two_p * (*(b + 860 * OS1_S1 + 2) - alpha_over_p * *(b + 860 * OS1_S1 + 3));
            *(b + 1204 * OS1_S1 + 2) = Y_PA * *(b + 1023 * OS1_S1 + 2) + alpha_Y * *(b + 1023 * OS1_S1 + 3);
            *(b + 1205 * OS1_S1 + 2) = X_PA * *(b + 1034 * OS1_S1 + 2) + alpha_X * *(b + 1034 * OS1_S1 + 3) + 7 * one_over_two_p * (*(b + 881 * OS1_S1 + 2) - alpha_over_p * *(b + 881 * OS1_S1 + 3));
            *(b + 1206 * OS1_S1 + 2) = X_PA * *(b + 1035 * OS1_S1 + 2) + alpha_X * *(b + 1035 * OS1_S1 + 3) + 6 * one_over_two_p * (*(b + 882 * OS1_S1 + 2) - alpha_over_p * *(b + 882 * OS1_S1 + 3));
            *(b + 1207 * OS1_S1 + 2) = Z_PA * *(b + 1024 * OS1_S1 + 2) + alpha_Z * *(b + 1024 * OS1_S1 + 3);
            *(b + 1208 * OS1_S1 + 2) = Z_PA * *(b + 1025 * OS1_S1 + 2) + alpha_Z * *(b + 1025 * OS1_S1 + 3) + one_over_two_p * (*(b + 861 * OS1_S1 + 2) - alpha_over_p * *(b + 861 * OS1_S1 + 3));
            *(b + 1209 * OS1_S1 + 2) = Z_PA * *(b + 1026 * OS1_S1 + 2) + alpha_Z * *(b + 1026 * OS1_S1 + 3) + 2 * one_over_two_p * (*(b + 862 * OS1_S1 + 2) - alpha_over_p * *(b + 862 * OS1_S1 + 3));
            *(b + 1210 * OS1_S1 + 2) = Z_PA * *(b + 1027 * OS1_S1 + 2) + alpha_Z * *(b + 1027 * OS1_S1 + 3) + 3 * one_over_two_p * (*(b + 863 * OS1_S1 + 2) - alpha_over_p * *(b + 863 * OS1_S1 + 3));
            *(b + 1213 * OS1_S1 + 2) = Y_PA * *(b + 1031 * OS1_S1 + 2) + alpha_Y * *(b + 1031 * OS1_S1 + 3) + 3 * one_over_two_p * (*(b + 868 * OS1_S1 + 2) - alpha_over_p * *(b + 868 * OS1_S1 + 3));
            *(b + 1214 * OS1_S1 + 2) = Y_PA * *(b + 1032 * OS1_S1 + 2) + alpha_Y * *(b + 1032 * OS1_S1 + 3) + 2 * one_over_two_p * (*(b + 869 * OS1_S1 + 2) - alpha_over_p * *(b + 869 * OS1_S1 + 3));
            *(b + 1215 * OS1_S1 + 2) = Y_PA * *(b + 1033 * OS1_S1 + 2) + alpha_Y * *(b + 1033 * OS1_S1 + 3) + one_over_two_p * (*(b + 870 * OS1_S1 + 2) - alpha_over_p * *(b + 870 * OS1_S1 + 3));
            *(b + 1216 * OS1_S1 + 2) = Y_PA * *(b + 1034 * OS1_S1 + 2) + alpha_Y * *(b + 1034 * OS1_S1 + 3);
            *(b + 1217 * OS1_S1 + 2) = X_PA * *(b + 1046 * OS1_S1 + 2) + alpha_X * *(b + 1046 * OS1_S1 + 3) + 6 * one_over_two_p * (*(b + 893 * OS1_S1 + 2) - alpha_over_p * *(b + 893 * OS1_S1 + 3));
            *(b + 1218 * OS1_S1 + 2) = X_PA * *(b + 1047 * OS1_S1 + 2) + alpha_X * *(b + 1047 * OS1_S1 + 3) + 5 * one_over_two_p * (*(b + 894 * OS1_S1 + 2) - alpha_over_p * *(b + 894 * OS1_S1 + 3));
            *(b + 1219 * OS1_S1 + 2) = Z_PA * *(b + 1035 * OS1_S1 + 2) + alpha_Z * *(b + 1035 * OS1_S1 + 3);
            *(b + 1220 * OS1_S1 + 2) = Z_PA * *(b + 1036 * OS1_S1 + 2) + alpha_Z * *(b + 1036 * OS1_S1 + 3) + one_over_two_p * (*(b + 871 * OS1_S1 + 2) - alpha_over_p * *(b + 871 * OS1_S1 + 3));
            *(b + 1221 * OS1_S1 + 2) = Z_PA * *(b + 1037 * OS1_S1 + 2) + alpha_Z * *(b + 1037 * OS1_S1 + 3) + 2 * one_over_two_p * (*(b + 872 * OS1_S1 + 2) - alpha_over_p * *(b + 872 * OS1_S1 + 3));
            *(b + 1222 * OS1_S1 + 2) = Z_PA * *(b + 1038 * OS1_S1 + 2) + alpha_Z * *(b + 1038 * OS1_S1 + 3) + 3 * one_over_two_p * (*(b + 873 * OS1_S1 + 2) - alpha_over_p * *(b + 873 * OS1_S1 + 3));
            *(b + 1226 * OS1_S1 + 2) = Y_PA * *(b + 1043 * OS1_S1 + 2) + alpha_Y * *(b + 1043 * OS1_S1 + 3) + 3 * one_over_two_p * (*(b + 879 * OS1_S1 + 2) - alpha_over_p * *(b + 879 * OS1_S1 + 3));
            *(b + 1227 * OS1_S1 + 2) = Y_PA * *(b + 1044 * OS1_S1 + 2) + alpha_Y * *(b + 1044 * OS1_S1 + 3) + 2 * one_over_two_p * (*(b + 880 * OS1_S1 + 2) - alpha_over_p * *(b + 880 * OS1_S1 + 3));
            *(b + 1228 * OS1_S1 + 2) = Y_PA * *(b + 1045 * OS1_S1 + 2) + alpha_Y * *(b + 1045 * OS1_S1 + 3) + one_over_two_p * (*(b + 881 * OS1_S1 + 2) - alpha_over_p * *(b + 881 * OS1_S1 + 3));
            *(b + 1229 * OS1_S1 + 2) = Y_PA * *(b + 1046 * OS1_S1 + 2) + alpha_Y * *(b + 1046 * OS1_S1 + 3);
            *(b + 1230 * OS1_S1 + 2) = X_PA * *(b + 1059 * OS1_S1 + 2) + alpha_X * *(b + 1059 * OS1_S1 + 3) + 5 * one_over_two_p * (*(b + 906 * OS1_S1 + 2) - alpha_over_p * *(b + 906 * OS1_S1 + 3));
            *(b + 1231 * OS1_S1 + 2) = X_PA * *(b + 1060 * OS1_S1 + 2) + alpha_X * *(b + 1060 * OS1_S1 + 3) + 4 * one_over_two_p * (*(b + 907 * OS1_S1 + 2) - alpha_over_p * *(b + 907 * OS1_S1 + 3));
            *(b + 1232 * OS1_S1 + 2) = Z_PA * *(b + 1047 * OS1_S1 + 2) + alpha_Z * *(b + 1047 * OS1_S1 + 3);
            *(b + 1233 * OS1_S1 + 2) = Z_PA * *(b + 1048 * OS1_S1 + 2) + alpha_Z * *(b + 1048 * OS1_S1 + 3) + one_over_two_p * (*(b + 882 * OS1_S1 + 2) - alpha_over_p * *(b + 882 * OS1_S1 + 3));
            *(b + 1234 * OS1_S1 + 2) = Z_PA * *(b + 1049 * OS1_S1 + 2) + alpha_Z * *(b + 1049 * OS1_S1 + 3) + 2 * one_over_two_p * (*(b + 883 * OS1_S1 + 2) - alpha_over_p * *(b + 883 * OS1_S1 + 3));
            *(b + 1241 * OS1_S1 + 2) = Y_PA * *(b + 1057 * OS1_S1 + 2) + alpha_Y * *(b + 1057 * OS1_S1 + 3) + 2 * one_over_two_p * (*(b + 892 * OS1_S1 + 2) - alpha_over_p * *(b + 892 * OS1_S1 + 3));
            *(b + 1242 * OS1_S1 + 2) = Y_PA * *(b + 1058 * OS1_S1 + 2) + alpha_Y * *(b + 1058 * OS1_S1 + 3) + one_over_two_p * (*(b + 893 * OS1_S1 + 2) - alpha_over_p * *(b + 893 * OS1_S1 + 3));
            *(b + 1243 * OS1_S1 + 2) = Y_PA * *(b + 1059 * OS1_S1 + 2) + alpha_Y * *(b + 1059 * OS1_S1 + 3);
            *(b + 1244 * OS1_S1 + 2) = X_PA * *(b + 1073 * OS1_S1 + 2) + alpha_X * *(b + 1073 * OS1_S1 + 3) + 4 * one_over_two_p * (*(b + 920 * OS1_S1 + 2) - alpha_over_p * *(b + 920 * OS1_S1 + 3));
            *(b + 1245 * OS1_S1 + 2) = X_PA * *(b + 1074 * OS1_S1 + 2) + alpha_X * *(b + 1074 * OS1_S1 + 3) + 3 * one_over_two_p * (*(b + 921 * OS1_S1 + 2) - alpha_over_p * *(b + 921 * OS1_S1 + 3));
            *(b + 1246 * OS1_S1 + 2) = Z_PA * *(b + 1060 * OS1_S1 + 2) + alpha_Z * *(b + 1060 * OS1_S1 + 3);
            *(b + 1247 * OS1_S1 + 2) = Z_PA * *(b + 1061 * OS1_S1 + 2) + alpha_Z * *(b + 1061 * OS1_S1 + 3) + one_over_two_p * (*(b + 894 * OS1_S1 + 2) - alpha_over_p * *(b + 894 * OS1_S1 + 3));
            *(b + 1252 * OS1_S1 + 2) = X_PA * *(b + 1081 * OS1_S1 + 2) + alpha_X * *(b + 1081 * OS1_S1 + 3) + 3 * one_over_two_p * (*(b + 928 * OS1_S1 + 2) - alpha_over_p * *(b + 928 * OS1_S1 + 3));
            *(b + 1257 * OS1_S1 + 2) = Y_PA * *(b + 1072 * OS1_S1 + 2) + alpha_Y * *(b + 1072 * OS1_S1 + 3) + one_over_two_p * (*(b + 906 * OS1_S1 + 2) - alpha_over_p * *(b + 906 * OS1_S1 + 3));
            *(b + 1258 * OS1_S1 + 2) = Y_PA * *(b + 1073 * OS1_S1 + 2) + alpha_Y * *(b + 1073 * OS1_S1 + 3);
            *(b + 1259 * OS1_S1 + 2) = X_PA * *(b + 1088 * OS1_S1 + 2) + alpha_X * *(b + 1088 * OS1_S1 + 3) + 3 * one_over_two_p * (*(b + 935 * OS1_S1 + 2) - alpha_over_p * *(b + 935 * OS1_S1 + 3));
            *(b + 1260 * OS1_S1 + 2) = X_PA * *(b + 1089 * OS1_S1 + 2) + alpha_X * *(b + 1089 * OS1_S1 + 3) + 2 * one_over_two_p * (*(b + 936 * OS1_S1 + 2) - alpha_over_p * *(b + 936 * OS1_S1 + 3));
            *(b + 1261 * OS1_S1 + 2) = Z_PA * *(b + 1074 * OS1_S1 + 2) + alpha_Z * *(b + 1074 * OS1_S1 + 3);
            *(b + 1266 * OS1_S1 + 2) = X_PA * *(b + 1095 * OS1_S1 + 2) + alpha_X * *(b + 1095 * OS1_S1 + 3) + 2 * one_over_two_p * (*(b + 942 * OS1_S1 + 2) - alpha_over_p * *(b + 942 * OS1_S1 + 3));
            *(b + 1267 * OS1_S1 + 2) = X_PA * *(b + 1096 * OS1_S1 + 2) + alpha_X * *(b + 1096 * OS1_S1 + 3) + 2 * one_over_two_p * (*(b + 943 * OS1_S1 + 2) - alpha_over_p * *(b + 943 * OS1_S1 + 3));
            *(b + 1268 * OS1_S1 + 2) = X_PA * *(b + 1097 * OS1_S1 + 2) + alpha_X * *(b + 1097 * OS1_S1 + 3) + 2 * one_over_two_p * (*(b + 944 * OS1_S1 + 2) - alpha_over_p * *(b + 944 * OS1_S1 + 3));
            *(b + 1269 * OS1_S1 + 2) = X_PA * *(b + 1098 * OS1_S1 + 2) + alpha_X * *(b + 1098 * OS1_S1 + 3) + 2 * one_over_two_p * (*(b + 945 * OS1_S1 + 2) - alpha_over_p * *(b + 945 * OS1_S1 + 3));
            *(b + 1274 * OS1_S1 + 2) = Y_PA * *(b + 1088 * OS1_S1 + 2) + alpha_Y * *(b + 1088 * OS1_S1 + 3);
            *(b + 1275 * OS1_S1 + 2) = X_PA * *(b + 1104 * OS1_S1 + 2) + alpha_X * *(b + 1104 * OS1_S1 + 3) + 2 * one_over_two_p * (*(b + 951 * OS1_S1 + 2) - alpha_over_p * *(b + 951 * OS1_S1 + 3));
            *(b + 1276 * OS1_S1 + 2) = X_PA * *(b + 1105 * OS1_S1 + 2) + alpha_X * *(b + 1105 * OS1_S1 + 3) + one_over_two_p * (*(b + 952 * OS1_S1 + 2) - alpha_over_p * *(b + 952 * OS1_S1 + 3));
            *(b + 1281 * OS1_S1 + 2) = X_PA * *(b + 1110 * OS1_S1 + 2) + alpha_X * *(b + 1110 * OS1_S1 + 3) + one_over_two_p * (*(b + 957 * OS1_S1 + 2) - alpha_over_p * *(b + 957 * OS1_S1 + 3));
            *(b + 1282 * OS1_S1 + 2) = X_PA * *(b + 1111 * OS1_S1 + 2) + alpha_X * *(b + 1111 * OS1_S1 + 3) + one_over_two_p * (*(b + 958 * OS1_S1 + 2) - alpha_over_p * *(b + 958 * OS1_S1 + 3));
            *(b + 1283 * OS1_S1 + 2) = X_PA * *(b + 1112 * OS1_S1 + 2) + alpha_X * *(b + 1112 * OS1_S1 + 3) + one_over_two_p * (*(b + 959 * OS1_S1 + 2) - alpha_over_p * *(b + 959 * OS1_S1 + 3));
            *(b + 1284 * OS1_S1 + 2) = X_PA * *(b + 1113 * OS1_S1 + 2) + alpha_X * *(b + 1113 * OS1_S1 + 3) + one_over_two_p * (*(b + 960 * OS1_S1 + 2) - alpha_over_p * *(b + 960 * OS1_S1 + 3));
            *(b + 1285 * OS1_S1 + 2) = X_PA * *(b + 1114 * OS1_S1 + 2) + alpha_X * *(b + 1114 * OS1_S1 + 3) + one_over_two_p * (*(b + 961 * OS1_S1 + 2) - alpha_over_p * *(b + 961 * OS1_S1 + 3));
            *(b + 1286 * OS1_S1 + 2) = X_PA * *(b + 1115 * OS1_S1 + 2) + alpha_X * *(b + 1115 * OS1_S1 + 3) + one_over_two_p * (*(b + 962 * OS1_S1 + 2) - alpha_over_p * *(b + 962 * OS1_S1 + 3));
            *(b + 1287 * OS1_S1 + 2) = X_PA * *(b + 1116 * OS1_S1 + 2) + alpha_X * *(b + 1116 * OS1_S1 + 3) + one_over_two_p * (*(b + 963 * OS1_S1 + 2) - alpha_over_p * *(b + 963 * OS1_S1 + 3));
            *(b + 1292 * OS1_S1 + 2) = X_PA * *(b + 1121 * OS1_S1 + 2) + alpha_X * *(b + 1121 * OS1_S1 + 3) + one_over_two_p * (*(b + 968 * OS1_S1 + 2) - alpha_over_p * *(b + 968 * OS1_S1 + 3));
            *(b + 1293 * OS1_S1 + 2) = X_PA * *(b + 1122 * OS1_S1 + 2) + alpha_X * *(b + 1122 * OS1_S1 + 3);
            *(b + 1297 * OS1_S1 + 2) = X_PA * *(b + 1126 * OS1_S1 + 2) + alpha_X * *(b + 1126 * OS1_S1 + 3);
            *(b + 1298 * OS1_S1 + 2) = X_PA * *(b + 1127 * OS1_S1 + 2) + alpha_X * *(b + 1127 * OS1_S1 + 3);
            *(b + 1299 * OS1_S1 + 2) = X_PA * *(b + 1128 * OS1_S1 + 2) + alpha_X * *(b + 1128 * OS1_S1 + 3);
            *(b + 1300 * OS1_S1 + 2) = X_PA * *(b + 1129 * OS1_S1 + 2) + alpha_X * *(b + 1129 * OS1_S1 + 3);
            *(b + 1301 * OS1_S1 + 2) = X_PA * *(b + 1130 * OS1_S1 + 2) + alpha_X * *(b + 1130 * OS1_S1 + 3);
            *(b + 1302 * OS1_S1 + 2) = X_PA * *(b + 1131 * OS1_S1 + 2) + alpha_X * *(b + 1131 * OS1_S1 + 3);
            *(b + 1303 * OS1_S1 + 2) = X_PA * *(b + 1132 * OS1_S1 + 2) + alpha_X * *(b + 1132 * OS1_S1 + 3);
            *(b + 1304 * OS1_S1 + 2) = X_PA * *(b + 1133 * OS1_S1 + 2) + alpha_X * *(b + 1133 * OS1_S1 + 3);
            *(b + 1305 * OS1_S1 + 2) = X_PA * *(b + 1134 * OS1_S1 + 2) + alpha_X * *(b + 1134 * OS1_S1 + 3);
            *(b + 1306 * OS1_S1 + 2) = X_PA * *(b + 1135 * OS1_S1 + 2) + alpha_X * *(b + 1135 * OS1_S1 + 3);
            *(b + 1310 * OS1_S1 + 2) = X_PA * *(b + 1139 * OS1_S1 + 2) + alpha_X * *(b + 1139 * OS1_S1 + 3);
            *(b + 1311 * OS1_S1 + 2) = Y_PA * *(b + 1122 * OS1_S1 + 2) + alpha_Y * *(b + 1122 * OS1_S1 + 3) + 17 * one_over_two_p * (*(b + 952 * OS1_S1 + 2) - alpha_over_p * *(b + 952 * OS1_S1 + 3));
            *(b + 1312 * OS1_S1 + 2) = Z_PA * *(b + 1122 * OS1_S1 + 2) + alpha_Z * *(b + 1122 * OS1_S1 + 3);
            *(b + 1313 * OS1_S1 + 2) = Z_PA * *(b + 1123 * OS1_S1 + 2) + alpha_Z * *(b + 1123 * OS1_S1 + 3) + one_over_two_p * (*(b + 952 * OS1_S1 + 2) - alpha_over_p * *(b + 952 * OS1_S1 + 3));
            *(b + 1314 * OS1_S1 + 2) = Z_PA * *(b + 1124 * OS1_S1 + 2) + alpha_Z * *(b + 1124 * OS1_S1 + 3) + 2 * one_over_two_p * (*(b + 953 * OS1_S1 + 2) - alpha_over_p * *(b + 953 * OS1_S1 + 3));
            *(b + 1315 * OS1_S1 + 2) = Z_PA * *(b + 1125 * OS1_S1 + 2) + alpha_Z * *(b + 1125 * OS1_S1 + 3) + 3 * one_over_two_p * (*(b + 954 * OS1_S1 + 2) - alpha_over_p * *(b + 954 * OS1_S1 + 3));
            *(b + 1316 * OS1_S1 + 2) = Z_PA * *(b + 1126 * OS1_S1 + 2) + alpha_Z * *(b + 1126 * OS1_S1 + 3) + 4 * one_over_two_p * (*(b + 955 * OS1_S1 + 2) - alpha_over_p * *(b + 955 * OS1_S1 + 3));
            *(b + 1317 * OS1_S1 + 2) = Z_PA * *(b + 1127 * OS1_S1 + 2) + alpha_Z * *(b + 1127 * OS1_S1 + 3) + 5 * one_over_two_p * (*(b + 956 * OS1_S1 + 2) - alpha_over_p * *(b + 956 * OS1_S1 + 3));
            *(b + 1318 * OS1_S1 + 2) = Z_PA * *(b + 1128 * OS1_S1 + 2) + alpha_Z * *(b + 1128 * OS1_S1 + 3) + 6 * one_over_two_p * (*(b + 957 * OS1_S1 + 2) - alpha_over_p * *(b + 957 * OS1_S1 + 3));
            *(b + 1319 * OS1_S1 + 2) = Z_PA * *(b + 1129 * OS1_S1 + 2) + alpha_Z * *(b + 1129 * OS1_S1 + 3) + 7 * one_over_two_p * (*(b + 958 * OS1_S1 + 2) - alpha_over_p * *(b + 958 * OS1_S1 + 3));
            *(b + 1320 * OS1_S1 + 2) = Z_PA * *(b + 1130 * OS1_S1 + 2) + alpha_Z * *(b + 1130 * OS1_S1 + 3) + 8 * one_over_two_p * (*(b + 959 * OS1_S1 + 2) - alpha_over_p * *(b + 959 * OS1_S1 + 3));
            *(b + 1321 * OS1_S1 + 2) = Y_PA * *(b + 1132 * OS1_S1 + 2) + alpha_Y * *(b + 1132 * OS1_S1 + 3) + 7 * one_over_two_p * (*(b + 962 * OS1_S1 + 2) - alpha_over_p * *(b + 962 * OS1_S1 + 3));
            *(b + 1322 * OS1_S1 + 2) = Y_PA * *(b + 1133 * OS1_S1 + 2) + alpha_Y * *(b + 1133 * OS1_S1 + 3) + 6 * one_over_two_p * (*(b + 963 * OS1_S1 + 2) - alpha_over_p * *(b + 963 * OS1_S1 + 3));
            *(b + 1323 * OS1_S1 + 2) = Y_PA * *(b + 1134 * OS1_S1 + 2) + alpha_Y * *(b + 1134 * OS1_S1 + 3) + 5 * one_over_two_p * (*(b + 964 * OS1_S1 + 2) - alpha_over_p * *(b + 964 * OS1_S1 + 3));
            *(b + 1324 * OS1_S1 + 2) = Y_PA * *(b + 1135 * OS1_S1 + 2) + alpha_Y * *(b + 1135 * OS1_S1 + 3) + 4 * one_over_two_p * (*(b + 965 * OS1_S1 + 2) - alpha_over_p * *(b + 965 * OS1_S1 + 3));
            *(b + 1325 * OS1_S1 + 2) = Y_PA * *(b + 1136 * OS1_S1 + 2) + alpha_Y * *(b + 1136 * OS1_S1 + 3) + 3 * one_over_two_p * (*(b + 966 * OS1_S1 + 2) - alpha_over_p * *(b + 966 * OS1_S1 + 3));
            *(b + 1326 * OS1_S1 + 2) = Y_PA * *(b + 1137 * OS1_S1 + 2) + alpha_Y * *(b + 1137 * OS1_S1 + 3) + 2 * one_over_two_p * (*(b + 967 * OS1_S1 + 2) - alpha_over_p * *(b + 967 * OS1_S1 + 3));
            *(b + 1327 * OS1_S1 + 2) = Y_PA * *(b + 1138 * OS1_S1 + 2) + alpha_Y * *(b + 1138 * OS1_S1 + 3) + one_over_two_p * (*(b + 968 * OS1_S1 + 2) - alpha_over_p * *(b + 968 * OS1_S1 + 3));
            *(b + 1328 * OS1_S1 + 2) = Y_PA * *(b + 1139 * OS1_S1 + 2) + alpha_Y * *(b + 1139 * OS1_S1 + 3);
            *(b + 1329 * OS1_S1 + 2) = Z_PA * *(b + 1139 * OS1_S1 + 2) + alpha_Z * *(b + 1139 * OS1_S1 + 3) + 17 * one_over_two_p * (*(b + 968 * OS1_S1 + 2) - alpha_over_p * *(b + 968 * OS1_S1 + 3));
            *(b + 1330 * OS1_S1 + 1) = X_PA * *(b + 1140 * OS1_S1 + 1) + alpha_X * *(b + 1140 * OS1_S1 + 2) + 18 * one_over_two_p * (*(b + 969 * OS1_S1 + 1) - alpha_over_p * *(b + 969 * OS1_S1 + 2));
            *(b + 1331 * OS1_S1 + 1) = Y_PA * *(b + 1140 * OS1_S1 + 1) + alpha_Y * *(b + 1140 * OS1_S1 + 2);
            *(b + 1332 * OS1_S1 + 1) = Z_PA * *(b + 1140 * OS1_S1 + 1) + alpha_Z * *(b + 1140 * OS1_S1 + 2);
            *(b + 1333 * OS1_S1 + 1) = Y_PA * *(b + 1141 * OS1_S1 + 1) + alpha_Y * *(b + 1141 * OS1_S1 + 2) + one_over_two_p * (*(b + 969 * OS1_S1 + 1) - alpha_over_p * *(b + 969 * OS1_S1 + 2));
            *(b + 1335 * OS1_S1 + 1) = Z_PA * *(b + 1142 * OS1_S1 + 1) + alpha_Z * *(b + 1142 * OS1_S1 + 2) + one_over_two_p * (*(b + 969 * OS1_S1 + 1) - alpha_over_p * *(b + 969 * OS1_S1 + 2));
            *(b + 1336 * OS1_S1 + 1) = Y_PA * *(b + 1143 * OS1_S1 + 1) + alpha_Y * *(b + 1143 * OS1_S1 + 2) + 2 * one_over_two_p * (*(b + 970 * OS1_S1 + 1) - alpha_over_p * *(b + 970 * OS1_S1 + 2));
            *(b + 1337 * OS1_S1 + 1) = Z_PA * *(b + 1143 * OS1_S1 + 1) + alpha_Z * *(b + 1143 * OS1_S1 + 2);
            *(b + 1339 * OS1_S1 + 1) = Z_PA * *(b + 1145 * OS1_S1 + 1) + alpha_Z * *(b + 1145 * OS1_S1 + 2) + 2 * one_over_two_p * (*(b + 971 * OS1_S1 + 1) - alpha_over_p * *(b + 971 * OS1_S1 + 2));
            *(b + 1340 * OS1_S1 + 1) = Y_PA * *(b + 1146 * OS1_S1 + 1) + alpha_Y * *(b + 1146 * OS1_S1 + 2) + 3 * one_over_two_p * (*(b + 972 * OS1_S1 + 1) - alpha_over_p * *(b + 972 * OS1_S1 + 2));
            *(b + 1341 * OS1_S1 + 1) = Z_PA * *(b + 1146 * OS1_S1 + 1) + alpha_Z * *(b + 1146 * OS1_S1 + 2);
            *(b + 1343 * OS1_S1 + 1) = Y_PA * *(b + 1149 * OS1_S1 + 1) + alpha_Y * *(b + 1149 * OS1_S1 + 2);
            *(b + 1344 * OS1_S1 + 1) = Z_PA * *(b + 1149 * OS1_S1 + 1) + alpha_Z * *(b + 1149 * OS1_S1 + 2) + 3 * one_over_two_p * (*(b + 974 * OS1_S1 + 1) - alpha_over_p * *(b + 974 * OS1_S1 + 2));
            *(b + 1345 * OS1_S1 + 1) = Y_PA * *(b + 1150 * OS1_S1 + 1) + alpha_Y * *(b + 1150 * OS1_S1 + 2) + 4 * one_over_two_p * (*(b + 975 * OS1_S1 + 1) - alpha_over_p * *(b + 975 * OS1_S1 + 2));
            *(b + 1346 * OS1_S1 + 1) = Z_PA * *(b + 1150 * OS1_S1 + 1) + alpha_Z * *(b + 1150 * OS1_S1 + 2);
            *(b + 1347 * OS1_S1 + 1) = Z_PA * *(b + 1151 * OS1_S1 + 1) + alpha_Z * *(b + 1151 * OS1_S1 + 2) + one_over_two_p * (*(b + 975 * OS1_S1 + 1) - alpha_over_p * *(b + 975 * OS1_S1 + 2));
            *(b + 1349 * OS1_S1 + 1) = Y_PA * *(b + 1154 * OS1_S1 + 1) + alpha_Y * *(b + 1154 * OS1_S1 + 2);
            *(b + 1350 * OS1_S1 + 1) = Z_PA * *(b + 1154 * OS1_S1 + 1) + alpha_Z * *(b + 1154 * OS1_S1 + 2) + 4 * one_over_two_p * (*(b + 978 * OS1_S1 + 1) - alpha_over_p * *(b + 978 * OS1_S1 + 2));
            *(b + 1351 * OS1_S1 + 1) = Y_PA * *(b + 1155 * OS1_S1 + 1) + alpha_Y * *(b + 1155 * OS1_S1 + 2) + 5 * one_over_two_p * (*(b + 979 * OS1_S1 + 1) - alpha_over_p * *(b + 979 * OS1_S1 + 2));
            *(b + 1352 * OS1_S1 + 1) = Z_PA * *(b + 1155 * OS1_S1 + 1) + alpha_Z * *(b + 1155 * OS1_S1 + 2);
            *(b + 1353 * OS1_S1 + 1) = Z_PA * *(b + 1156 * OS1_S1 + 1) + alpha_Z * *(b + 1156 * OS1_S1 + 2) + one_over_two_p * (*(b + 979 * OS1_S1 + 1) - alpha_over_p * *(b + 979 * OS1_S1 + 2));
            *(b + 1355 * OS1_S1 + 1) = Y_PA * *(b + 1159 * OS1_S1 + 1) + alpha_Y * *(b + 1159 * OS1_S1 + 2) + one_over_two_p * (*(b + 983 * OS1_S1 + 1) - alpha_over_p * *(b + 983 * OS1_S1 + 2));
            *(b + 1356 * OS1_S1 + 1) = Y_PA * *(b + 1160 * OS1_S1 + 1) + alpha_Y * *(b + 1160 * OS1_S1 + 2);
            *(b + 1357 * OS1_S1 + 1) = Z_PA * *(b + 1160 * OS1_S1 + 1) + alpha_Z * *(b + 1160 * OS1_S1 + 2) + 5 * one_over_two_p * (*(b + 983 * OS1_S1 + 1) - alpha_over_p * *(b + 983 * OS1_S1 + 2));
            *(b + 1358 * OS1_S1 + 1) = Y_PA * *(b + 1161 * OS1_S1 + 1) + alpha_Y * *(b + 1161 * OS1_S1 + 2) + 6 * one_over_two_p * (*(b + 984 * OS1_S1 + 1) - alpha_over_p * *(b + 984 * OS1_S1 + 2));
            *(b + 1359 * OS1_S1 + 1) = Z_PA * *(b + 1161 * OS1_S1 + 1) + alpha_Z * *(b + 1161 * OS1_S1 + 2);
            *(b + 1360 * OS1_S1 + 1) = Z_PA * *(b + 1162 * OS1_S1 + 1) + alpha_Z * *(b + 1162 * OS1_S1 + 2) + one_over_two_p * (*(b + 984 * OS1_S1 + 1) - alpha_over_p * *(b + 984 * OS1_S1 + 2));
            *(b + 1361 * OS1_S1 + 1) = Z_PA * *(b + 1163 * OS1_S1 + 1) + alpha_Z * *(b + 1163 * OS1_S1 + 2) + 2 * one_over_two_p * (*(b + 985 * OS1_S1 + 1) - alpha_over_p * *(b + 985 * OS1_S1 + 2));
            *(b + 1363 * OS1_S1 + 1) = Y_PA * *(b + 1166 * OS1_S1 + 1) + alpha_Y * *(b + 1166 * OS1_S1 + 2) + one_over_two_p * (*(b + 989 * OS1_S1 + 1) - alpha_over_p * *(b + 989 * OS1_S1 + 2));
            *(b + 1364 * OS1_S1 + 1) = Y_PA * *(b + 1167 * OS1_S1 + 1) + alpha_Y * *(b + 1167 * OS1_S1 + 2);
            *(b + 1365 * OS1_S1 + 1) = Z_PA * *(b + 1167 * OS1_S1 + 1) + alpha_Z * *(b + 1167 * OS1_S1 + 2) + 6 * one_over_two_p * (*(b + 989 * OS1_S1 + 1) - alpha_over_p * *(b + 989 * OS1_S1 + 2));
            *(b + 1366 * OS1_S1 + 1) = Y_PA * *(b + 1168 * OS1_S1 + 1) + alpha_Y * *(b + 1168 * OS1_S1 + 2) + 7 * one_over_two_p * (*(b + 990 * OS1_S1 + 1) - alpha_over_p * *(b + 990 * OS1_S1 + 2));
            *(b + 1367 * OS1_S1 + 1) = Z_PA * *(b + 1168 * OS1_S1 + 1) + alpha_Z * *(b + 1168 * OS1_S1 + 2);
            *(b + 1368 * OS1_S1 + 1) = Z_PA * *(b + 1169 * OS1_S1 + 1) + alpha_Z * *(b + 1169 * OS1_S1 + 2) + one_over_two_p * (*(b + 990 * OS1_S1 + 1) - alpha_over_p * *(b + 990 * OS1_S1 + 2));
            *(b + 1369 * OS1_S1 + 1) = Z_PA * *(b + 1170 * OS1_S1 + 1) + alpha_Z * *(b + 1170 * OS1_S1 + 2) + 2 * one_over_two_p * (*(b + 991 * OS1_S1 + 1) - alpha_over_p * *(b + 991 * OS1_S1 + 2));
            *(b + 1371 * OS1_S1 + 1) = Y_PA * *(b + 1173 * OS1_S1 + 1) + alpha_Y * *(b + 1173 * OS1_S1 + 2) + 2 * one_over_two_p * (*(b + 995 * OS1_S1 + 1) - alpha_over_p * *(b + 995 * OS1_S1 + 2));
            *(b + 1372 * OS1_S1 + 1) = Y_PA * *(b + 1174 * OS1_S1 + 1) + alpha_Y * *(b + 1174 * OS1_S1 + 2) + one_over_two_p * (*(b + 996 * OS1_S1 + 1) - alpha_over_p * *(b + 996 * OS1_S1 + 2));
            *(b + 1373 * OS1_S1 + 1) = Y_PA * *(b + 1175 * OS1_S1 + 1) + alpha_Y * *(b + 1175 * OS1_S1 + 2);
            *(b + 1374 * OS1_S1 + 1) = Z_PA * *(b + 1175 * OS1_S1 + 1) + alpha_Z * *(b + 1175 * OS1_S1 + 2) + 7 * one_over_two_p * (*(b + 996 * OS1_S1 + 1) - alpha_over_p * *(b + 996 * OS1_S1 + 2));
            *(b + 1375 * OS1_S1 + 1) = Y_PA * *(b + 1176 * OS1_S1 + 1) + alpha_Y * *(b + 1176 * OS1_S1 + 2) + 8 * one_over_two_p * (*(b + 997 * OS1_S1 + 1) - alpha_over_p * *(b + 997 * OS1_S1 + 2));
            *(b + 1376 * OS1_S1 + 1) = Z_PA * *(b + 1176 * OS1_S1 + 1) + alpha_Z * *(b + 1176 * OS1_S1 + 2);
            *(b + 1377 * OS1_S1 + 1) = Z_PA * *(b + 1177 * OS1_S1 + 1) + alpha_Z * *(b + 1177 * OS1_S1 + 2) + one_over_two_p * (*(b + 997 * OS1_S1 + 1) - alpha_over_p * *(b + 997 * OS1_S1 + 2));
            *(b + 1378 * OS1_S1 + 1) = Z_PA * *(b + 1178 * OS1_S1 + 1) + alpha_Z * *(b + 1178 * OS1_S1 + 2) + 2 * one_over_two_p * (*(b + 998 * OS1_S1 + 1) - alpha_over_p * *(b + 998 * OS1_S1 + 2));
            *(b + 1379 * OS1_S1 + 1) = Z_PA * *(b + 1179 * OS1_S1 + 1) + alpha_Z * *(b + 1179 * OS1_S1 + 2) + 3 * one_over_two_p * (*(b + 999 * OS1_S1 + 1) - alpha_over_p * *(b + 999 * OS1_S1 + 2));
            *(b + 1381 * OS1_S1 + 1) = Y_PA * *(b + 1182 * OS1_S1 + 1) + alpha_Y * *(b + 1182 * OS1_S1 + 2) + 2 * one_over_two_p * (*(b + 1003 * OS1_S1 + 1) - alpha_over_p * *(b + 1003 * OS1_S1 + 2));
            *(b + 1382 * OS1_S1 + 1) = Y_PA * *(b + 1183 * OS1_S1 + 1) + alpha_Y * *(b + 1183 * OS1_S1 + 2) + one_over_two_p * (*(b + 1004 * OS1_S1 + 1) - alpha_over_p * *(b + 1004 * OS1_S1 + 2));
            *(b + 1383 * OS1_S1 + 1) = Y_PA * *(b + 1184 * OS1_S1 + 1) + alpha_Y * *(b + 1184 * OS1_S1 + 2);
            *(b + 1384 * OS1_S1 + 1) = Z_PA * *(b + 1184 * OS1_S1 + 1) + alpha_Z * *(b + 1184 * OS1_S1 + 2) + 8 * one_over_two_p * (*(b + 1004 * OS1_S1 + 1) - alpha_over_p * *(b + 1004 * OS1_S1 + 2));
            *(b + 1385 * OS1_S1 + 1) = X_PA * *(b + 1195 * OS1_S1 + 1) + alpha_X * *(b + 1195 * OS1_S1 + 2) + 8 * one_over_two_p * (*(b + 1024 * OS1_S1 + 1) - alpha_over_p * *(b + 1024 * OS1_S1 + 2));
            *(b + 1386 * OS1_S1 + 1) = Z_PA * *(b + 1185 * OS1_S1 + 1) + alpha_Z * *(b + 1185 * OS1_S1 + 2);
            *(b + 1387 * OS1_S1 + 1) = Z_PA * *(b + 1186 * OS1_S1 + 1) + alpha_Z * *(b + 1186 * OS1_S1 + 2) + one_over_two_p * (*(b + 1005 * OS1_S1 + 1) - alpha_over_p * *(b + 1005 * OS1_S1 + 2));
            *(b + 1388 * OS1_S1 + 1) = Z_PA * *(b + 1187 * OS1_S1 + 1) + alpha_Z * *(b + 1187 * OS1_S1 + 2) + 2 * one_over_two_p * (*(b + 1006 * OS1_S1 + 1) - alpha_over_p * *(b + 1006 * OS1_S1 + 2));
            *(b + 1389 * OS1_S1 + 1) = Z_PA * *(b + 1188 * OS1_S1 + 1) + alpha_Z * *(b + 1188 * OS1_S1 + 2) + 3 * one_over_two_p * (*(b + 1007 * OS1_S1 + 1) - alpha_over_p * *(b + 1007 * OS1_S1 + 2));
            *(b + 1391 * OS1_S1 + 1) = Y_PA * *(b + 1191 * OS1_S1 + 1) + alpha_Y * *(b + 1191 * OS1_S1 + 2) + 3 * one_over_two_p * (*(b + 1011 * OS1_S1 + 1) - alpha_over_p * *(b + 1011 * OS1_S1 + 2));
            *(b + 1392 * OS1_S1 + 1) = Y_PA * *(b + 1192 * OS1_S1 + 1) + alpha_Y * *(b + 1192 * OS1_S1 + 2) + 2 * one_over_two_p * (*(b + 1012 * OS1_S1 + 1) - alpha_over_p * *(b + 1012 * OS1_S1 + 2));
            *(b + 1393 * OS1_S1 + 1) = Y_PA * *(b + 1193 * OS1_S1 + 1) + alpha_Y * *(b + 1193 * OS1_S1 + 2) + one_over_two_p * (*(b + 1013 * OS1_S1 + 1) - alpha_over_p * *(b + 1013 * OS1_S1 + 2));
            *(b + 1394 * OS1_S1 + 1) = Y_PA * *(b + 1194 * OS1_S1 + 1) + alpha_Y * *(b + 1194 * OS1_S1 + 2);
            *(b + 1395 * OS1_S1 + 1) = X_PA * *(b + 1205 * OS1_S1 + 1) + alpha_X * *(b + 1205 * OS1_S1 + 2) + 8 * one_over_two_p * (*(b + 1034 * OS1_S1 + 1) - alpha_over_p * *(b + 1034 * OS1_S1 + 2));
            *(b + 1396 * OS1_S1 + 1) = X_PA * *(b + 1206 * OS1_S1 + 1) + alpha_X * *(b + 1206 * OS1_S1 + 2) + 7 * one_over_two_p * (*(b + 1035 * OS1_S1 + 1) - alpha_over_p * *(b + 1035 * OS1_S1 + 2));
            *(b + 1397 * OS1_S1 + 1) = Z_PA * *(b + 1195 * OS1_S1 + 1) + alpha_Z * *(b + 1195 * OS1_S1 + 2);
            *(b + 1398 * OS1_S1 + 1) = Z_PA * *(b + 1196 * OS1_S1 + 1) + alpha_Z * *(b + 1196 * OS1_S1 + 2) + one_over_two_p * (*(b + 1014 * OS1_S1 + 1) - alpha_over_p * *(b + 1014 * OS1_S1 + 2));
            *(b + 1399 * OS1_S1 + 1) = Z_PA * *(b + 1197 * OS1_S1 + 1) + alpha_Z * *(b + 1197 * OS1_S1 + 2) + 2 * one_over_two_p * (*(b + 1015 * OS1_S1 + 1) - alpha_over_p * *(b + 1015 * OS1_S1 + 2));
            *(b + 1400 * OS1_S1 + 1) = Z_PA * *(b + 1198 * OS1_S1 + 1) + alpha_Z * *(b + 1198 * OS1_S1 + 2) + 3 * one_over_two_p * (*(b + 1016 * OS1_S1 + 1) - alpha_over_p * *(b + 1016 * OS1_S1 + 2));
            *(b + 1401 * OS1_S1 + 1) = Z_PA * *(b + 1199 * OS1_S1 + 1) + alpha_Z * *(b + 1199 * OS1_S1 + 2) + 4 * one_over_two_p * (*(b + 1017 * OS1_S1 + 1) - alpha_over_p * *(b + 1017 * OS1_S1 + 2));
            *(b + 1403 * OS1_S1 + 1) = Y_PA * *(b + 1202 * OS1_S1 + 1) + alpha_Y * *(b + 1202 * OS1_S1 + 2) + 3 * one_over_two_p * (*(b + 1021 * OS1_S1 + 1) - alpha_over_p * *(b + 1021 * OS1_S1 + 2));
            *(b + 1404 * OS1_S1 + 1) = Y_PA * *(b + 1203 * OS1_S1 + 1) + alpha_Y * *(b + 1203 * OS1_S1 + 2) + 2 * one_over_two_p * (*(b + 1022 * OS1_S1 + 1) - alpha_over_p * *(b + 1022 * OS1_S1 + 2));
            *(b + 1405 * OS1_S1 + 1) = Y_PA * *(b + 1204 * OS1_S1 + 1) + alpha_Y * *(b + 1204 * OS1_S1 + 2) + one_over_two_p * (*(b + 1023 * OS1_S1 + 1) - alpha_over_p * *(b + 1023 * OS1_S1 + 2));
            *(b + 1406 * OS1_S1 + 1) = Y_PA * *(b + 1205 * OS1_S1 + 1) + alpha_Y * *(b + 1205 * OS1_S1 + 2);
            *(b + 1407 * OS1_S1 + 1) = X_PA * *(b + 1217 * OS1_S1 + 1) + alpha_X * *(b + 1217 * OS1_S1 + 2) + 7 * one_over_two_p * (*(b + 1046 * OS1_S1 + 1) - alpha_over_p * *(b + 1046 * OS1_S1 + 2));
            *(b + 1408 * OS1_S1 + 1) = X_PA * *(b + 1218 * OS1_S1 + 1) + alpha_X * *(b + 1218 * OS1_S1 + 2) + 6 * one_over_two_p * (*(b + 1047 * OS1_S1 + 1) - alpha_over_p * *(b + 1047 * OS1_S1 + 2));
            *(b + 1409 * OS1_S1 + 1) = Z_PA * *(b + 1206 * OS1_S1 + 1) + alpha_Z * *(b + 1206 * OS1_S1 + 2);
            *(b + 1410 * OS1_S1 + 1) = Z_PA * *(b + 1207 * OS1_S1 + 1) + alpha_Z * *(b + 1207 * OS1_S1 + 2) + one_over_two_p * (*(b + 1024 * OS1_S1 + 1) - alpha_over_p * *(b + 1024 * OS1_S1 + 2));
            *(b + 1411 * OS1_S1 + 1) = Z_PA * *(b + 1208 * OS1_S1 + 1) + alpha_Z * *(b + 1208 * OS1_S1 + 2) + 2 * one_over_two_p * (*(b + 1025 * OS1_S1 + 1) - alpha_over_p * *(b + 1025 * OS1_S1 + 2));
            *(b + 1412 * OS1_S1 + 1) = Z_PA * *(b + 1209 * OS1_S1 + 1) + alpha_Z * *(b + 1209 * OS1_S1 + 2) + 3 * one_over_two_p * (*(b + 1026 * OS1_S1 + 1) - alpha_over_p * *(b + 1026 * OS1_S1 + 2));
            *(b + 1413 * OS1_S1 + 1) = Z_PA * *(b + 1210 * OS1_S1 + 1) + alpha_Z * *(b + 1210 * OS1_S1 + 2) + 4 * one_over_two_p * (*(b + 1027 * OS1_S1 + 1) - alpha_over_p * *(b + 1027 * OS1_S1 + 2));
            *(b + 1415 * OS1_S1 + 1) = Y_PA * *(b + 1213 * OS1_S1 + 1) + alpha_Y * *(b + 1213 * OS1_S1 + 2) + 4 * one_over_two_p * (*(b + 1031 * OS1_S1 + 1) - alpha_over_p * *(b + 1031 * OS1_S1 + 2));
            *(b + 1416 * OS1_S1 + 1) = Y_PA * *(b + 1214 * OS1_S1 + 1) + alpha_Y * *(b + 1214 * OS1_S1 + 2) + 3 * one_over_two_p * (*(b + 1032 * OS1_S1 + 1) - alpha_over_p * *(b + 1032 * OS1_S1 + 2));
            *(b + 1417 * OS1_S1 + 1) = Y_PA * *(b + 1215 * OS1_S1 + 1) + alpha_Y * *(b + 1215 * OS1_S1 + 2) + 2 * one_over_two_p * (*(b + 1033 * OS1_S1 + 1) - alpha_over_p * *(b + 1033 * OS1_S1 + 2));
            *(b + 1418 * OS1_S1 + 1) = Y_PA * *(b + 1216 * OS1_S1 + 1) + alpha_Y * *(b + 1216 * OS1_S1 + 2) + one_over_two_p * (*(b + 1034 * OS1_S1 + 1) - alpha_over_p * *(b + 1034 * OS1_S1 + 2));
            *(b + 1419 * OS1_S1 + 1) = Y_PA * *(b + 1217 * OS1_S1 + 1) + alpha_Y * *(b + 1217 * OS1_S1 + 2);
            *(b + 1420 * OS1_S1 + 1) = X_PA * *(b + 1230 * OS1_S1 + 1) + alpha_X * *(b + 1230 * OS1_S1 + 2) + 6 * one_over_two_p * (*(b + 1059 * OS1_S1 + 1) - alpha_over_p * *(b + 1059 * OS1_S1 + 2));
            *(b + 1421 * OS1_S1 + 1) = X_PA * *(b + 1231 * OS1_S1 + 1) + alpha_X * *(b + 1231 * OS1_S1 + 2) + 5 * one_over_two_p * (*(b + 1060 * OS1_S1 + 1) - alpha_over_p * *(b + 1060 * OS1_S1 + 2));
            *(b + 1422 * OS1_S1 + 1) = Z_PA * *(b + 1218 * OS1_S1 + 1) + alpha_Z * *(b + 1218 * OS1_S1 + 2);
            *(b + 1423 * OS1_S1 + 1) = Z_PA * *(b + 1219 * OS1_S1 + 1) + alpha_Z * *(b + 1219 * OS1_S1 + 2) + one_over_two_p * (*(b + 1035 * OS1_S1 + 1) - alpha_over_p * *(b + 1035 * OS1_S1 + 2));
            *(b + 1424 * OS1_S1 + 1) = Z_PA * *(b + 1220 * OS1_S1 + 1) + alpha_Z * *(b + 1220 * OS1_S1 + 2) + 2 * one_over_two_p * (*(b + 1036 * OS1_S1 + 1) - alpha_over_p * *(b + 1036 * OS1_S1 + 2));
            *(b + 1425 * OS1_S1 + 1) = Z_PA * *(b + 1221 * OS1_S1 + 1) + alpha_Z * *(b + 1221 * OS1_S1 + 2) + 3 * one_over_two_p * (*(b + 1037 * OS1_S1 + 1) - alpha_over_p * *(b + 1037 * OS1_S1 + 2));
            *(b + 1426 * OS1_S1 + 1) = Z_PA * *(b + 1222 * OS1_S1 + 1) + alpha_Z * *(b + 1222 * OS1_S1 + 2) + 4 * one_over_two_p * (*(b + 1038 * OS1_S1 + 1) - alpha_over_p * *(b + 1038 * OS1_S1 + 2));
            *(b + 1429 * OS1_S1 + 1) = Y_PA * *(b + 1226 * OS1_S1 + 1) + alpha_Y * *(b + 1226 * OS1_S1 + 2) + 4 * one_over_two_p * (*(b + 1043 * OS1_S1 + 1) - alpha_over_p * *(b + 1043 * OS1_S1 + 2));
            *(b + 1430 * OS1_S1 + 1) = Y_PA * *(b + 1227 * OS1_S1 + 1) + alpha_Y * *(b + 1227 * OS1_S1 + 2) + 3 * one_over_two_p * (*(b + 1044 * OS1_S1 + 1) - alpha_over_p * *(b + 1044 * OS1_S1 + 2));
            *(b + 1431 * OS1_S1 + 1) = Y_PA * *(b + 1228 * OS1_S1 + 1) + alpha_Y * *(b + 1228 * OS1_S1 + 2) + 2 * one_over_two_p * (*(b + 1045 * OS1_S1 + 1) - alpha_over_p * *(b + 1045 * OS1_S1 + 2));
            *(b + 1432 * OS1_S1 + 1) = Y_PA * *(b + 1229 * OS1_S1 + 1) + alpha_Y * *(b + 1229 * OS1_S1 + 2) + one_over_two_p * (*(b + 1046 * OS1_S1 + 1) - alpha_over_p * *(b + 1046 * OS1_S1 + 2));
            *(b + 1433 * OS1_S1 + 1) = Y_PA * *(b + 1230 * OS1_S1 + 1) + alpha_Y * *(b + 1230 * OS1_S1 + 2);
            *(b + 1434 * OS1_S1 + 1) = X_PA * *(b + 1244 * OS1_S1 + 1) + alpha_X * *(b + 1244 * OS1_S1 + 2) + 5 * one_over_two_p * (*(b + 1073 * OS1_S1 + 1) - alpha_over_p * *(b + 1073 * OS1_S1 + 2));
            *(b + 1435 * OS1_S1 + 1) = X_PA * *(b + 1245 * OS1_S1 + 1) + alpha_X * *(b + 1245 * OS1_S1 + 2) + 4 * one_over_two_p * (*(b + 1074 * OS1_S1 + 1) - alpha_over_p * *(b + 1074 * OS1_S1 + 2));
            *(b + 1436 * OS1_S1 + 1) = Z_PA * *(b + 1231 * OS1_S1 + 1) + alpha_Z * *(b + 1231 * OS1_S1 + 2);
            *(b + 1437 * OS1_S1 + 1) = Z_PA * *(b + 1232 * OS1_S1 + 1) + alpha_Z * *(b + 1232 * OS1_S1 + 2) + one_over_two_p * (*(b + 1047 * OS1_S1 + 1) - alpha_over_p * *(b + 1047 * OS1_S1 + 2));
            *(b + 1438 * OS1_S1 + 1) = Z_PA * *(b + 1233 * OS1_S1 + 1) + alpha_Z * *(b + 1233 * OS1_S1 + 2) + 2 * one_over_two_p * (*(b + 1048 * OS1_S1 + 1) - alpha_over_p * *(b + 1048 * OS1_S1 + 2));
            *(b + 1439 * OS1_S1 + 1) = Z_PA * *(b + 1234 * OS1_S1 + 1) + alpha_Z * *(b + 1234 * OS1_S1 + 2) + 3 * one_over_two_p * (*(b + 1049 * OS1_S1 + 1) - alpha_over_p * *(b + 1049 * OS1_S1 + 2));
            *(b + 1442 * OS1_S1 + 1) = X_PA * *(b + 1252 * OS1_S1 + 1) + alpha_X * *(b + 1252 * OS1_S1 + 2) + 4 * one_over_two_p * (*(b + 1081 * OS1_S1 + 1) - alpha_over_p * *(b + 1081 * OS1_S1 + 2));
            *(b + 1445 * OS1_S1 + 1) = Y_PA * *(b + 1241 * OS1_S1 + 1) + alpha_Y * *(b + 1241 * OS1_S1 + 2) + 3 * one_over_two_p * (*(b + 1057 * OS1_S1 + 1) - alpha_over_p * *(b + 1057 * OS1_S1 + 2));
            *(b + 1446 * OS1_S1 + 1) = Y_PA * *(b + 1242 * OS1_S1 + 1) + alpha_Y * *(b + 1242 * OS1_S1 + 2) + 2 * one_over_two_p * (*(b + 1058 * OS1_S1 + 1) - alpha_over_p * *(b + 1058 * OS1_S1 + 2));
            *(b + 1447 * OS1_S1 + 1) = Y_PA * *(b + 1243 * OS1_S1 + 1) + alpha_Y * *(b + 1243 * OS1_S1 + 2) + one_over_two_p * (*(b + 1059 * OS1_S1 + 1) - alpha_over_p * *(b + 1059 * OS1_S1 + 2));
            *(b + 1448 * OS1_S1 + 1) = Y_PA * *(b + 1244 * OS1_S1 + 1) + alpha_Y * *(b + 1244 * OS1_S1 + 2);
            *(b + 1449 * OS1_S1 + 1) = X_PA * *(b + 1259 * OS1_S1 + 1) + alpha_X * *(b + 1259 * OS1_S1 + 2) + 4 * one_over_two_p * (*(b + 1088 * OS1_S1 + 1) - alpha_over_p * *(b + 1088 * OS1_S1 + 2));
            *(b + 1450 * OS1_S1 + 1) = X_PA * *(b + 1260 * OS1_S1 + 1) + alpha_X * *(b + 1260 * OS1_S1 + 2) + 3 * one_over_two_p * (*(b + 1089 * OS1_S1 + 1) - alpha_over_p * *(b + 1089 * OS1_S1 + 2));
            *(b + 1451 * OS1_S1 + 1) = Z_PA * *(b + 1245 * OS1_S1 + 1) + alpha_Z * *(b + 1245 * OS1_S1 + 2);
            *(b + 1452 * OS1_S1 + 1) = Z_PA * *(b + 1246 * OS1_S1 + 1) + alpha_Z * *(b + 1246 * OS1_S1 + 2) + one_over_two_p * (*(b + 1060 * OS1_S1 + 1) - alpha_over_p * *(b + 1060 * OS1_S1 + 2));
            *(b + 1453 * OS1_S1 + 1) = Z_PA * *(b + 1247 * OS1_S1 + 1) + alpha_Z * *(b + 1247 * OS1_S1 + 2) + 2 * one_over_two_p * (*(b + 1061 * OS1_S1 + 1) - alpha_over_p * *(b + 1061 * OS1_S1 + 2));
            *(b + 1456 * OS1_S1 + 1) = X_PA * *(b + 1266 * OS1_S1 + 1) + alpha_X * *(b + 1266 * OS1_S1 + 2) + 3 * one_over_two_p * (*(b + 1095 * OS1_S1 + 1) - alpha_over_p * *(b + 1095 * OS1_S1 + 2));
            *(b + 1457 * OS1_S1 + 1) = X_PA * *(b + 1267 * OS1_S1 + 1) + alpha_X * *(b + 1267 * OS1_S1 + 2) + 3 * one_over_two_p * (*(b + 1096 * OS1_S1 + 1) - alpha_over_p * *(b + 1096 * OS1_S1 + 2));
            *(b + 1458 * OS1_S1 + 1) = X_PA * *(b + 1268 * OS1_S1 + 1) + alpha_X * *(b + 1268 * OS1_S1 + 2) + 3 * one_over_two_p * (*(b + 1097 * OS1_S1 + 1) - alpha_over_p * *(b + 1097 * OS1_S1 + 2));
            *(b + 1459 * OS1_S1 + 1) = X_PA * *(b + 1269 * OS1_S1 + 1) + alpha_X * *(b + 1269 * OS1_S1 + 2) + 3 * one_over_two_p * (*(b + 1098 * OS1_S1 + 1) - alpha_over_p * *(b + 1098 * OS1_S1 + 2));
            *(b + 1462 * OS1_S1 + 1) = Y_PA * *(b + 1257 * OS1_S1 + 1) + alpha_Y * *(b + 1257 * OS1_S1 + 2) + 2 * one_over_two_p * (*(b + 1072 * OS1_S1 + 1) - alpha_over_p * *(b + 1072 * OS1_S1 + 2));
            *(b + 1463 * OS1_S1 + 1) = Y_PA * *(b + 1258 * OS1_S1 + 1) + alpha_Y * *(b + 1258 * OS1_S1 + 2) + one_over_two_p * (*(b + 1073 * OS1_S1 + 1) - alpha_over_p * *(b + 1073 * OS1_S1 + 2));
            *(b + 1464 * OS1_S1 + 1) = Y_PA * *(b + 1259 * OS1_S1 + 1) + alpha_Y * *(b + 1259 * OS1_S1 + 2);
            *(b + 1465 * OS1_S1 + 1) = X_PA * *(b + 1275 * OS1_S1 + 1) + alpha_X * *(b + 1275 * OS1_S1 + 2) + 3 * one_over_two_p * (*(b + 1104 * OS1_S1 + 1) - alpha_over_p * *(b + 1104 * OS1_S1 + 2));
            *(b + 1466 * OS1_S1 + 1) = X_PA * *(b + 1276 * OS1_S1 + 1) + alpha_X * *(b + 1276 * OS1_S1 + 2) + 2 * one_over_two_p * (*(b + 1105 * OS1_S1 + 1) - alpha_over_p * *(b + 1105 * OS1_S1 + 2));
            *(b + 1467 * OS1_S1 + 1) = Z_PA * *(b + 1260 * OS1_S1 + 1) + alpha_Z * *(b + 1260 * OS1_S1 + 2);
            *(b + 1468 * OS1_S1 + 1) = Z_PA * *(b + 1261 * OS1_S1 + 1) + alpha_Z * *(b + 1261 * OS1_S1 + 2) + one_over_two_p * (*(b + 1074 * OS1_S1 + 1) - alpha_over_p * *(b + 1074 * OS1_S1 + 2));
            *(b + 1471 * OS1_S1 + 1) = X_PA * *(b + 1281 * OS1_S1 + 1) + alpha_X * *(b + 1281 * OS1_S1 + 2) + 2 * one_over_two_p * (*(b + 1110 * OS1_S1 + 1) - alpha_over_p * *(b + 1110 * OS1_S1 + 2));
            *(b + 1472 * OS1_S1 + 1) = X_PA * *(b + 1282 * OS1_S1 + 1) + alpha_X * *(b + 1282 * OS1_S1 + 2) + 2 * one_over_two_p * (*(b + 1111 * OS1_S1 + 1) - alpha_over_p * *(b + 1111 * OS1_S1 + 2));
            *(b + 1473 * OS1_S1 + 1) = X_PA * *(b + 1283 * OS1_S1 + 1) + alpha_X * *(b + 1283 * OS1_S1 + 2) + 2 * one_over_two_p * (*(b + 1112 * OS1_S1 + 1) - alpha_over_p * *(b + 1112 * OS1_S1 + 2));
            *(b + 1474 * OS1_S1 + 1) = X_PA * *(b + 1284 * OS1_S1 + 1) + alpha_X * *(b + 1284 * OS1_S1 + 2) + 2 * one_over_two_p * (*(b + 1113 * OS1_S1 + 1) - alpha_over_p * *(b + 1113 * OS1_S1 + 2));
            *(b + 1475 * OS1_S1 + 1) = X_PA * *(b + 1285 * OS1_S1 + 1) + alpha_X * *(b + 1285 * OS1_S1 + 2) + 2 * one_over_two_p * (*(b + 1114 * OS1_S1 + 1) - alpha_over_p * *(b + 1114 * OS1_S1 + 2));
            *(b + 1476 * OS1_S1 + 1) = X_PA * *(b + 1286 * OS1_S1 + 1) + alpha_X * *(b + 1286 * OS1_S1 + 2) + 2 * one_over_two_p * (*(b + 1115 * OS1_S1 + 1) - alpha_over_p * *(b + 1115 * OS1_S1 + 2));
            *(b + 1477 * OS1_S1 + 1) = X_PA * *(b + 1287 * OS1_S1 + 1) + alpha_X * *(b + 1287 * OS1_S1 + 2) + 2 * one_over_two_p * (*(b + 1116 * OS1_S1 + 1) - alpha_over_p * *(b + 1116 * OS1_S1 + 2));
            *(b + 1480 * OS1_S1 + 1) = Y_PA * *(b + 1274 * OS1_S1 + 1) + alpha_Y * *(b + 1274 * OS1_S1 + 2) + one_over_two_p * (*(b + 1088 * OS1_S1 + 1) - alpha_over_p * *(b + 1088 * OS1_S1 + 2));
            *(b + 1481 * OS1_S1 + 1) = Y_PA * *(b + 1275 * OS1_S1 + 1) + alpha_Y * *(b + 1275 * OS1_S1 + 2);
            *(b + 1482 * OS1_S1 + 1) = X_PA * *(b + 1292 * OS1_S1 + 1) + alpha_X * *(b + 1292 * OS1_S1 + 2) + 2 * one_over_two_p * (*(b + 1121 * OS1_S1 + 1) - alpha_over_p * *(b + 1121 * OS1_S1 + 2));
            *(b + 1483 * OS1_S1 + 1) = X_PA * *(b + 1293 * OS1_S1 + 1) + alpha_X * *(b + 1293 * OS1_S1 + 2) + one_over_two_p * (*(b + 1122 * OS1_S1 + 1) - alpha_over_p * *(b + 1122 * OS1_S1 + 2));
            *(b + 1484 * OS1_S1 + 1) = Z_PA * *(b + 1276 * OS1_S1 + 1) + alpha_Z * *(b + 1276 * OS1_S1 + 2);
            *(b + 1487 * OS1_S1 + 1) = X_PA * *(b + 1297 * OS1_S1 + 1) + alpha_X * *(b + 1297 * OS1_S1 + 2) + one_over_two_p * (*(b + 1126 * OS1_S1 + 1) - alpha_over_p * *(b + 1126 * OS1_S1 + 2));
            *(b + 1488 * OS1_S1 + 1) = X_PA * *(b + 1298 * OS1_S1 + 1) + alpha_X * *(b + 1298 * OS1_S1 + 2) + one_over_two_p * (*(b + 1127 * OS1_S1 + 1) - alpha_over_p * *(b + 1127 * OS1_S1 + 2));
            *(b + 1489 * OS1_S1 + 1) = X_PA * *(b + 1299 * OS1_S1 + 1) + alpha_X * *(b + 1299 * OS1_S1 + 2) + one_over_two_p * (*(b + 1128 * OS1_S1 + 1) - alpha_over_p * *(b + 1128 * OS1_S1 + 2));
            *(b + 1490 * OS1_S1 + 1) = X_PA * *(b + 1300 * OS1_S1 + 1) + alpha_X * *(b + 1300 * OS1_S1 + 2) + one_over_two_p * (*(b + 1129 * OS1_S1 + 1) - alpha_over_p * *(b + 1129 * OS1_S1 + 2));
            *(b + 1491 * OS1_S1 + 1) = X_PA * *(b + 1301 * OS1_S1 + 1) + alpha_X * *(b + 1301 * OS1_S1 + 2) + one_over_two_p * (*(b + 1130 * OS1_S1 + 1) - alpha_over_p * *(b + 1130 * OS1_S1 + 2));
            *(b + 1492 * OS1_S1 + 1) = X_PA * *(b + 1302 * OS1_S1 + 1) + alpha_X * *(b + 1302 * OS1_S1 + 2) + one_over_two_p * (*(b + 1131 * OS1_S1 + 1) - alpha_over_p * *(b + 1131 * OS1_S1 + 2));
            *(b + 1493 * OS1_S1 + 1) = X_PA * *(b + 1303 * OS1_S1 + 1) + alpha_X * *(b + 1303 * OS1_S1 + 2) + one_over_two_p * (*(b + 1132 * OS1_S1 + 1) - alpha_over_p * *(b + 1132 * OS1_S1 + 2));
            *(b + 1494 * OS1_S1 + 1) = X_PA * *(b + 1304 * OS1_S1 + 1) + alpha_X * *(b + 1304 * OS1_S1 + 2) + one_over_two_p * (*(b + 1133 * OS1_S1 + 1) - alpha_over_p * *(b + 1133 * OS1_S1 + 2));
            *(b + 1495 * OS1_S1 + 1) = X_PA * *(b + 1305 * OS1_S1 + 1) + alpha_X * *(b + 1305 * OS1_S1 + 2) + one_over_two_p * (*(b + 1134 * OS1_S1 + 1) - alpha_over_p * *(b + 1134 * OS1_S1 + 2));
            *(b + 1496 * OS1_S1 + 1) = X_PA * *(b + 1306 * OS1_S1 + 1) + alpha_X * *(b + 1306 * OS1_S1 + 2) + one_over_two_p * (*(b + 1135 * OS1_S1 + 1) - alpha_over_p * *(b + 1135 * OS1_S1 + 2));
            *(b + 1499 * OS1_S1 + 1) = Y_PA * *(b + 1292 * OS1_S1 + 1) + alpha_Y * *(b + 1292 * OS1_S1 + 2);
            *(b + 1500 * OS1_S1 + 1) = X_PA * *(b + 1310 * OS1_S1 + 1) + alpha_X * *(b + 1310 * OS1_S1 + 2) + one_over_two_p * (*(b + 1139 * OS1_S1 + 1) - alpha_over_p * *(b + 1139 * OS1_S1 + 2));
            *(b + 1501 * OS1_S1 + 1) = X_PA * *(b + 1311 * OS1_S1 + 1) + alpha_X * *(b + 1311 * OS1_S1 + 2);
            *(b + 1504 * OS1_S1 + 1) = X_PA * *(b + 1314 * OS1_S1 + 1) + alpha_X * *(b + 1314 * OS1_S1 + 2);
            *(b + 1505 * OS1_S1 + 1) = X_PA * *(b + 1315 * OS1_S1 + 1) + alpha_X * *(b + 1315 * OS1_S1 + 2);
            *(b + 1506 * OS1_S1 + 1) = X_PA * *(b + 1316 * OS1_S1 + 1) + alpha_X * *(b + 1316 * OS1_S1 + 2);
            *(b + 1507 * OS1_S1 + 1) = X_PA * *(b + 1317 * OS1_S1 + 1) + alpha_X * *(b + 1317 * OS1_S1 + 2);
            *(b + 1508 * OS1_S1 + 1) = X_PA * *(b + 1318 * OS1_S1 + 1) + alpha_X * *(b + 1318 * OS1_S1 + 2);
            *(b + 1509 * OS1_S1 + 1) = X_PA * *(b + 1319 * OS1_S1 + 1) + alpha_X * *(b + 1319 * OS1_S1 + 2);
            *(b + 1510 * OS1_S1 + 1) = X_PA * *(b + 1320 * OS1_S1 + 1) + alpha_X * *(b + 1320 * OS1_S1 + 2);
            *(b + 1511 * OS1_S1 + 1) = X_PA * *(b + 1321 * OS1_S1 + 1) + alpha_X * *(b + 1321 * OS1_S1 + 2);
            *(b + 1512 * OS1_S1 + 1) = X_PA * *(b + 1322 * OS1_S1 + 1) + alpha_X * *(b + 1322 * OS1_S1 + 2);
            *(b + 1513 * OS1_S1 + 1) = X_PA * *(b + 1323 * OS1_S1 + 1) + alpha_X * *(b + 1323 * OS1_S1 + 2);
            *(b + 1514 * OS1_S1 + 1) = X_PA * *(b + 1324 * OS1_S1 + 1) + alpha_X * *(b + 1324 * OS1_S1 + 2);
            *(b + 1515 * OS1_S1 + 1) = X_PA * *(b + 1325 * OS1_S1 + 1) + alpha_X * *(b + 1325 * OS1_S1 + 2);
            *(b + 1516 * OS1_S1 + 1) = X_PA * *(b + 1326 * OS1_S1 + 1) + alpha_X * *(b + 1326 * OS1_S1 + 2);
            *(b + 1519 * OS1_S1 + 1) = X_PA * *(b + 1329 * OS1_S1 + 1) + alpha_X * *(b + 1329 * OS1_S1 + 2);
            *(b + 1520 * OS1_S1 + 1) = Y_PA * *(b + 1311 * OS1_S1 + 1) + alpha_Y * *(b + 1311 * OS1_S1 + 2) + 18 * one_over_two_p * (*(b + 1122 * OS1_S1 + 1) - alpha_over_p * *(b + 1122 * OS1_S1 + 2));
            *(b + 1521 * OS1_S1 + 1) = Z_PA * *(b + 1311 * OS1_S1 + 1) + alpha_Z * *(b + 1311 * OS1_S1 + 2);
            *(b + 1522 * OS1_S1 + 1) = Z_PA * *(b + 1312 * OS1_S1 + 1) + alpha_Z * *(b + 1312 * OS1_S1 + 2) + one_over_two_p * (*(b + 1122 * OS1_S1 + 1) - alpha_over_p * *(b + 1122 * OS1_S1 + 2));
            *(b + 1523 * OS1_S1 + 1) = Z_PA * *(b + 1313 * OS1_S1 + 1) + alpha_Z * *(b + 1313 * OS1_S1 + 2) + 2 * one_over_two_p * (*(b + 1123 * OS1_S1 + 1) - alpha_over_p * *(b + 1123 * OS1_S1 + 2));
            *(b + 1524 * OS1_S1 + 1) = Z_PA * *(b + 1314 * OS1_S1 + 1) + alpha_Z * *(b + 1314 * OS1_S1 + 2) + 3 * one_over_two_p * (*(b + 1124 * OS1_S1 + 1) - alpha_over_p * *(b + 1124 * OS1_S1 + 2));
            *(b + 1525 * OS1_S1 + 1) = Z_PA * *(b + 1315 * OS1_S1 + 1) + alpha_Z * *(b + 1315 * OS1_S1 + 2) + 4 * one_over_two_p * (*(b + 1125 * OS1_S1 + 1) - alpha_over_p * *(b + 1125 * OS1_S1 + 2));
            *(b + 1526 * OS1_S1 + 1) = Z_PA * *(b + 1316 * OS1_S1 + 1) + alpha_Z * *(b + 1316 * OS1_S1 + 2) + 5 * one_over_two_p * (*(b + 1126 * OS1_S1 + 1) - alpha_over_p * *(b + 1126 * OS1_S1 + 2));
            *(b + 1527 * OS1_S1 + 1) = Z_PA * *(b + 1317 * OS1_S1 + 1) + alpha_Z * *(b + 1317 * OS1_S1 + 2) + 6 * one_over_two_p * (*(b + 1127 * OS1_S1 + 1) - alpha_over_p * *(b + 1127 * OS1_S1 + 2));
            *(b + 1528 * OS1_S1 + 1) = Z_PA * *(b + 1318 * OS1_S1 + 1) + alpha_Z * *(b + 1318 * OS1_S1 + 2) + 7 * one_over_two_p * (*(b + 1128 * OS1_S1 + 1) - alpha_over_p * *(b + 1128 * OS1_S1 + 2));
            *(b + 1529 * OS1_S1 + 1) = Z_PA * *(b + 1319 * OS1_S1 + 1) + alpha_Z * *(b + 1319 * OS1_S1 + 2) + 8 * one_over_two_p * (*(b + 1129 * OS1_S1 + 1) - alpha_over_p * *(b + 1129 * OS1_S1 + 2));
            *(b + 1530 * OS1_S1 + 1) = Y_PA * *(b + 1321 * OS1_S1 + 1) + alpha_Y * *(b + 1321 * OS1_S1 + 2) + 8 * one_over_two_p * (*(b + 1132 * OS1_S1 + 1) - alpha_over_p * *(b + 1132 * OS1_S1 + 2));
            *(b + 1531 * OS1_S1 + 1) = Y_PA * *(b + 1322 * OS1_S1 + 1) + alpha_Y * *(b + 1322 * OS1_S1 + 2) + 7 * one_over_two_p * (*(b + 1133 * OS1_S1 + 1) - alpha_over_p * *(b + 1133 * OS1_S1 + 2));
            *(b + 1532 * OS1_S1 + 1) = Y_PA * *(b + 1323 * OS1_S1 + 1) + alpha_Y * *(b + 1323 * OS1_S1 + 2) + 6 * one_over_two_p * (*(b + 1134 * OS1_S1 + 1) - alpha_over_p * *(b + 1134 * OS1_S1 + 2));
            *(b + 1533 * OS1_S1 + 1) = Y_PA * *(b + 1324 * OS1_S1 + 1) + alpha_Y * *(b + 1324 * OS1_S1 + 2) + 5 * one_over_two_p * (*(b + 1135 * OS1_S1 + 1) - alpha_over_p * *(b + 1135 * OS1_S1 + 2));
            *(b + 1534 * OS1_S1 + 1) = Y_PA * *(b + 1325 * OS1_S1 + 1) + alpha_Y * *(b + 1325 * OS1_S1 + 2) + 4 * one_over_two_p * (*(b + 1136 * OS1_S1 + 1) - alpha_over_p * *(b + 1136 * OS1_S1 + 2));
            *(b + 1535 * OS1_S1 + 1) = Y_PA * *(b + 1326 * OS1_S1 + 1) + alpha_Y * *(b + 1326 * OS1_S1 + 2) + 3 * one_over_two_p * (*(b + 1137 * OS1_S1 + 1) - alpha_over_p * *(b + 1137 * OS1_S1 + 2));
            *(b + 1536 * OS1_S1 + 1) = Y_PA * *(b + 1327 * OS1_S1 + 1) + alpha_Y * *(b + 1327 * OS1_S1 + 2) + 2 * one_over_two_p * (*(b + 1138 * OS1_S1 + 1) - alpha_over_p * *(b + 1138 * OS1_S1 + 2));
            *(b + 1537 * OS1_S1 + 1) = Y_PA * *(b + 1328 * OS1_S1 + 1) + alpha_Y * *(b + 1328 * OS1_S1 + 2) + one_over_two_p * (*(b + 1139 * OS1_S1 + 1) - alpha_over_p * *(b + 1139 * OS1_S1 + 2));
            *(b + 1538 * OS1_S1 + 1) = Y_PA * *(b + 1329 * OS1_S1 + 1) + alpha_Y * *(b + 1329 * OS1_S1 + 2);
            *(b + 1539 * OS1_S1 + 1) = Z_PA * *(b + 1329 * OS1_S1 + 1) + alpha_Z * *(b + 1329 * OS1_S1 + 2) + 18 * one_over_two_p * (*(b + 1139 * OS1_S1 + 1) - alpha_over_p * *(b + 1139 * OS1_S1 + 2));
            *(b + 1540 * OS1_S1 + 0) = X_PA * *(b + 1330 * OS1_S1 + 0) + alpha_X * *(b + 1330 * OS1_S1 + 1) + 19 * one_over_two_p * (*(b + 1140 * OS1_S1 + 0) - alpha_over_p * *(b + 1140 * OS1_S1 + 1));
            *(b + 1541 * OS1_S1 + 0) = Y_PA * *(b + 1330 * OS1_S1 + 0) + alpha_Y * *(b + 1330 * OS1_S1 + 1);
            *(b + 1542 * OS1_S1 + 0) = Z_PA * *(b + 1330 * OS1_S1 + 0) + alpha_Z * *(b + 1330 * OS1_S1 + 1);
            *(b + 1543 * OS1_S1 + 0) = Y_PA * *(b + 1331 * OS1_S1 + 0) + alpha_Y * *(b + 1331 * OS1_S1 + 1) + one_over_two_p * (*(b + 1140 * OS1_S1 + 0) - alpha_over_p * *(b + 1140 * OS1_S1 + 1));
            *(b + 1544 * OS1_S1 + 0) = Z_PA * *(b + 1331 * OS1_S1 + 0) + alpha_Z * *(b + 1331 * OS1_S1 + 1);
            *(b + 1545 * OS1_S1 + 0) = Z_PA * *(b + 1332 * OS1_S1 + 0) + alpha_Z * *(b + 1332 * OS1_S1 + 1) + one_over_two_p * (*(b + 1140 * OS1_S1 + 0) - alpha_over_p * *(b + 1140 * OS1_S1 + 1));
            *(b + 1546 * OS1_S1 + 0) = Y_PA * *(b + 1333 * OS1_S1 + 0) + alpha_Y * *(b + 1333 * OS1_S1 + 1) + 2 * one_over_two_p * (*(b + 1141 * OS1_S1 + 0) - alpha_over_p * *(b + 1141 * OS1_S1 + 1));
            *(b + 1547 * OS1_S1 + 0) = Z_PA * *(b + 1333 * OS1_S1 + 0) + alpha_Z * *(b + 1333 * OS1_S1 + 1);
            *(b + 1548 * OS1_S1 + 0) = Y_PA * *(b + 1335 * OS1_S1 + 0) + alpha_Y * *(b + 1335 * OS1_S1 + 1);
            *(b + 1549 * OS1_S1 + 0) = Z_PA * *(b + 1335 * OS1_S1 + 0) + alpha_Z * *(b + 1335 * OS1_S1 + 1) + 2 * one_over_two_p * (*(b + 1142 * OS1_S1 + 0) - alpha_over_p * *(b + 1142 * OS1_S1 + 1));
            *(b + 1550 * OS1_S1 + 0) = Y_PA * *(b + 1336 * OS1_S1 + 0) + alpha_Y * *(b + 1336 * OS1_S1 + 1) + 3 * one_over_two_p * (*(b + 1143 * OS1_S1 + 0) - alpha_over_p * *(b + 1143 * OS1_S1 + 1));
            *(b + 1551 * OS1_S1 + 0) = Z_PA * *(b + 1336 * OS1_S1 + 0) + alpha_Z * *(b + 1336 * OS1_S1 + 1);
            *(b + 1552 * OS1_S1 + 0) = Z_PA * *(b + 1337 * OS1_S1 + 0) + alpha_Z * *(b + 1337 * OS1_S1 + 1) + one_over_two_p * (*(b + 1143 * OS1_S1 + 0) - alpha_over_p * *(b + 1143 * OS1_S1 + 1));
            *(b + 1553 * OS1_S1 + 0) = Y_PA * *(b + 1339 * OS1_S1 + 0) + alpha_Y * *(b + 1339 * OS1_S1 + 1);
            *(b + 1554 * OS1_S1 + 0) = Z_PA * *(b + 1339 * OS1_S1 + 0) + alpha_Z * *(b + 1339 * OS1_S1 + 1) + 3 * one_over_two_p * (*(b + 1145 * OS1_S1 + 0) - alpha_over_p * *(b + 1145 * OS1_S1 + 1));
            *(b + 1555 * OS1_S1 + 0) = Y_PA * *(b + 1340 * OS1_S1 + 0) + alpha_Y * *(b + 1340 * OS1_S1 + 1) + 4 * one_over_two_p * (*(b + 1146 * OS1_S1 + 0) - alpha_over_p * *(b + 1146 * OS1_S1 + 1));
            *(b + 1556 * OS1_S1 + 0) = Z_PA * *(b + 1340 * OS1_S1 + 0) + alpha_Z * *(b + 1340 * OS1_S1 + 1);
            *(b + 1557 * OS1_S1 + 0) = Z_PA * *(b + 1341 * OS1_S1 + 0) + alpha_Z * *(b + 1341 * OS1_S1 + 1) + one_over_two_p * (*(b + 1146 * OS1_S1 + 0) - alpha_over_p * *(b + 1146 * OS1_S1 + 1));
            *(b + 1558 * OS1_S1 + 0) = Y_PA * *(b + 1343 * OS1_S1 + 0) + alpha_Y * *(b + 1343 * OS1_S1 + 1) + one_over_two_p * (*(b + 1149 * OS1_S1 + 0) - alpha_over_p * *(b + 1149 * OS1_S1 + 1));
            *(b + 1559 * OS1_S1 + 0) = Y_PA * *(b + 1344 * OS1_S1 + 0) + alpha_Y * *(b + 1344 * OS1_S1 + 1);
            *(b + 1560 * OS1_S1 + 0) = Z_PA * *(b + 1344 * OS1_S1 + 0) + alpha_Z * *(b + 1344 * OS1_S1 + 1) + 4 * one_over_two_p * (*(b + 1149 * OS1_S1 + 0) - alpha_over_p * *(b + 1149 * OS1_S1 + 1));
            *(b + 1561 * OS1_S1 + 0) = Y_PA * *(b + 1345 * OS1_S1 + 0) + alpha_Y * *(b + 1345 * OS1_S1 + 1) + 5 * one_over_two_p * (*(b + 1150 * OS1_S1 + 0) - alpha_over_p * *(b + 1150 * OS1_S1 + 1));
            *(b + 1562 * OS1_S1 + 0) = Z_PA * *(b + 1345 * OS1_S1 + 0) + alpha_Z * *(b + 1345 * OS1_S1 + 1);
            *(b + 1563 * OS1_S1 + 0) = Z_PA * *(b + 1346 * OS1_S1 + 0) + alpha_Z * *(b + 1346 * OS1_S1 + 1) + one_over_two_p * (*(b + 1150 * OS1_S1 + 0) - alpha_over_p * *(b + 1150 * OS1_S1 + 1));
            *(b + 1564 * OS1_S1 + 0) = Z_PA * *(b + 1347 * OS1_S1 + 0) + alpha_Z * *(b + 1347 * OS1_S1 + 1) + 2 * one_over_two_p * (*(b + 1151 * OS1_S1 + 0) - alpha_over_p * *(b + 1151 * OS1_S1 + 1));
            *(b + 1565 * OS1_S1 + 0) = Y_PA * *(b + 1349 * OS1_S1 + 0) + alpha_Y * *(b + 1349 * OS1_S1 + 1) + one_over_two_p * (*(b + 1154 * OS1_S1 + 0) - alpha_over_p * *(b + 1154 * OS1_S1 + 1));
            *(b + 1566 * OS1_S1 + 0) = Y_PA * *(b + 1350 * OS1_S1 + 0) + alpha_Y * *(b + 1350 * OS1_S1 + 1);
            *(b + 1567 * OS1_S1 + 0) = Z_PA * *(b + 1350 * OS1_S1 + 0) + alpha_Z * *(b + 1350 * OS1_S1 + 1) + 5 * one_over_two_p * (*(b + 1154 * OS1_S1 + 0) - alpha_over_p * *(b + 1154 * OS1_S1 + 1));
            *(b + 1568 * OS1_S1 + 0) = Y_PA * *(b + 1351 * OS1_S1 + 0) + alpha_Y * *(b + 1351 * OS1_S1 + 1) + 6 * one_over_two_p * (*(b + 1155 * OS1_S1 + 0) - alpha_over_p * *(b + 1155 * OS1_S1 + 1));
            *(b + 1569 * OS1_S1 + 0) = Z_PA * *(b + 1351 * OS1_S1 + 0) + alpha_Z * *(b + 1351 * OS1_S1 + 1);
            *(b + 1570 * OS1_S1 + 0) = Z_PA * *(b + 1352 * OS1_S1 + 0) + alpha_Z * *(b + 1352 * OS1_S1 + 1) + one_over_two_p * (*(b + 1155 * OS1_S1 + 0) - alpha_over_p * *(b + 1155 * OS1_S1 + 1));
            *(b + 1571 * OS1_S1 + 0) = Z_PA * *(b + 1353 * OS1_S1 + 0) + alpha_Z * *(b + 1353 * OS1_S1 + 1) + 2 * one_over_two_p * (*(b + 1156 * OS1_S1 + 0) - alpha_over_p * *(b + 1156 * OS1_S1 + 1));
            *(b + 1572 * OS1_S1 + 0) = Y_PA * *(b + 1355 * OS1_S1 + 0) + alpha_Y * *(b + 1355 * OS1_S1 + 1) + 2 * one_over_two_p * (*(b + 1159 * OS1_S1 + 0) - alpha_over_p * *(b + 1159 * OS1_S1 + 1));
            *(b + 1573 * OS1_S1 + 0) = Y_PA * *(b + 1356 * OS1_S1 + 0) + alpha_Y * *(b + 1356 * OS1_S1 + 1) + one_over_two_p * (*(b + 1160 * OS1_S1 + 0) - alpha_over_p * *(b + 1160 * OS1_S1 + 1));
            *(b + 1574 * OS1_S1 + 0) = Y_PA * *(b + 1357 * OS1_S1 + 0) + alpha_Y * *(b + 1357 * OS1_S1 + 1);
            *(b + 1575 * OS1_S1 + 0) = Z_PA * *(b + 1357 * OS1_S1 + 0) + alpha_Z * *(b + 1357 * OS1_S1 + 1) + 6 * one_over_two_p * (*(b + 1160 * OS1_S1 + 0) - alpha_over_p * *(b + 1160 * OS1_S1 + 1));
            *(b + 1576 * OS1_S1 + 0) = Y_PA * *(b + 1358 * OS1_S1 + 0) + alpha_Y * *(b + 1358 * OS1_S1 + 1) + 7 * one_over_two_p * (*(b + 1161 * OS1_S1 + 0) - alpha_over_p * *(b + 1161 * OS1_S1 + 1));
            *(b + 1577 * OS1_S1 + 0) = Z_PA * *(b + 1358 * OS1_S1 + 0) + alpha_Z * *(b + 1358 * OS1_S1 + 1);
            *(b + 1578 * OS1_S1 + 0) = Z_PA * *(b + 1359 * OS1_S1 + 0) + alpha_Z * *(b + 1359 * OS1_S1 + 1) + one_over_two_p * (*(b + 1161 * OS1_S1 + 0) - alpha_over_p * *(b + 1161 * OS1_S1 + 1));
            *(b + 1579 * OS1_S1 + 0) = Z_PA * *(b + 1360 * OS1_S1 + 0) + alpha_Z * *(b + 1360 * OS1_S1 + 1) + 2 * one_over_two_p * (*(b + 1162 * OS1_S1 + 0) - alpha_over_p * *(b + 1162 * OS1_S1 + 1));
            *(b + 1580 * OS1_S1 + 0) = Z_PA * *(b + 1361 * OS1_S1 + 0) + alpha_Z * *(b + 1361 * OS1_S1 + 1) + 3 * one_over_two_p * (*(b + 1163 * OS1_S1 + 0) - alpha_over_p * *(b + 1163 * OS1_S1 + 1));
            *(b + 1581 * OS1_S1 + 0) = Y_PA * *(b + 1363 * OS1_S1 + 0) + alpha_Y * *(b + 1363 * OS1_S1 + 1) + 2 * one_over_two_p * (*(b + 1166 * OS1_S1 + 0) - alpha_over_p * *(b + 1166 * OS1_S1 + 1));
            *(b + 1582 * OS1_S1 + 0) = Y_PA * *(b + 1364 * OS1_S1 + 0) + alpha_Y * *(b + 1364 * OS1_S1 + 1) + one_over_two_p * (*(b + 1167 * OS1_S1 + 0) - alpha_over_p * *(b + 1167 * OS1_S1 + 1));
            *(b + 1583 * OS1_S1 + 0) = Y_PA * *(b + 1365 * OS1_S1 + 0) + alpha_Y * *(b + 1365 * OS1_S1 + 1);
            *(b + 1584 * OS1_S1 + 0) = Z_PA * *(b + 1365 * OS1_S1 + 0) + alpha_Z * *(b + 1365 * OS1_S1 + 1) + 7 * one_over_two_p * (*(b + 1167 * OS1_S1 + 0) - alpha_over_p * *(b + 1167 * OS1_S1 + 1));
            *(b + 1585 * OS1_S1 + 0) = Y_PA * *(b + 1366 * OS1_S1 + 0) + alpha_Y * *(b + 1366 * OS1_S1 + 1) + 8 * one_over_two_p * (*(b + 1168 * OS1_S1 + 0) - alpha_over_p * *(b + 1168 * OS1_S1 + 1));
            *(b + 1586 * OS1_S1 + 0) = Z_PA * *(b + 1366 * OS1_S1 + 0) + alpha_Z * *(b + 1366 * OS1_S1 + 1);
            *(b + 1587 * OS1_S1 + 0) = Z_PA * *(b + 1367 * OS1_S1 + 0) + alpha_Z * *(b + 1367 * OS1_S1 + 1) + one_over_two_p * (*(b + 1168 * OS1_S1 + 0) - alpha_over_p * *(b + 1168 * OS1_S1 + 1));
            *(b + 1588 * OS1_S1 + 0) = Z_PA * *(b + 1368 * OS1_S1 + 0) + alpha_Z * *(b + 1368 * OS1_S1 + 1) + 2 * one_over_two_p * (*(b + 1169 * OS1_S1 + 0) - alpha_over_p * *(b + 1169 * OS1_S1 + 1));
            *(b + 1589 * OS1_S1 + 0) = Z_PA * *(b + 1369 * OS1_S1 + 0) + alpha_Z * *(b + 1369 * OS1_S1 + 1) + 3 * one_over_two_p * (*(b + 1170 * OS1_S1 + 0) - alpha_over_p * *(b + 1170 * OS1_S1 + 1));
            *(b + 1590 * OS1_S1 + 0) = Y_PA * *(b + 1371 * OS1_S1 + 0) + alpha_Y * *(b + 1371 * OS1_S1 + 1) + 3 * one_over_two_p * (*(b + 1173 * OS1_S1 + 0) - alpha_over_p * *(b + 1173 * OS1_S1 + 1));
            *(b + 1591 * OS1_S1 + 0) = Y_PA * *(b + 1372 * OS1_S1 + 0) + alpha_Y * *(b + 1372 * OS1_S1 + 1) + 2 * one_over_two_p * (*(b + 1174 * OS1_S1 + 0) - alpha_over_p * *(b + 1174 * OS1_S1 + 1));
            *(b + 1592 * OS1_S1 + 0) = Y_PA * *(b + 1373 * OS1_S1 + 0) + alpha_Y * *(b + 1373 * OS1_S1 + 1) + one_over_two_p * (*(b + 1175 * OS1_S1 + 0) - alpha_over_p * *(b + 1175 * OS1_S1 + 1));
            *(b + 1593 * OS1_S1 + 0) = Y_PA * *(b + 1374 * OS1_S1 + 0) + alpha_Y * *(b + 1374 * OS1_S1 + 1);
            *(b + 1594 * OS1_S1 + 0) = Z_PA * *(b + 1374 * OS1_S1 + 0) + alpha_Z * *(b + 1374 * OS1_S1 + 1) + 8 * one_over_two_p * (*(b + 1175 * OS1_S1 + 0) - alpha_over_p * *(b + 1175 * OS1_S1 + 1));
            *(b + 1595 * OS1_S1 + 0) = Y_PA * *(b + 1375 * OS1_S1 + 0) + alpha_Y * *(b + 1375 * OS1_S1 + 1) + 9 * one_over_two_p * (*(b + 1176 * OS1_S1 + 0) - alpha_over_p * *(b + 1176 * OS1_S1 + 1));
            *(b + 1596 * OS1_S1 + 0) = Z_PA * *(b + 1375 * OS1_S1 + 0) + alpha_Z * *(b + 1375 * OS1_S1 + 1);
            *(b + 1597 * OS1_S1 + 0) = Z_PA * *(b + 1376 * OS1_S1 + 0) + alpha_Z * *(b + 1376 * OS1_S1 + 1) + one_over_two_p * (*(b + 1176 * OS1_S1 + 0) - alpha_over_p * *(b + 1176 * OS1_S1 + 1));
            *(b + 1598 * OS1_S1 + 0) = Z_PA * *(b + 1377 * OS1_S1 + 0) + alpha_Z * *(b + 1377 * OS1_S1 + 1) + 2 * one_over_two_p * (*(b + 1177 * OS1_S1 + 0) - alpha_over_p * *(b + 1177 * OS1_S1 + 1));
            *(b + 1599 * OS1_S1 + 0) = Z_PA * *(b + 1378 * OS1_S1 + 0) + alpha_Z * *(b + 1378 * OS1_S1 + 1) + 3 * one_over_two_p * (*(b + 1178 * OS1_S1 + 0) - alpha_over_p * *(b + 1178 * OS1_S1 + 1));
            *(b + 1600 * OS1_S1 + 0) = Z_PA * *(b + 1379 * OS1_S1 + 0) + alpha_Z * *(b + 1379 * OS1_S1 + 1) + 4 * one_over_two_p * (*(b + 1179 * OS1_S1 + 0) - alpha_over_p * *(b + 1179 * OS1_S1 + 1));
            *(b + 1601 * OS1_S1 + 0) = Y_PA * *(b + 1381 * OS1_S1 + 0) + alpha_Y * *(b + 1381 * OS1_S1 + 1) + 3 * one_over_two_p * (*(b + 1182 * OS1_S1 + 0) - alpha_over_p * *(b + 1182 * OS1_S1 + 1));
            *(b + 1602 * OS1_S1 + 0) = Y_PA * *(b + 1382 * OS1_S1 + 0) + alpha_Y * *(b + 1382 * OS1_S1 + 1) + 2 * one_over_two_p * (*(b + 1183 * OS1_S1 + 0) - alpha_over_p * *(b + 1183 * OS1_S1 + 1));
            *(b + 1603 * OS1_S1 + 0) = Y_PA * *(b + 1383 * OS1_S1 + 0) + alpha_Y * *(b + 1383 * OS1_S1 + 1) + one_over_two_p * (*(b + 1184 * OS1_S1 + 0) - alpha_over_p * *(b + 1184 * OS1_S1 + 1));
            *(b + 1604 * OS1_S1 + 0) = Y_PA * *(b + 1384 * OS1_S1 + 0) + alpha_Y * *(b + 1384 * OS1_S1 + 1);
            *(b + 1605 * OS1_S1 + 0) = Z_PA * *(b + 1384 * OS1_S1 + 0) + alpha_Z * *(b + 1384 * OS1_S1 + 1) + 9 * one_over_two_p * (*(b + 1184 * OS1_S1 + 0) - alpha_over_p * *(b + 1184 * OS1_S1 + 1));
            *(b + 1606 * OS1_S1 + 0) = X_PA * *(b + 1396 * OS1_S1 + 0) + alpha_X * *(b + 1396 * OS1_S1 + 1) + 8 * one_over_two_p * (*(b + 1206 * OS1_S1 + 0) - alpha_over_p * *(b + 1206 * OS1_S1 + 1));
            *(b + 1607 * OS1_S1 + 0) = Z_PA * *(b + 1385 * OS1_S1 + 0) + alpha_Z * *(b + 1385 * OS1_S1 + 1);
            *(b + 1608 * OS1_S1 + 0) = Z_PA * *(b + 1386 * OS1_S1 + 0) + alpha_Z * *(b + 1386 * OS1_S1 + 1) + one_over_two_p * (*(b + 1185 * OS1_S1 + 0) - alpha_over_p * *(b + 1185 * OS1_S1 + 1));
            *(b + 1609 * OS1_S1 + 0) = Z_PA * *(b + 1387 * OS1_S1 + 0) + alpha_Z * *(b + 1387 * OS1_S1 + 1) + 2 * one_over_two_p * (*(b + 1186 * OS1_S1 + 0) - alpha_over_p * *(b + 1186 * OS1_S1 + 1));
            *(b + 1610 * OS1_S1 + 0) = Z_PA * *(b + 1388 * OS1_S1 + 0) + alpha_Z * *(b + 1388 * OS1_S1 + 1) + 3 * one_over_two_p * (*(b + 1187 * OS1_S1 + 0) - alpha_over_p * *(b + 1187 * OS1_S1 + 1));
            *(b + 1611 * OS1_S1 + 0) = Z_PA * *(b + 1389 * OS1_S1 + 0) + alpha_Z * *(b + 1389 * OS1_S1 + 1) + 4 * one_over_two_p * (*(b + 1188 * OS1_S1 + 0) - alpha_over_p * *(b + 1188 * OS1_S1 + 1));
            *(b + 1612 * OS1_S1 + 0) = Y_PA * *(b + 1391 * OS1_S1 + 0) + alpha_Y * *(b + 1391 * OS1_S1 + 1) + 4 * one_over_two_p * (*(b + 1191 * OS1_S1 + 0) - alpha_over_p * *(b + 1191 * OS1_S1 + 1));
            *(b + 1613 * OS1_S1 + 0) = Y_PA * *(b + 1392 * OS1_S1 + 0) + alpha_Y * *(b + 1392 * OS1_S1 + 1) + 3 * one_over_two_p * (*(b + 1192 * OS1_S1 + 0) - alpha_over_p * *(b + 1192 * OS1_S1 + 1));
            *(b + 1614 * OS1_S1 + 0) = Y_PA * *(b + 1393 * OS1_S1 + 0) + alpha_Y * *(b + 1393 * OS1_S1 + 1) + 2 * one_over_two_p * (*(b + 1193 * OS1_S1 + 0) - alpha_over_p * *(b + 1193 * OS1_S1 + 1));
            *(b + 1615 * OS1_S1 + 0) = Y_PA * *(b + 1394 * OS1_S1 + 0) + alpha_Y * *(b + 1394 * OS1_S1 + 1) + one_over_two_p * (*(b + 1194 * OS1_S1 + 0) - alpha_over_p * *(b + 1194 * OS1_S1 + 1));
            *(b + 1616 * OS1_S1 + 0) = Y_PA * *(b + 1395 * OS1_S1 + 0) + alpha_Y * *(b + 1395 * OS1_S1 + 1);
            *(b + 1617 * OS1_S1 + 0) = X_PA * *(b + 1407 * OS1_S1 + 0) + alpha_X * *(b + 1407 * OS1_S1 + 1) + 8 * one_over_two_p * (*(b + 1217 * OS1_S1 + 0) - alpha_over_p * *(b + 1217 * OS1_S1 + 1));
            *(b + 1618 * OS1_S1 + 0) = X_PA * *(b + 1408 * OS1_S1 + 0) + alpha_X * *(b + 1408 * OS1_S1 + 1) + 7 * one_over_two_p * (*(b + 1218 * OS1_S1 + 0) - alpha_over_p * *(b + 1218 * OS1_S1 + 1));
            *(b + 1619 * OS1_S1 + 0) = Z_PA * *(b + 1396 * OS1_S1 + 0) + alpha_Z * *(b + 1396 * OS1_S1 + 1);
            *(b + 1620 * OS1_S1 + 0) = Z_PA * *(b + 1397 * OS1_S1 + 0) + alpha_Z * *(b + 1397 * OS1_S1 + 1) + one_over_two_p * (*(b + 1195 * OS1_S1 + 0) - alpha_over_p * *(b + 1195 * OS1_S1 + 1));
            *(b + 1621 * OS1_S1 + 0) = Z_PA * *(b + 1398 * OS1_S1 + 0) + alpha_Z * *(b + 1398 * OS1_S1 + 1) + 2 * one_over_two_p * (*(b + 1196 * OS1_S1 + 0) - alpha_over_p * *(b + 1196 * OS1_S1 + 1));
            *(b + 1622 * OS1_S1 + 0) = Z_PA * *(b + 1399 * OS1_S1 + 0) + alpha_Z * *(b + 1399 * OS1_S1 + 1) + 3 * one_over_two_p * (*(b + 1197 * OS1_S1 + 0) - alpha_over_p * *(b + 1197 * OS1_S1 + 1));
            *(b + 1623 * OS1_S1 + 0) = Z_PA * *(b + 1400 * OS1_S1 + 0) + alpha_Z * *(b + 1400 * OS1_S1 + 1) + 4 * one_over_two_p * (*(b + 1198 * OS1_S1 + 0) - alpha_over_p * *(b + 1198 * OS1_S1 + 1));
            *(b + 1624 * OS1_S1 + 0) = Z_PA * *(b + 1401 * OS1_S1 + 0) + alpha_Z * *(b + 1401 * OS1_S1 + 1) + 5 * one_over_two_p * (*(b + 1199 * OS1_S1 + 0) - alpha_over_p * *(b + 1199 * OS1_S1 + 1));
            *(b + 1625 * OS1_S1 + 0) = Y_PA * *(b + 1403 * OS1_S1 + 0) + alpha_Y * *(b + 1403 * OS1_S1 + 1) + 4 * one_over_two_p * (*(b + 1202 * OS1_S1 + 0) - alpha_over_p * *(b + 1202 * OS1_S1 + 1));
            *(b + 1626 * OS1_S1 + 0) = Y_PA * *(b + 1404 * OS1_S1 + 0) + alpha_Y * *(b + 1404 * OS1_S1 + 1) + 3 * one_over_two_p * (*(b + 1203 * OS1_S1 + 0) - alpha_over_p * *(b + 1203 * OS1_S1 + 1));
            *(b + 1627 * OS1_S1 + 0) = Y_PA * *(b + 1405 * OS1_S1 + 0) + alpha_Y * *(b + 1405 * OS1_S1 + 1) + 2 * one_over_two_p * (*(b + 1204 * OS1_S1 + 0) - alpha_over_p * *(b + 1204 * OS1_S1 + 1));
            *(b + 1628 * OS1_S1 + 0) = Y_PA * *(b + 1406 * OS1_S1 + 0) + alpha_Y * *(b + 1406 * OS1_S1 + 1) + one_over_two_p * (*(b + 1205 * OS1_S1 + 0) - alpha_over_p * *(b + 1205 * OS1_S1 + 1));
            *(b + 1629 * OS1_S1 + 0) = Y_PA * *(b + 1407 * OS1_S1 + 0) + alpha_Y * *(b + 1407 * OS1_S1 + 1);
            *(b + 1630 * OS1_S1 + 0) = X_PA * *(b + 1420 * OS1_S1 + 0) + alpha_X * *(b + 1420 * OS1_S1 + 1) + 7 * one_over_two_p * (*(b + 1230 * OS1_S1 + 0) - alpha_over_p * *(b + 1230 * OS1_S1 + 1));
            *(b + 1631 * OS1_S1 + 0) = X_PA * *(b + 1421 * OS1_S1 + 0) + alpha_X * *(b + 1421 * OS1_S1 + 1) + 6 * one_over_two_p * (*(b + 1231 * OS1_S1 + 0) - alpha_over_p * *(b + 1231 * OS1_S1 + 1));
            *(b + 1632 * OS1_S1 + 0) = Z_PA * *(b + 1408 * OS1_S1 + 0) + alpha_Z * *(b + 1408 * OS1_S1 + 1);
            *(b + 1633 * OS1_S1 + 0) = Z_PA * *(b + 1409 * OS1_S1 + 0) + alpha_Z * *(b + 1409 * OS1_S1 + 1) + one_over_two_p * (*(b + 1206 * OS1_S1 + 0) - alpha_over_p * *(b + 1206 * OS1_S1 + 1));
            *(b + 1634 * OS1_S1 + 0) = Z_PA * *(b + 1410 * OS1_S1 + 0) + alpha_Z * *(b + 1410 * OS1_S1 + 1) + 2 * one_over_two_p * (*(b + 1207 * OS1_S1 + 0) - alpha_over_p * *(b + 1207 * OS1_S1 + 1));
            *(b + 1635 * OS1_S1 + 0) = Z_PA * *(b + 1411 * OS1_S1 + 0) + alpha_Z * *(b + 1411 * OS1_S1 + 1) + 3 * one_over_two_p * (*(b + 1208 * OS1_S1 + 0) - alpha_over_p * *(b + 1208 * OS1_S1 + 1));
            *(b + 1636 * OS1_S1 + 0) = Z_PA * *(b + 1412 * OS1_S1 + 0) + alpha_Z * *(b + 1412 * OS1_S1 + 1) + 4 * one_over_two_p * (*(b + 1209 * OS1_S1 + 0) - alpha_over_p * *(b + 1209 * OS1_S1 + 1));
            *(b + 1637 * OS1_S1 + 0) = Z_PA * *(b + 1413 * OS1_S1 + 0) + alpha_Z * *(b + 1413 * OS1_S1 + 1) + 5 * one_over_two_p * (*(b + 1210 * OS1_S1 + 0) - alpha_over_p * *(b + 1210 * OS1_S1 + 1));
            *(b + 1638 * OS1_S1 + 0) = Y_PA * *(b + 1415 * OS1_S1 + 0) + alpha_Y * *(b + 1415 * OS1_S1 + 1) + 5 * one_over_two_p * (*(b + 1213 * OS1_S1 + 0) - alpha_over_p * *(b + 1213 * OS1_S1 + 1));
            *(b + 1639 * OS1_S1 + 0) = Y_PA * *(b + 1416 * OS1_S1 + 0) + alpha_Y * *(b + 1416 * OS1_S1 + 1) + 4 * one_over_two_p * (*(b + 1214 * OS1_S1 + 0) - alpha_over_p * *(b + 1214 * OS1_S1 + 1));
            *(b + 1640 * OS1_S1 + 0) = Y_PA * *(b + 1417 * OS1_S1 + 0) + alpha_Y * *(b + 1417 * OS1_S1 + 1) + 3 * one_over_two_p * (*(b + 1215 * OS1_S1 + 0) - alpha_over_p * *(b + 1215 * OS1_S1 + 1));
            *(b + 1641 * OS1_S1 + 0) = Y_PA * *(b + 1418 * OS1_S1 + 0) + alpha_Y * *(b + 1418 * OS1_S1 + 1) + 2 * one_over_two_p * (*(b + 1216 * OS1_S1 + 0) - alpha_over_p * *(b + 1216 * OS1_S1 + 1));
            *(b + 1642 * OS1_S1 + 0) = Y_PA * *(b + 1419 * OS1_S1 + 0) + alpha_Y * *(b + 1419 * OS1_S1 + 1) + one_over_two_p * (*(b + 1217 * OS1_S1 + 0) - alpha_over_p * *(b + 1217 * OS1_S1 + 1));
            *(b + 1643 * OS1_S1 + 0) = Y_PA * *(b + 1420 * OS1_S1 + 0) + alpha_Y * *(b + 1420 * OS1_S1 + 1);
            *(b + 1644 * OS1_S1 + 0) = X_PA * *(b + 1434 * OS1_S1 + 0) + alpha_X * *(b + 1434 * OS1_S1 + 1) + 6 * one_over_two_p * (*(b + 1244 * OS1_S1 + 0) - alpha_over_p * *(b + 1244 * OS1_S1 + 1));
            *(b + 1645 * OS1_S1 + 0) = X_PA * *(b + 1435 * OS1_S1 + 0) + alpha_X * *(b + 1435 * OS1_S1 + 1) + 5 * one_over_two_p * (*(b + 1245 * OS1_S1 + 0) - alpha_over_p * *(b + 1245 * OS1_S1 + 1));
            *(b + 1646 * OS1_S1 + 0) = Z_PA * *(b + 1421 * OS1_S1 + 0) + alpha_Z * *(b + 1421 * OS1_S1 + 1);
            *(b + 1647 * OS1_S1 + 0) = Z_PA * *(b + 1422 * OS1_S1 + 0) + alpha_Z * *(b + 1422 * OS1_S1 + 1) + one_over_two_p * (*(b + 1218 * OS1_S1 + 0) - alpha_over_p * *(b + 1218 * OS1_S1 + 1));
            *(b + 1648 * OS1_S1 + 0) = Z_PA * *(b + 1423 * OS1_S1 + 0) + alpha_Z * *(b + 1423 * OS1_S1 + 1) + 2 * one_over_two_p * (*(b + 1219 * OS1_S1 + 0) - alpha_over_p * *(b + 1219 * OS1_S1 + 1));
            *(b + 1649 * OS1_S1 + 0) = Z_PA * *(b + 1424 * OS1_S1 + 0) + alpha_Z * *(b + 1424 * OS1_S1 + 1) + 3 * one_over_two_p * (*(b + 1220 * OS1_S1 + 0) - alpha_over_p * *(b + 1220 * OS1_S1 + 1));
            *(b + 1650 * OS1_S1 + 0) = Z_PA * *(b + 1425 * OS1_S1 + 0) + alpha_Z * *(b + 1425 * OS1_S1 + 1) + 4 * one_over_two_p * (*(b + 1221 * OS1_S1 + 0) - alpha_over_p * *(b + 1221 * OS1_S1 + 1));
            *(b + 1651 * OS1_S1 + 0) = Z_PA * *(b + 1426 * OS1_S1 + 0) + alpha_Z * *(b + 1426 * OS1_S1 + 1) + 5 * one_over_two_p * (*(b + 1222 * OS1_S1 + 0) - alpha_over_p * *(b + 1222 * OS1_S1 + 1));
            *(b + 1652 * OS1_S1 + 0) = X_PA * *(b + 1442 * OS1_S1 + 0) + alpha_X * *(b + 1442 * OS1_S1 + 1) + 5 * one_over_two_p * (*(b + 1252 * OS1_S1 + 0) - alpha_over_p * *(b + 1252 * OS1_S1 + 1));
            *(b + 1653 * OS1_S1 + 0) = Y_PA * *(b + 1429 * OS1_S1 + 0) + alpha_Y * *(b + 1429 * OS1_S1 + 1) + 5 * one_over_two_p * (*(b + 1226 * OS1_S1 + 0) - alpha_over_p * *(b + 1226 * OS1_S1 + 1));
            *(b + 1654 * OS1_S1 + 0) = Y_PA * *(b + 1430 * OS1_S1 + 0) + alpha_Y * *(b + 1430 * OS1_S1 + 1) + 4 * one_over_two_p * (*(b + 1227 * OS1_S1 + 0) - alpha_over_p * *(b + 1227 * OS1_S1 + 1));
            *(b + 1655 * OS1_S1 + 0) = Y_PA * *(b + 1431 * OS1_S1 + 0) + alpha_Y * *(b + 1431 * OS1_S1 + 1) + 3 * one_over_two_p * (*(b + 1228 * OS1_S1 + 0) - alpha_over_p * *(b + 1228 * OS1_S1 + 1));
            *(b + 1656 * OS1_S1 + 0) = Y_PA * *(b + 1432 * OS1_S1 + 0) + alpha_Y * *(b + 1432 * OS1_S1 + 1) + 2 * one_over_two_p * (*(b + 1229 * OS1_S1 + 0) - alpha_over_p * *(b + 1229 * OS1_S1 + 1));
            *(b + 1657 * OS1_S1 + 0) = Y_PA * *(b + 1433 * OS1_S1 + 0) + alpha_Y * *(b + 1433 * OS1_S1 + 1) + one_over_two_p * (*(b + 1230 * OS1_S1 + 0) - alpha_over_p * *(b + 1230 * OS1_S1 + 1));
            *(b + 1658 * OS1_S1 + 0) = Y_PA * *(b + 1434 * OS1_S1 + 0) + alpha_Y * *(b + 1434 * OS1_S1 + 1);
            *(b + 1659 * OS1_S1 + 0) = X_PA * *(b + 1449 * OS1_S1 + 0) + alpha_X * *(b + 1449 * OS1_S1 + 1) + 5 * one_over_two_p * (*(b + 1259 * OS1_S1 + 0) - alpha_over_p * *(b + 1259 * OS1_S1 + 1));
            *(b + 1660 * OS1_S1 + 0) = X_PA * *(b + 1450 * OS1_S1 + 0) + alpha_X * *(b + 1450 * OS1_S1 + 1) + 4 * one_over_two_p * (*(b + 1260 * OS1_S1 + 0) - alpha_over_p * *(b + 1260 * OS1_S1 + 1));
            *(b + 1661 * OS1_S1 + 0) = Z_PA * *(b + 1435 * OS1_S1 + 0) + alpha_Z * *(b + 1435 * OS1_S1 + 1);
            *(b + 1662 * OS1_S1 + 0) = Z_PA * *(b + 1436 * OS1_S1 + 0) + alpha_Z * *(b + 1436 * OS1_S1 + 1) + one_over_two_p * (*(b + 1231 * OS1_S1 + 0) - alpha_over_p * *(b + 1231 * OS1_S1 + 1));
            *(b + 1663 * OS1_S1 + 0) = Z_PA * *(b + 1437 * OS1_S1 + 0) + alpha_Z * *(b + 1437 * OS1_S1 + 1) + 2 * one_over_two_p * (*(b + 1232 * OS1_S1 + 0) - alpha_over_p * *(b + 1232 * OS1_S1 + 1));
            *(b + 1664 * OS1_S1 + 0) = Z_PA * *(b + 1438 * OS1_S1 + 0) + alpha_Z * *(b + 1438 * OS1_S1 + 1) + 3 * one_over_two_p * (*(b + 1233 * OS1_S1 + 0) - alpha_over_p * *(b + 1233 * OS1_S1 + 1));
            *(b + 1665 * OS1_S1 + 0) = Z_PA * *(b + 1439 * OS1_S1 + 0) + alpha_Z * *(b + 1439 * OS1_S1 + 1) + 4 * one_over_two_p * (*(b + 1234 * OS1_S1 + 0) - alpha_over_p * *(b + 1234 * OS1_S1 + 1));
            *(b + 1666 * OS1_S1 + 0) = X_PA * *(b + 1456 * OS1_S1 + 0) + alpha_X * *(b + 1456 * OS1_S1 + 1) + 4 * one_over_two_p * (*(b + 1266 * OS1_S1 + 0) - alpha_over_p * *(b + 1266 * OS1_S1 + 1));
            *(b + 1667 * OS1_S1 + 0) = X_PA * *(b + 1457 * OS1_S1 + 0) + alpha_X * *(b + 1457 * OS1_S1 + 1) + 4 * one_over_two_p * (*(b + 1267 * OS1_S1 + 0) - alpha_over_p * *(b + 1267 * OS1_S1 + 1));
            *(b + 1668 * OS1_S1 + 0) = X_PA * *(b + 1458 * OS1_S1 + 0) + alpha_X * *(b + 1458 * OS1_S1 + 1) + 4 * one_over_two_p * (*(b + 1268 * OS1_S1 + 0) - alpha_over_p * *(b + 1268 * OS1_S1 + 1));
            *(b + 1669 * OS1_S1 + 0) = X_PA * *(b + 1459 * OS1_S1 + 0) + alpha_X * *(b + 1459 * OS1_S1 + 1) + 4 * one_over_two_p * (*(b + 1269 * OS1_S1 + 0) - alpha_over_p * *(b + 1269 * OS1_S1 + 1));
            *(b + 1670 * OS1_S1 + 0) = Y_PA * *(b + 1445 * OS1_S1 + 0) + alpha_Y * *(b + 1445 * OS1_S1 + 1) + 4 * one_over_two_p * (*(b + 1241 * OS1_S1 + 0) - alpha_over_p * *(b + 1241 * OS1_S1 + 1));
            *(b + 1671 * OS1_S1 + 0) = Y_PA * *(b + 1446 * OS1_S1 + 0) + alpha_Y * *(b + 1446 * OS1_S1 + 1) + 3 * one_over_two_p * (*(b + 1242 * OS1_S1 + 0) - alpha_over_p * *(b + 1242 * OS1_S1 + 1));
            *(b + 1672 * OS1_S1 + 0) = Y_PA * *(b + 1447 * OS1_S1 + 0) + alpha_Y * *(b + 1447 * OS1_S1 + 1) + 2 * one_over_two_p * (*(b + 1243 * OS1_S1 + 0) - alpha_over_p * *(b + 1243 * OS1_S1 + 1));
            *(b + 1673 * OS1_S1 + 0) = Y_PA * *(b + 1448 * OS1_S1 + 0) + alpha_Y * *(b + 1448 * OS1_S1 + 1) + one_over_two_p * (*(b + 1244 * OS1_S1 + 0) - alpha_over_p * *(b + 1244 * OS1_S1 + 1));
            *(b + 1674 * OS1_S1 + 0) = Y_PA * *(b + 1449 * OS1_S1 + 0) + alpha_Y * *(b + 1449 * OS1_S1 + 1);
            *(b + 1675 * OS1_S1 + 0) = X_PA * *(b + 1465 * OS1_S1 + 0) + alpha_X * *(b + 1465 * OS1_S1 + 1) + 4 * one_over_two_p * (*(b + 1275 * OS1_S1 + 0) - alpha_over_p * *(b + 1275 * OS1_S1 + 1));
            *(b + 1676 * OS1_S1 + 0) = X_PA * *(b + 1466 * OS1_S1 + 0) + alpha_X * *(b + 1466 * OS1_S1 + 1) + 3 * one_over_two_p * (*(b + 1276 * OS1_S1 + 0) - alpha_over_p * *(b + 1276 * OS1_S1 + 1));
            *(b + 1677 * OS1_S1 + 0) = Z_PA * *(b + 1450 * OS1_S1 + 0) + alpha_Z * *(b + 1450 * OS1_S1 + 1);
            *(b + 1678 * OS1_S1 + 0) = Z_PA * *(b + 1451 * OS1_S1 + 0) + alpha_Z * *(b + 1451 * OS1_S1 + 1) + one_over_two_p * (*(b + 1245 * OS1_S1 + 0) - alpha_over_p * *(b + 1245 * OS1_S1 + 1));
            *(b + 1679 * OS1_S1 + 0) = Z_PA * *(b + 1452 * OS1_S1 + 0) + alpha_Z * *(b + 1452 * OS1_S1 + 1) + 2 * one_over_two_p * (*(b + 1246 * OS1_S1 + 0) - alpha_over_p * *(b + 1246 * OS1_S1 + 1));
            *(b + 1680 * OS1_S1 + 0) = Z_PA * *(b + 1453 * OS1_S1 + 0) + alpha_Z * *(b + 1453 * OS1_S1 + 1) + 3 * one_over_two_p * (*(b + 1247 * OS1_S1 + 0) - alpha_over_p * *(b + 1247 * OS1_S1 + 1));
            *(b + 1681 * OS1_S1 + 0) = X_PA * *(b + 1471 * OS1_S1 + 0) + alpha_X * *(b + 1471 * OS1_S1 + 1) + 3 * one_over_two_p * (*(b + 1281 * OS1_S1 + 0) - alpha_over_p * *(b + 1281 * OS1_S1 + 1));
            *(b + 1682 * OS1_S1 + 0) = X_PA * *(b + 1472 * OS1_S1 + 0) + alpha_X * *(b + 1472 * OS1_S1 + 1) + 3 * one_over_two_p * (*(b + 1282 * OS1_S1 + 0) - alpha_over_p * *(b + 1282 * OS1_S1 + 1));
            *(b + 1683 * OS1_S1 + 0) = X_PA * *(b + 1473 * OS1_S1 + 0) + alpha_X * *(b + 1473 * OS1_S1 + 1) + 3 * one_over_two_p * (*(b + 1283 * OS1_S1 + 0) - alpha_over_p * *(b + 1283 * OS1_S1 + 1));
            *(b + 1684 * OS1_S1 + 0) = X_PA * *(b + 1474 * OS1_S1 + 0) + alpha_X * *(b + 1474 * OS1_S1 + 1) + 3 * one_over_two_p * (*(b + 1284 * OS1_S1 + 0) - alpha_over_p * *(b + 1284 * OS1_S1 + 1));
            *(b + 1685 * OS1_S1 + 0) = X_PA * *(b + 1475 * OS1_S1 + 0) + alpha_X * *(b + 1475 * OS1_S1 + 1) + 3 * one_over_two_p * (*(b + 1285 * OS1_S1 + 0) - alpha_over_p * *(b + 1285 * OS1_S1 + 1));
            *(b + 1686 * OS1_S1 + 0) = X_PA * *(b + 1476 * OS1_S1 + 0) + alpha_X * *(b + 1476 * OS1_S1 + 1) + 3 * one_over_two_p * (*(b + 1286 * OS1_S1 + 0) - alpha_over_p * *(b + 1286 * OS1_S1 + 1));
            *(b + 1687 * OS1_S1 + 0) = X_PA * *(b + 1477 * OS1_S1 + 0) + alpha_X * *(b + 1477 * OS1_S1 + 1) + 3 * one_over_two_p * (*(b + 1287 * OS1_S1 + 0) - alpha_over_p * *(b + 1287 * OS1_S1 + 1));
            *(b + 1688 * OS1_S1 + 0) = Y_PA * *(b + 1462 * OS1_S1 + 0) + alpha_Y * *(b + 1462 * OS1_S1 + 1) + 3 * one_over_two_p * (*(b + 1257 * OS1_S1 + 0) - alpha_over_p * *(b + 1257 * OS1_S1 + 1));
            *(b + 1689 * OS1_S1 + 0) = Y_PA * *(b + 1463 * OS1_S1 + 0) + alpha_Y * *(b + 1463 * OS1_S1 + 1) + 2 * one_over_two_p * (*(b + 1258 * OS1_S1 + 0) - alpha_over_p * *(b + 1258 * OS1_S1 + 1));
            *(b + 1690 * OS1_S1 + 0) = Y_PA * *(b + 1464 * OS1_S1 + 0) + alpha_Y * *(b + 1464 * OS1_S1 + 1) + one_over_two_p * (*(b + 1259 * OS1_S1 + 0) - alpha_over_p * *(b + 1259 * OS1_S1 + 1));
            *(b + 1691 * OS1_S1 + 0) = Y_PA * *(b + 1465 * OS1_S1 + 0) + alpha_Y * *(b + 1465 * OS1_S1 + 1);
            *(b + 1692 * OS1_S1 + 0) = X_PA * *(b + 1482 * OS1_S1 + 0) + alpha_X * *(b + 1482 * OS1_S1 + 1) + 3 * one_over_two_p * (*(b + 1292 * OS1_S1 + 0) - alpha_over_p * *(b + 1292 * OS1_S1 + 1));
            *(b + 1693 * OS1_S1 + 0) = X_PA * *(b + 1483 * OS1_S1 + 0) + alpha_X * *(b + 1483 * OS1_S1 + 1) + 2 * one_over_two_p * (*(b + 1293 * OS1_S1 + 0) - alpha_over_p * *(b + 1293 * OS1_S1 + 1));
            *(b + 1694 * OS1_S1 + 0) = Z_PA * *(b + 1466 * OS1_S1 + 0) + alpha_Z * *(b + 1466 * OS1_S1 + 1);
            *(b + 1695 * OS1_S1 + 0) = Z_PA * *(b + 1467 * OS1_S1 + 0) + alpha_Z * *(b + 1467 * OS1_S1 + 1) + one_over_two_p * (*(b + 1260 * OS1_S1 + 0) - alpha_over_p * *(b + 1260 * OS1_S1 + 1));
            *(b + 1696 * OS1_S1 + 0) = Z_PA * *(b + 1468 * OS1_S1 + 0) + alpha_Z * *(b + 1468 * OS1_S1 + 1) + 2 * one_over_two_p * (*(b + 1261 * OS1_S1 + 0) - alpha_over_p * *(b + 1261 * OS1_S1 + 1));
            *(b + 1697 * OS1_S1 + 0) = X_PA * *(b + 1487 * OS1_S1 + 0) + alpha_X * *(b + 1487 * OS1_S1 + 1) + 2 * one_over_two_p * (*(b + 1297 * OS1_S1 + 0) - alpha_over_p * *(b + 1297 * OS1_S1 + 1));
            *(b + 1698 * OS1_S1 + 0) = X_PA * *(b + 1488 * OS1_S1 + 0) + alpha_X * *(b + 1488 * OS1_S1 + 1) + 2 * one_over_two_p * (*(b + 1298 * OS1_S1 + 0) - alpha_over_p * *(b + 1298 * OS1_S1 + 1));
            *(b + 1699 * OS1_S1 + 0) = X_PA * *(b + 1489 * OS1_S1 + 0) + alpha_X * *(b + 1489 * OS1_S1 + 1) + 2 * one_over_two_p * (*(b + 1299 * OS1_S1 + 0) - alpha_over_p * *(b + 1299 * OS1_S1 + 1));
            *(b + 1700 * OS1_S1 + 0) = X_PA * *(b + 1490 * OS1_S1 + 0) + alpha_X * *(b + 1490 * OS1_S1 + 1) + 2 * one_over_two_p * (*(b + 1300 * OS1_S1 + 0) - alpha_over_p * *(b + 1300 * OS1_S1 + 1));
            *(b + 1701 * OS1_S1 + 0) = X_PA * *(b + 1491 * OS1_S1 + 0) + alpha_X * *(b + 1491 * OS1_S1 + 1) + 2 * one_over_two_p * (*(b + 1301 * OS1_S1 + 0) - alpha_over_p * *(b + 1301 * OS1_S1 + 1));
            *(b + 1702 * OS1_S1 + 0) = X_PA * *(b + 1492 * OS1_S1 + 0) + alpha_X * *(b + 1492 * OS1_S1 + 1) + 2 * one_over_two_p * (*(b + 1302 * OS1_S1 + 0) - alpha_over_p * *(b + 1302 * OS1_S1 + 1));
            *(b + 1703 * OS1_S1 + 0) = X_PA * *(b + 1493 * OS1_S1 + 0) + alpha_X * *(b + 1493 * OS1_S1 + 1) + 2 * one_over_two_p * (*(b + 1303 * OS1_S1 + 0) - alpha_over_p * *(b + 1303 * OS1_S1 + 1));
            *(b + 1704 * OS1_S1 + 0) = X_PA * *(b + 1494 * OS1_S1 + 0) + alpha_X * *(b + 1494 * OS1_S1 + 1) + 2 * one_over_two_p * (*(b + 1304 * OS1_S1 + 0) - alpha_over_p * *(b + 1304 * OS1_S1 + 1));
            *(b + 1705 * OS1_S1 + 0) = X_PA * *(b + 1495 * OS1_S1 + 0) + alpha_X * *(b + 1495 * OS1_S1 + 1) + 2 * one_over_two_p * (*(b + 1305 * OS1_S1 + 0) - alpha_over_p * *(b + 1305 * OS1_S1 + 1));
            *(b + 1706 * OS1_S1 + 0) = X_PA * *(b + 1496 * OS1_S1 + 0) + alpha_X * *(b + 1496 * OS1_S1 + 1) + 2 * one_over_two_p * (*(b + 1306 * OS1_S1 + 0) - alpha_over_p * *(b + 1306 * OS1_S1 + 1));
            *(b + 1707 * OS1_S1 + 0) = Y_PA * *(b + 1480 * OS1_S1 + 0) + alpha_Y * *(b + 1480 * OS1_S1 + 1) + 2 * one_over_two_p * (*(b + 1274 * OS1_S1 + 0) - alpha_over_p * *(b + 1274 * OS1_S1 + 1));
            *(b + 1708 * OS1_S1 + 0) = Y_PA * *(b + 1481 * OS1_S1 + 0) + alpha_Y * *(b + 1481 * OS1_S1 + 1) + one_over_two_p * (*(b + 1275 * OS1_S1 + 0) - alpha_over_p * *(b + 1275 * OS1_S1 + 1));
            *(b + 1709 * OS1_S1 + 0) = Y_PA * *(b + 1482 * OS1_S1 + 0) + alpha_Y * *(b + 1482 * OS1_S1 + 1);
            *(b + 1710 * OS1_S1 + 0) = X_PA * *(b + 1500 * OS1_S1 + 0) + alpha_X * *(b + 1500 * OS1_S1 + 1) + 2 * one_over_two_p * (*(b + 1310 * OS1_S1 + 0) - alpha_over_p * *(b + 1310 * OS1_S1 + 1));
            *(b + 1711 * OS1_S1 + 0) = X_PA * *(b + 1501 * OS1_S1 + 0) + alpha_X * *(b + 1501 * OS1_S1 + 1) + one_over_two_p * (*(b + 1311 * OS1_S1 + 0) - alpha_over_p * *(b + 1311 * OS1_S1 + 1));
            *(b + 1712 * OS1_S1 + 0) = Z_PA * *(b + 1483 * OS1_S1 + 0) + alpha_Z * *(b + 1483 * OS1_S1 + 1);
            *(b + 1713 * OS1_S1 + 0) = Z_PA * *(b + 1484 * OS1_S1 + 0) + alpha_Z * *(b + 1484 * OS1_S1 + 1) + one_over_two_p * (*(b + 1276 * OS1_S1 + 0) - alpha_over_p * *(b + 1276 * OS1_S1 + 1));
            *(b + 1714 * OS1_S1 + 0) = X_PA * *(b + 1504 * OS1_S1 + 0) + alpha_X * *(b + 1504 * OS1_S1 + 1) + one_over_two_p * (*(b + 1314 * OS1_S1 + 0) - alpha_over_p * *(b + 1314 * OS1_S1 + 1));
            *(b + 1715 * OS1_S1 + 0) = X_PA * *(b + 1505 * OS1_S1 + 0) + alpha_X * *(b + 1505 * OS1_S1 + 1) + one_over_two_p * (*(b + 1315 * OS1_S1 + 0) - alpha_over_p * *(b + 1315 * OS1_S1 + 1));
            *(b + 1716 * OS1_S1 + 0) = X_PA * *(b + 1506 * OS1_S1 + 0) + alpha_X * *(b + 1506 * OS1_S1 + 1) + one_over_two_p * (*(b + 1316 * OS1_S1 + 0) - alpha_over_p * *(b + 1316 * OS1_S1 + 1));
            *(b + 1717 * OS1_S1 + 0) = X_PA * *(b + 1507 * OS1_S1 + 0) + alpha_X * *(b + 1507 * OS1_S1 + 1) + one_over_two_p * (*(b + 1317 * OS1_S1 + 0) - alpha_over_p * *(b + 1317 * OS1_S1 + 1));
            *(b + 1718 * OS1_S1 + 0) = X_PA * *(b + 1508 * OS1_S1 + 0) + alpha_X * *(b + 1508 * OS1_S1 + 1) + one_over_two_p * (*(b + 1318 * OS1_S1 + 0) - alpha_over_p * *(b + 1318 * OS1_S1 + 1));
            *(b + 1719 * OS1_S1 + 0) = X_PA * *(b + 1509 * OS1_S1 + 0) + alpha_X * *(b + 1509 * OS1_S1 + 1) + one_over_two_p * (*(b + 1319 * OS1_S1 + 0) - alpha_over_p * *(b + 1319 * OS1_S1 + 1));
            *(b + 1720 * OS1_S1 + 0) = X_PA * *(b + 1510 * OS1_S1 + 0) + alpha_X * *(b + 1510 * OS1_S1 + 1) + one_over_two_p * (*(b + 1320 * OS1_S1 + 0) - alpha_over_p * *(b + 1320 * OS1_S1 + 1));
            *(b + 1721 * OS1_S1 + 0) = X_PA * *(b + 1511 * OS1_S1 + 0) + alpha_X * *(b + 1511 * OS1_S1 + 1) + one_over_two_p * (*(b + 1321 * OS1_S1 + 0) - alpha_over_p * *(b + 1321 * OS1_S1 + 1));
            *(b + 1722 * OS1_S1 + 0) = X_PA * *(b + 1512 * OS1_S1 + 0) + alpha_X * *(b + 1512 * OS1_S1 + 1) + one_over_two_p * (*(b + 1322 * OS1_S1 + 0) - alpha_over_p * *(b + 1322 * OS1_S1 + 1));
            *(b + 1723 * OS1_S1 + 0) = X_PA * *(b + 1513 * OS1_S1 + 0) + alpha_X * *(b + 1513 * OS1_S1 + 1) + one_over_two_p * (*(b + 1323 * OS1_S1 + 0) - alpha_over_p * *(b + 1323 * OS1_S1 + 1));
            *(b + 1724 * OS1_S1 + 0) = X_PA * *(b + 1514 * OS1_S1 + 0) + alpha_X * *(b + 1514 * OS1_S1 + 1) + one_over_two_p * (*(b + 1324 * OS1_S1 + 0) - alpha_over_p * *(b + 1324 * OS1_S1 + 1));
            *(b + 1725 * OS1_S1 + 0) = X_PA * *(b + 1515 * OS1_S1 + 0) + alpha_X * *(b + 1515 * OS1_S1 + 1) + one_over_two_p * (*(b + 1325 * OS1_S1 + 0) - alpha_over_p * *(b + 1325 * OS1_S1 + 1));
            *(b + 1726 * OS1_S1 + 0) = X_PA * *(b + 1516 * OS1_S1 + 0) + alpha_X * *(b + 1516 * OS1_S1 + 1) + one_over_two_p * (*(b + 1326 * OS1_S1 + 0) - alpha_over_p * *(b + 1326 * OS1_S1 + 1));
            *(b + 1727 * OS1_S1 + 0) = Y_PA * *(b + 1499 * OS1_S1 + 0) + alpha_Y * *(b + 1499 * OS1_S1 + 1) + one_over_two_p * (*(b + 1292 * OS1_S1 + 0) - alpha_over_p * *(b + 1292 * OS1_S1 + 1));
            *(b + 1728 * OS1_S1 + 0) = Y_PA * *(b + 1500 * OS1_S1 + 0) + alpha_Y * *(b + 1500 * OS1_S1 + 1);
            *(b + 1729 * OS1_S1 + 0) = X_PA * *(b + 1519 * OS1_S1 + 0) + alpha_X * *(b + 1519 * OS1_S1 + 1) + one_over_two_p * (*(b + 1329 * OS1_S1 + 0) - alpha_over_p * *(b + 1329 * OS1_S1 + 1));
            *(b + 1730 * OS1_S1 + 0) = X_PA * *(b + 1520 * OS1_S1 + 0) + alpha_X * *(b + 1520 * OS1_S1 + 1);
            *(b + 1731 * OS1_S1 + 0) = Z_PA * *(b + 1501 * OS1_S1 + 0) + alpha_Z * *(b + 1501 * OS1_S1 + 1);
            *(b + 1732 * OS1_S1 + 0) = X_PA * *(b + 1522 * OS1_S1 + 0) + alpha_X * *(b + 1522 * OS1_S1 + 1);
            *(b + 1733 * OS1_S1 + 0) = X_PA * *(b + 1523 * OS1_S1 + 0) + alpha_X * *(b + 1523 * OS1_S1 + 1);
            *(b + 1734 * OS1_S1 + 0) = X_PA * *(b + 1524 * OS1_S1 + 0) + alpha_X * *(b + 1524 * OS1_S1 + 1);
            *(b + 1735 * OS1_S1 + 0) = X_PA * *(b + 1525 * OS1_S1 + 0) + alpha_X * *(b + 1525 * OS1_S1 + 1);
            *(b + 1736 * OS1_S1 + 0) = X_PA * *(b + 1526 * OS1_S1 + 0) + alpha_X * *(b + 1526 * OS1_S1 + 1);
            *(b + 1737 * OS1_S1 + 0) = X_PA * *(b + 1527 * OS1_S1 + 0) + alpha_X * *(b + 1527 * OS1_S1 + 1);
            *(b + 1738 * OS1_S1 + 0) = X_PA * *(b + 1528 * OS1_S1 + 0) + alpha_X * *(b + 1528 * OS1_S1 + 1);
            *(b + 1739 * OS1_S1 + 0) = X_PA * *(b + 1529 * OS1_S1 + 0) + alpha_X * *(b + 1529 * OS1_S1 + 1);
            *(b + 1740 * OS1_S1 + 0) = X_PA * *(b + 1530 * OS1_S1 + 0) + alpha_X * *(b + 1530 * OS1_S1 + 1);
            *(b + 1741 * OS1_S1 + 0) = X_PA * *(b + 1531 * OS1_S1 + 0) + alpha_X * *(b + 1531 * OS1_S1 + 1);
            *(b + 1742 * OS1_S1 + 0) = X_PA * *(b + 1532 * OS1_S1 + 0) + alpha_X * *(b + 1532 * OS1_S1 + 1);
            *(b + 1743 * OS1_S1 + 0) = X_PA * *(b + 1533 * OS1_S1 + 0) + alpha_X * *(b + 1533 * OS1_S1 + 1);
            *(b + 1744 * OS1_S1 + 0) = X_PA * *(b + 1534 * OS1_S1 + 0) + alpha_X * *(b + 1534 * OS1_S1 + 1);
            *(b + 1745 * OS1_S1 + 0) = X_PA * *(b + 1535 * OS1_S1 + 0) + alpha_X * *(b + 1535 * OS1_S1 + 1);
            *(b + 1746 * OS1_S1 + 0) = X_PA * *(b + 1536 * OS1_S1 + 0) + alpha_X * *(b + 1536 * OS1_S1 + 1);
            *(b + 1747 * OS1_S1 + 0) = X_PA * *(b + 1537 * OS1_S1 + 0) + alpha_X * *(b + 1537 * OS1_S1 + 1);
            *(b + 1748 * OS1_S1 + 0) = Y_PA * *(b + 1519 * OS1_S1 + 0) + alpha_Y * *(b + 1519 * OS1_S1 + 1);
            *(b + 1749 * OS1_S1 + 0) = X_PA * *(b + 1539 * OS1_S1 + 0) + alpha_X * *(b + 1539 * OS1_S1 + 1);
            *(b + 1750 * OS1_S1 + 0) = Y_PA * *(b + 1520 * OS1_S1 + 0) + alpha_Y * *(b + 1520 * OS1_S1 + 1) + 19 * one_over_two_p * (*(b + 1311 * OS1_S1 + 0) - alpha_over_p * *(b + 1311 * OS1_S1 + 1));
            *(b + 1751 * OS1_S1 + 0) = Z_PA * *(b + 1520 * OS1_S1 + 0) + alpha_Z * *(b + 1520 * OS1_S1 + 1);
            *(b + 1752 * OS1_S1 + 0) = Z_PA * *(b + 1521 * OS1_S1 + 0) + alpha_Z * *(b + 1521 * OS1_S1 + 1) + one_over_two_p * (*(b + 1311 * OS1_S1 + 0) - alpha_over_p * *(b + 1311 * OS1_S1 + 1));
            *(b + 1753 * OS1_S1 + 0) = Z_PA * *(b + 1522 * OS1_S1 + 0) + alpha_Z * *(b + 1522 * OS1_S1 + 1) + 2 * one_over_two_p * (*(b + 1312 * OS1_S1 + 0) - alpha_over_p * *(b + 1312 * OS1_S1 + 1));
            *(b + 1754 * OS1_S1 + 0) = Z_PA * *(b + 1523 * OS1_S1 + 0) + alpha_Z * *(b + 1523 * OS1_S1 + 1) + 3 * one_over_two_p * (*(b + 1313 * OS1_S1 + 0) - alpha_over_p * *(b + 1313 * OS1_S1 + 1));
            *(b + 1755 * OS1_S1 + 0) = Z_PA * *(b + 1524 * OS1_S1 + 0) + alpha_Z * *(b + 1524 * OS1_S1 + 1) + 4 * one_over_two_p * (*(b + 1314 * OS1_S1 + 0) - alpha_over_p * *(b + 1314 * OS1_S1 + 1));
            *(b + 1756 * OS1_S1 + 0) = Z_PA * *(b + 1525 * OS1_S1 + 0) + alpha_Z * *(b + 1525 * OS1_S1 + 1) + 5 * one_over_two_p * (*(b + 1315 * OS1_S1 + 0) - alpha_over_p * *(b + 1315 * OS1_S1 + 1));
            *(b + 1757 * OS1_S1 + 0) = Z_PA * *(b + 1526 * OS1_S1 + 0) + alpha_Z * *(b + 1526 * OS1_S1 + 1) + 6 * one_over_two_p * (*(b + 1316 * OS1_S1 + 0) - alpha_over_p * *(b + 1316 * OS1_S1 + 1));
            *(b + 1758 * OS1_S1 + 0) = Z_PA * *(b + 1527 * OS1_S1 + 0) + alpha_Z * *(b + 1527 * OS1_S1 + 1) + 7 * one_over_two_p * (*(b + 1317 * OS1_S1 + 0) - alpha_over_p * *(b + 1317 * OS1_S1 + 1));
            *(b + 1759 * OS1_S1 + 0) = Z_PA * *(b + 1528 * OS1_S1 + 0) + alpha_Z * *(b + 1528 * OS1_S1 + 1) + 8 * one_over_two_p * (*(b + 1318 * OS1_S1 + 0) - alpha_over_p * *(b + 1318 * OS1_S1 + 1));
            *(b + 1760 * OS1_S1 + 0) = Z_PA * *(b + 1529 * OS1_S1 + 0) + alpha_Z * *(b + 1529 * OS1_S1 + 1) + 9 * one_over_two_p * (*(b + 1319 * OS1_S1 + 0) - alpha_over_p * *(b + 1319 * OS1_S1 + 1));
            *(b + 1761 * OS1_S1 + 0) = Y_PA * *(b + 1531 * OS1_S1 + 0) + alpha_Y * *(b + 1531 * OS1_S1 + 1) + 8 * one_over_two_p * (*(b + 1322 * OS1_S1 + 0) - alpha_over_p * *(b + 1322 * OS1_S1 + 1));
            *(b + 1762 * OS1_S1 + 0) = Y_PA * *(b + 1532 * OS1_S1 + 0) + alpha_Y * *(b + 1532 * OS1_S1 + 1) + 7 * one_over_two_p * (*(b + 1323 * OS1_S1 + 0) - alpha_over_p * *(b + 1323 * OS1_S1 + 1));
            *(b + 1763 * OS1_S1 + 0) = Y_PA * *(b + 1533 * OS1_S1 + 0) + alpha_Y * *(b + 1533 * OS1_S1 + 1) + 6 * one_over_two_p * (*(b + 1324 * OS1_S1 + 0) - alpha_over_p * *(b + 1324 * OS1_S1 + 1));
            *(b + 1764 * OS1_S1 + 0) = Y_PA * *(b + 1534 * OS1_S1 + 0) + alpha_Y * *(b + 1534 * OS1_S1 + 1) + 5 * one_over_two_p * (*(b + 1325 * OS1_S1 + 0) - alpha_over_p * *(b + 1325 * OS1_S1 + 1));
            *(b + 1765 * OS1_S1 + 0) = Y_PA * *(b + 1535 * OS1_S1 + 0) + alpha_Y * *(b + 1535 * OS1_S1 + 1) + 4 * one_over_two_p * (*(b + 1326 * OS1_S1 + 0) - alpha_over_p * *(b + 1326 * OS1_S1 + 1));
            *(b + 1766 * OS1_S1 + 0) = Y_PA * *(b + 1536 * OS1_S1 + 0) + alpha_Y * *(b + 1536 * OS1_S1 + 1) + 3 * one_over_two_p * (*(b + 1327 * OS1_S1 + 0) - alpha_over_p * *(b + 1327 * OS1_S1 + 1));
            *(b + 1767 * OS1_S1 + 0) = Y_PA * *(b + 1537 * OS1_S1 + 0) + alpha_Y * *(b + 1537 * OS1_S1 + 1) + 2 * one_over_two_p * (*(b + 1328 * OS1_S1 + 0) - alpha_over_p * *(b + 1328 * OS1_S1 + 1));
            *(b + 1768 * OS1_S1 + 0) = Y_PA * *(b + 1538 * OS1_S1 + 0) + alpha_Y * *(b + 1538 * OS1_S1 + 1) + one_over_two_p * (*(b + 1329 * OS1_S1 + 0) - alpha_over_p * *(b + 1329 * OS1_S1 + 1));
            *(b + 1769 * OS1_S1 + 0) = Y_PA * *(b + 1539 * OS1_S1 + 0) + alpha_Y * *(b + 1539 * OS1_S1 + 1);
            *(b + 1770 * OS1_S1 + 0) = Z_PA * *(b + 1539 * OS1_S1 + 0) + alpha_Z * *(b + 1539 * OS1_S1 + 1) + 19 * one_over_two_p * (*(b + 1329 * OS1_S1 + 0) - alpha_over_p * *(b + 1329 * OS1_S1 + 1));
            return;
        }
    }
}
